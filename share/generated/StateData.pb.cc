// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StateData.proto

#include "StateData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace fantasybit {
class BlockMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockMeta>
      _instance;
} _BlockMeta_default_instance_;
class TxMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TxMeta>
      _instance;
} _TxMeta_default_instance_;
class TrMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TrMeta>
      _instance;
} _TrMeta_default_instance_;
class GameMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameMeta>
      _instance;
} _GameMeta_default_instance_;
class DataMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataMeta>
      _instance;
} _DataMeta_default_instance_;
class LeaderBoardMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LeaderBoardMeta>
      _instance;
} _LeaderBoardMeta_default_instance_;
class FantasyNameBalMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FantasyNameBalMeta>
      _instance;
} _FantasyNameBalMeta_default_instance_;
class FantasyNameStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FantasyNameState>
      _instance;
} _FantasyNameState_default_instance_;
class WeekGameStatusMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WeekGameStatusMeta>
      _instance;
} _WeekGameStatusMeta_default_instance_;
class InGameProjMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InGameProjMeta>
      _instance;
} _InGameProjMeta_default_instance_;
class GameResultsMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameResultsMeta>
      _instance;
} _GameResultsMeta_default_instance_;
class GameStatusMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameStatusMeta>
      _instance;
} _GameStatusMeta_default_instance_;
class TeamProjMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TeamProjMeta>
      _instance;
} _TeamProjMeta_default_instance_;
class TeamResultMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TeamResultMeta>
      _instance;
} _TeamResultMeta_default_instance_;
class GamePlayerProjMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GamePlayerProjMeta>
      _instance;
} _GamePlayerProjMeta_default_instance_;
class ProjMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProjMeta>
      _instance;
} _ProjMeta_default_instance_;
class PosMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PosMeta>
      _instance;
} _PosMeta_default_instance_;
class PlayerResultMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerResultMeta>
      _instance;
} _PlayerResultMeta_default_instance_;
class PlayerGameStatsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerGameStats>
      _instance;
} _PlayerGameStats_default_instance_;
class AwardMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AwardMeta>
      _instance;
} _AwardMeta_default_instance_;
class PnlMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PnlMeta>
      _instance;
} _PnlMeta_default_instance_;
class PlayerMarketStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerMarketState>
      _instance;
} _PlayerMarketState_default_instance_;
class LimitBookMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LimitBookMeta>
      _instance;
} _LimitBookMeta_default_instance_;
class MarketTicMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MarketTicMeta>
      _instance;
} _MarketTicMeta_default_instance_;
class OrderMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderMeta>
      _instance;
} _OrderMeta_default_instance_;
class OrderFillMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderFillMeta>
      _instance;
} _OrderFillMeta_default_instance_;
class GlobalStateMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GlobalStateMeta>
      _instance;
} _GlobalStateMeta_default_instance_;
class PlayerMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerMeta>
      _instance;
} _PlayerMeta_default_instance_;
class TeamMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TeamMeta>
      _instance;
} _TeamMeta_default_instance_;
class pbstateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<pbstate>
      _instance;
} _pbstate_default_instance_;
class MerkleTreeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MerkleTree>
      _instance;
} _MerkleTree_default_instance_;
class NewPlayerModelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NewPlayerModel>
      _instance;
} _NewPlayerModel_default_instance_;
class WsReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WsReq>
      _instance;
} _WsReq_default_instance_;
class WSReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WSReply>
      _instance;
} _WSReply_default_instance_;
class GetGlobalStateRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetGlobalStateRep>
      _instance;
} _GetGlobalStateRep_default_instance_;
class GetScheduleRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetScheduleRep>
      _instance;
} _GetScheduleRep_default_instance_;
class CheckNameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckNameReq>
      _instance;
} _CheckNameReq_default_instance_;
class CheckNameRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckNameRep>
      _instance;
} _CheckNameRep_default_instance_;
class Pk2FnameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pk2FnameReq>
      _instance;
} _Pk2FnameReq_default_instance_;
class Pk2FnameRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pk2FnameRep>
      _instance;
} _Pk2FnameRep_default_instance_;
class SubscribeReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeReq>
      _instance;
} _SubscribeReq_default_instance_;
class NameStatusReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameStatusReq>
      _instance;
} _NameStatusReq_default_instance_;
class NameStatusRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NameStatusRep>
      _instance;
} _NameStatusRep_default_instance_;
class GetAllNamesRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetAllNamesRep>
      _instance;
} _GetAllNamesRep_default_instance_;
class TeamRosterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TeamRoster>
      _instance;
} _TeamRoster_default_instance_;
class GameDataRosterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameDataRoster>
      _instance;
} _GameDataRoster_default_instance_;
class GetCurrRostersRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetCurrRostersRep>
      _instance;
} _GetCurrRostersRep_default_instance_;
class ROWMarketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ROWMarket>
      _instance;
} _ROWMarket_default_instance_;
class GetROWMarketRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetROWMarketRep>
      _instance;
} _GetROWMarketRep_default_instance_;
class GetDepthReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDepthReq>
      _instance;
} _GetDepthReq_default_instance_;
class GetDepthRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDepthRep>
      _instance;
} _GetDepthRep_default_instance_;
class AllOdersSymbolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllOdersSymbol>
      _instance;
} _AllOdersSymbol_default_instance_;
class AllOdersFnameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AllOdersFname>
      _instance;
} _AllOdersFname_default_instance_;
class GetOrdersRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOrdersRep>
      _instance;
} _GetOrdersRep_default_instance_;
class GetOrdersReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetOrdersReq>
      _instance;
} _GetOrdersReq_default_instance_;
class GetProjectionReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetProjectionReq>
      _instance;
} _GetProjectionReq_default_instance_;
class PlayerProjDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerProj>
      _instance;
} _PlayerProj_default_instance_;
class ProjByNameDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProjByName>
      _instance;
} _ProjByName_default_instance_;
class GetProjectionRepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetProjectionRep>
      _instance;
} _GetProjectionRep_default_instance_;
class KeyValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<KeyValue>
      _instance;
} _KeyValue_default_instance_;
class BootstrapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bootstrap>
      _instance;
} _Bootstrap_default_instance_;
}  // namespace fantasybit
namespace protobuf_StateData_2eproto {
void InitDefaultsBlockMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_BlockMeta_default_instance_;
    new (ptr) ::fantasybit::BlockMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::BlockMeta::InitAsDefaultInstance();
}

void InitDefaultsBlockMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBlockMetaImpl);
}

void InitDefaultsTxMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoData_2eproto::InitDefaultsTransaction();
  {
    void* ptr = &::fantasybit::_TxMeta_default_instance_;
    new (ptr) ::fantasybit::TxMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::TxMeta::InitAsDefaultInstance();
}

void InitDefaultsTxMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTxMetaImpl);
}

void InitDefaultsTrMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_TrMeta_default_instance_;
    new (ptr) ::fantasybit::TrMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::TrMeta::InitAsDefaultInstance();
}

void InitDefaultsTrMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTrMetaImpl);
}

void InitDefaultsGameMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoData_2eproto::InitDefaultsGameData();
  {
    void* ptr = &::fantasybit::_GameMeta_default_instance_;
    new (ptr) ::fantasybit::GameMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GameMeta::InitAsDefaultInstance();
}

void InitDefaultsGameMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameMetaImpl);
}

void InitDefaultsDataMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoData_2eproto::InitDefaultsData();
  {
    void* ptr = &::fantasybit::_DataMeta_default_instance_;
    new (ptr) ::fantasybit::DataMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::DataMeta::InitAsDefaultInstance();
}

void InitDefaultsDataMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataMetaImpl);
}

void InitDefaultsLeaderBoardMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_LeaderBoardMeta_default_instance_;
    new (ptr) ::fantasybit::LeaderBoardMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::LeaderBoardMeta::InitAsDefaultInstance();
}

void InitDefaultsLeaderBoardMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLeaderBoardMetaImpl);
}

void InitDefaultsFantasyNameBalMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_FantasyNameBalMeta_default_instance_;
    new (ptr) ::fantasybit::FantasyNameBalMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::FantasyNameBalMeta::InitAsDefaultInstance();
}

void InitDefaultsFantasyNameBalMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFantasyNameBalMetaImpl);
}

void InitDefaultsFantasyNameStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_FantasyNameState_default_instance_;
    new (ptr) ::fantasybit::FantasyNameState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::FantasyNameState::InitAsDefaultInstance();
}

void InitDefaultsFantasyNameState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFantasyNameStateImpl);
}

void InitDefaultsWeekGameStatusMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_WeekGameStatusMeta_default_instance_;
    new (ptr) ::fantasybit::WeekGameStatusMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::WeekGameStatusMeta::InitAsDefaultInstance();
}

void InitDefaultsWeekGameStatusMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWeekGameStatusMetaImpl);
}

void InitDefaultsInGameProjMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_InGameProjMeta_default_instance_;
    new (ptr) ::fantasybit::InGameProjMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::InGameProjMeta::InitAsDefaultInstance();
}

void InitDefaultsInGameProjMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsInGameProjMetaImpl);
}

void InitDefaultsGameResultsMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_GameResultsMeta_default_instance_;
    new (ptr) ::fantasybit::GameResultsMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GameResultsMeta::InitAsDefaultInstance();
}

void InitDefaultsGameResultsMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameResultsMetaImpl);
}

void InitDefaultsGameStatusMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StaticData_2eproto::InitDefaultsGameInfo();
  protobuf_StatusData_2eproto::InitDefaultsGameStatus();
  {
    void* ptr = &::fantasybit::_GameStatusMeta_default_instance_;
    new (ptr) ::fantasybit::GameStatusMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GameStatusMeta::InitAsDefaultInstance();
}

void InitDefaultsGameStatusMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameStatusMetaImpl);
}

void InitDefaultsTeamProjMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_TeamProjMeta_default_instance_;
    new (ptr) ::fantasybit::TeamProjMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::TeamProjMeta::InitAsDefaultInstance();
}

void InitDefaultsTeamProjMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTeamProjMetaImpl);
}

void InitDefaultsTeamResultMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_TeamResultMeta_default_instance_;
    new (ptr) ::fantasybit::TeamResultMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::TeamResultMeta::InitAsDefaultInstance();
}

void InitDefaultsTeamResultMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTeamResultMetaImpl);
}

void InitDefaultsGamePlayerProjMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_GamePlayerProjMeta_default_instance_;
    new (ptr) ::fantasybit::GamePlayerProjMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GamePlayerProjMeta::InitAsDefaultInstance();
}

void InitDefaultsGamePlayerProjMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGamePlayerProjMetaImpl);
}

void InitDefaultsProjMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_ProjMeta_default_instance_;
    new (ptr) ::fantasybit::ProjMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::ProjMeta::InitAsDefaultInstance();
}

void InitDefaultsProjMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProjMetaImpl);
}

void InitDefaultsPosMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_PosMeta_default_instance_;
    new (ptr) ::fantasybit::PosMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::PosMeta::InitAsDefaultInstance();
}

void InitDefaultsPosMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPosMetaImpl);
}

void InitDefaultsPlayerResultMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_PlayerResultMeta_default_instance_;
    new (ptr) ::fantasybit::PlayerResultMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::PlayerResultMeta::InitAsDefaultInstance();
}

void InitDefaultsPlayerResultMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerResultMetaImpl);
}

void InitDefaultsPlayerGameStatsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StaticData_2eproto::InitDefaultsStats();
  {
    void* ptr = &::fantasybit::_PlayerGameStats_default_instance_;
    new (ptr) ::fantasybit::PlayerGameStats();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::PlayerGameStats::InitAsDefaultInstance();
}

void InitDefaultsPlayerGameStats() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerGameStatsImpl);
}

void InitDefaultsAwardMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_AwardMeta_default_instance_;
    new (ptr) ::fantasybit::AwardMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::AwardMeta::InitAsDefaultInstance();
}

void InitDefaultsAwardMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAwardMetaImpl);
}

void InitDefaultsPnlMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_PnlMeta_default_instance_;
    new (ptr) ::fantasybit::PnlMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::PnlMeta::InitAsDefaultInstance();
}

void InitDefaultsPnlMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPnlMetaImpl);
}

void InitDefaultsPlayerMarketStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_PlayerMarketState_default_instance_;
    new (ptr) ::fantasybit::PlayerMarketState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::PlayerMarketState::InitAsDefaultInstance();
}

void InitDefaultsPlayerMarketState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerMarketStateImpl);
}

void InitDefaultsLimitBookMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_LimitBookMeta_default_instance_;
    new (ptr) ::fantasybit::LimitBookMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::LimitBookMeta::InitAsDefaultInstance();
}

void InitDefaultsLimitBookMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLimitBookMetaImpl);
}

void InitDefaultsMarketTicMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_MarketTicMeta_default_instance_;
    new (ptr) ::fantasybit::MarketTicMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::MarketTicMeta::InitAsDefaultInstance();
}

void InitDefaultsMarketTicMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMarketTicMetaImpl);
}

void InitDefaultsOrderMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_OrderMeta_default_instance_;
    new (ptr) ::fantasybit::OrderMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::OrderMeta::InitAsDefaultInstance();
}

void InitDefaultsOrderMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrderMetaImpl);
}

void InitDefaultsOrderFillMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_OrderFillMeta_default_instance_;
    new (ptr) ::fantasybit::OrderFillMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::OrderFillMeta::InitAsDefaultInstance();
}

void InitDefaultsOrderFillMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrderFillMetaImpl);
}

void InitDefaultsGlobalStateMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StatusData_2eproto::InitDefaultsGlobalState();
  {
    void* ptr = &::fantasybit::_GlobalStateMeta_default_instance_;
    new (ptr) ::fantasybit::GlobalStateMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GlobalStateMeta::InitAsDefaultInstance();
}

void InitDefaultsGlobalStateMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGlobalStateMetaImpl);
}

void InitDefaultsPlayerMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StaticData_2eproto::InitDefaultsPlayerBase();
  protobuf_StatusData_2eproto::InitDefaultsPlayerStatus();
  {
    void* ptr = &::fantasybit::_PlayerMeta_default_instance_;
    new (ptr) ::fantasybit::PlayerMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::PlayerMeta::InitAsDefaultInstance();
}

void InitDefaultsPlayerMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerMetaImpl);
}

void InitDefaultsTeamMetaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_TeamMeta_default_instance_;
    new (ptr) ::fantasybit::TeamMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::TeamMeta::InitAsDefaultInstance();
}

void InitDefaultsTeamMeta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTeamMetaImpl);
}

void InitDefaultspbstateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_pbstate_default_instance_;
    new (ptr) ::fantasybit::pbstate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::pbstate::InitAsDefaultInstance();
}

void InitDefaultspbstate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultspbstateImpl);
}

void InitDefaultsMerkleTreeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_MerkleTree_default_instance_;
    new (ptr) ::fantasybit::MerkleTree();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::MerkleTree::InitAsDefaultInstance();
}

void InitDefaultsMerkleTree() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMerkleTreeImpl);
}

void InitDefaultsNewPlayerModelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsPlayerMeta();
  {
    void* ptr = &::fantasybit::_NewPlayerModel_default_instance_;
    new (ptr) ::fantasybit::NewPlayerModel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::NewPlayerModel::InitAsDefaultInstance();
}

void InitDefaultsNewPlayerModel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNewPlayerModelImpl);
}

void InitDefaultsWsReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_WsReq_default_instance_;
    new (ptr) ::fantasybit::WsReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::WsReq::InitAsDefaultInstance();
}

void InitDefaultsWsReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWsReqImpl);
}

void InitDefaultsWSReplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsWsReq();
  {
    void* ptr = &::fantasybit::_WSReply_default_instance_;
    new (ptr) ::fantasybit::WSReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::WSReply::InitAsDefaultInstance();
}

void InitDefaultsWSReply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWSReplyImpl);
}

void InitDefaultsGetGlobalStateRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StatusData_2eproto::InitDefaultsGlobalState();
  {
    void* ptr = &::fantasybit::_GetGlobalStateRep_default_instance_;
    new (ptr) ::fantasybit::GetGlobalStateRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetGlobalStateRep::InitAsDefaultInstance();
}

void InitDefaultsGetGlobalStateRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetGlobalStateRepImpl);
}

void InitDefaultsGetScheduleRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoData_2eproto::InitDefaultsScheduleData();
  {
    void* ptr = &::fantasybit::_GetScheduleRep_default_instance_;
    new (ptr) ::fantasybit::GetScheduleRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetScheduleRep::InitAsDefaultInstance();
}

void InitDefaultsGetScheduleRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetScheduleRepImpl);
}

void InitDefaultsCheckNameReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_CheckNameReq_default_instance_;
    new (ptr) ::fantasybit::CheckNameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::CheckNameReq::InitAsDefaultInstance();
}

void InitDefaultsCheckNameReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckNameReqImpl);
}

void InitDefaultsCheckNameRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsCheckNameReq();
  {
    void* ptr = &::fantasybit::_CheckNameRep_default_instance_;
    new (ptr) ::fantasybit::CheckNameRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::CheckNameRep::InitAsDefaultInstance();
}

void InitDefaultsCheckNameRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCheckNameRepImpl);
}

void InitDefaultsPk2FnameReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_Pk2FnameReq_default_instance_;
    new (ptr) ::fantasybit::Pk2FnameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::Pk2FnameReq::InitAsDefaultInstance();
}

void InitDefaultsPk2FnameReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPk2FnameReqImpl);
}

void InitDefaultsPk2FnameRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsPk2FnameReq();
  protobuf_NameData_2eproto::InitDefaultsFantasyNameBal();
  {
    void* ptr = &::fantasybit::_Pk2FnameRep_default_instance_;
    new (ptr) ::fantasybit::Pk2FnameRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::Pk2FnameRep::InitAsDefaultInstance();
}

void InitDefaultsPk2FnameRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPk2FnameRepImpl);
}

void InitDefaultsSubscribeReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_SubscribeReq_default_instance_;
    new (ptr) ::fantasybit::SubscribeReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::SubscribeReq::InitAsDefaultInstance();
}

void InitDefaultsSubscribeReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSubscribeReqImpl);
}

void InitDefaultsNameStatusReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_NameStatusReq_default_instance_;
    new (ptr) ::fantasybit::NameStatusReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::NameStatusReq::InitAsDefaultInstance();
}

void InitDefaultsNameStatusReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNameStatusReqImpl);
}

void InitDefaultsNameStatusRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsNameStatusReq();
  {
    void* ptr = &::fantasybit::_NameStatusRep_default_instance_;
    new (ptr) ::fantasybit::NameStatusRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::NameStatusRep::InitAsDefaultInstance();
}

void InitDefaultsNameStatusRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNameStatusRepImpl);
}

void InitDefaultsGetAllNamesRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_NameData_2eproto::InitDefaultsFantasyNameBal();
  {
    void* ptr = &::fantasybit::_GetAllNamesRep_default_instance_;
    new (ptr) ::fantasybit::GetAllNamesRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetAllNamesRep::InitAsDefaultInstance();
}

void InitDefaultsGetAllNamesRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetAllNamesRepImpl);
}

void InitDefaultsTeamRosterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoData_2eproto::InitDefaultsPlayerData();
  {
    void* ptr = &::fantasybit::_TeamRoster_default_instance_;
    new (ptr) ::fantasybit::TeamRoster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::TeamRoster::InitAsDefaultInstance();
}

void InitDefaultsTeamRoster() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTeamRosterImpl);
}

void InitDefaultsGameDataRosterImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoData_2eproto::InitDefaultsGameData();
  protobuf_StateData_2eproto::InitDefaultsTeamRoster();
  {
    void* ptr = &::fantasybit::_GameDataRoster_default_instance_;
    new (ptr) ::fantasybit::GameDataRoster();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GameDataRoster::InitAsDefaultInstance();
}

void InitDefaultsGameDataRoster() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameDataRosterImpl);
}

void InitDefaultsGetCurrRostersRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsGameDataRoster();
  {
    void* ptr = &::fantasybit::_GetCurrRostersRep_default_instance_;
    new (ptr) ::fantasybit::GetCurrRostersRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetCurrRostersRep::InitAsDefaultInstance();
}

void InitDefaultsGetCurrRostersRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetCurrRostersRepImpl);
}

void InitDefaultsROWMarketImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ExData_2eproto::InitDefaultsMarketQuote();
  protobuf_ProtoData_2eproto::InitDefaultsPlayerData();
  protobuf_ExData_2eproto::InitDefaultsContractOHLC();
  {
    void* ptr = &::fantasybit::_ROWMarket_default_instance_;
    new (ptr) ::fantasybit::ROWMarket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::ROWMarket::InitAsDefaultInstance();
}

void InitDefaultsROWMarket() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsROWMarketImpl);
}

void InitDefaultsGetROWMarketRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsROWMarket();
  {
    void* ptr = &::fantasybit::_GetROWMarketRep_default_instance_;
    new (ptr) ::fantasybit::GetROWMarketRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetROWMarketRep::InitAsDefaultInstance();
}

void InitDefaultsGetROWMarketRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetROWMarketRepImpl);
}

void InitDefaultsGetDepthReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_GetDepthReq_default_instance_;
    new (ptr) ::fantasybit::GetDepthReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetDepthReq::InitAsDefaultInstance();
}

void InitDefaultsGetDepthReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetDepthReqImpl);
}

void InitDefaultsGetDepthRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ExData_2eproto::InitDefaultsDepthItem();
  protobuf_StateData_2eproto::InitDefaultsROWMarket();
  {
    void* ptr = &::fantasybit::_GetDepthRep_default_instance_;
    new (ptr) ::fantasybit::GetDepthRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetDepthRep::InitAsDefaultInstance();
}

void InitDefaultsGetDepthRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetDepthRepImpl);
}

void InitDefaultsAllOdersSymbolImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ExData_2eproto::InitDefaultsOrder();
  {
    void* ptr = &::fantasybit::_AllOdersSymbol_default_instance_;
    new (ptr) ::fantasybit::AllOdersSymbol();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::AllOdersSymbol::InitAsDefaultInstance();
}

void InitDefaultsAllOdersSymbol() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAllOdersSymbolImpl);
}

void InitDefaultsAllOdersFnameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsAllOdersSymbol();
  {
    void* ptr = &::fantasybit::_AllOdersFname_default_instance_;
    new (ptr) ::fantasybit::AllOdersFname();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::AllOdersFname::InitAsDefaultInstance();
}

void InitDefaultsAllOdersFname() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAllOdersFnameImpl);
}

void InitDefaultsGetOrdersRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsGetOrdersReq();
  protobuf_StateData_2eproto::InitDefaultsAllOdersFname();
  {
    void* ptr = &::fantasybit::_GetOrdersRep_default_instance_;
    new (ptr) ::fantasybit::GetOrdersRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetOrdersRep::InitAsDefaultInstance();
}

void InitDefaultsGetOrdersRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetOrdersRepImpl);
}

void InitDefaultsGetOrdersReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_GetOrdersReq_default_instance_;
    new (ptr) ::fantasybit::GetOrdersReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetOrdersReq::InitAsDefaultInstance();
}

void InitDefaultsGetOrdersReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetOrdersReqImpl);
}

void InitDefaultsGetProjectionReqImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_GetProjectionReq_default_instance_;
    new (ptr) ::fantasybit::GetProjectionReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetProjectionReq::InitAsDefaultInstance();
}

void InitDefaultsGetProjectionReq() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetProjectionReqImpl);
}

void InitDefaultsPlayerProjImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_PlayerProj_default_instance_;
    new (ptr) ::fantasybit::PlayerProj();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::PlayerProj::InitAsDefaultInstance();
}

void InitDefaultsPlayerProj() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerProjImpl);
}

void InitDefaultsProjByNameImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsPlayerProj();
  {
    void* ptr = &::fantasybit::_ProjByName_default_instance_;
    new (ptr) ::fantasybit::ProjByName();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::ProjByName::InitAsDefaultInstance();
}

void InitDefaultsProjByName() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProjByNameImpl);
}

void InitDefaultsGetProjectionRepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StateData_2eproto::InitDefaultsProjByName();
  {
    void* ptr = &::fantasybit::_GetProjectionRep_default_instance_;
    new (ptr) ::fantasybit::GetProjectionRep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GetProjectionRep::InitAsDefaultInstance();
}

void InitDefaultsGetProjectionRep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetProjectionRepImpl);
}

void InitDefaultsKeyValueImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_KeyValue_default_instance_;
    new (ptr) ::fantasybit::KeyValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::KeyValue::InitAsDefaultInstance();
}

void InitDefaultsKeyValue() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsKeyValueImpl);
}

void InitDefaultsBootstrapImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_Bootstrap_default_instance_;
    new (ptr) ::fantasybit::Bootstrap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::Bootstrap::InitAsDefaultInstance();
}

void InitDefaultsBootstrap() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBootstrapImpl);
}

::google::protobuf::Metadata file_level_metadata[61];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BlockMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BlockMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BlockMeta, blocknum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BlockMeta, trmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BlockMeta, txmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BlockMeta, pbstateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BlockMeta, prev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BlockMeta, next_),
  5,
  3,
  0,
  4,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TxMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TxMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TxMeta, blocknum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TxMeta, txnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TxMeta, txtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TxMeta, tx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TxMeta, fantasy_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TxMeta, id_),
  4,
  5,
  3,
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TrMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TrMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TrMeta, blocknum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TrMeta, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TrMeta, season_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TrMeta, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TrMeta, gamemetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TrMeta, datametaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TrMeta, txmetaid_),
  4,
  6,
  5,
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameMeta, txmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameMeta, gamedata_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DataMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DataMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DataMeta, txmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DataMeta, data_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LeaderBoardMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LeaderBoardMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LeaderBoardMeta, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LeaderBoardMeta, fnbalmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LeaderBoardMeta, prev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LeaderBoardMeta, next_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, txmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, trmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, public_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, stake_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, awardmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, pnlmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, prev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameBalMeta, next_),
  0,
  1,
  2,
  3,
  8,
  9,
  4,
  5,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, fantasynamebalmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, posmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, ordersmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, projmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, prev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, next_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FantasyNameState, txmetaid_),
  0,
  1,
  2,
  3,
  4,
  6,
  7,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WeekGameStatusMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WeekGameStatusMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WeekGameStatusMeta, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WeekGameStatusMeta, gameresultmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WeekGameStatusMeta, ingameprojmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WeekGameStatusMeta, opengamestatusroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WeekGameStatusMeta, prev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WeekGameStatusMeta, next_),
  5,
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::InGameProjMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::InGameProjMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::InGameProjMeta, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::InGameProjMeta, gamestatusmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::InGameProjMeta, homeprojmeta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::InGameProjMeta, awayprojmeta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::InGameProjMeta, gamedatametaid_),
  0,
  1,
  3,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameResultsMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameResultsMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameResultsMeta, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameResultsMeta, gamestatusmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameResultsMeta, homeresultmeta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameResultsMeta, awayresultmeta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameResultsMeta, resultdatametaid_),
  0,
  1,
  3,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, gameinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, gamesatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, gamemetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, datametaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, prev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, next_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatusMeta, season_),
  0,
  7,
  5,
  6,
  1,
  2,
  3,
  4,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamProjMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamProjMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamProjMeta, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamProjMeta, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamProjMeta, kickofftime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamProjMeta, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamProjMeta, gameplayerprojmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamProjMeta, gamedatametaid_),
  0,
  1,
  4,
  5,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamResultMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamResultMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamResultMeta, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamResultMeta, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamResultMeta, kickofftime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamResultMeta, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamResultMeta, playerresultmetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamResultMeta, resultdatametaid_),
  0,
  1,
  4,
  5,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GamePlayerProjMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GamePlayerProjMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GamePlayerProjMeta, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GamePlayerProjMeta, gamestatusmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GamePlayerProjMeta, projmetaplayerroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GamePlayerProjMeta, posmetaplayerroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GamePlayerProjMeta, gamedatametaid_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjMeta, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjMeta, proj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjMeta, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjMeta, txmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjMeta, prev_),
  0,
  4,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PosMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PosMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PosMeta, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PosMeta, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PosMeta, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PosMeta, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PosMeta, txmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PosMeta, prev_),
  0,
  4,
  5,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerResultMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerResultMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerResultMeta, playergamestatsid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerResultMeta, gamestatusmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerResultMeta, awardmetaplayerroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerResultMeta, pnlmetaplayerroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerResultMeta, resultdatametaid_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerGameStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerGameStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerGameStats, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerGameStats, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerGameStats, stats_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerGameStats, gameid_),
  0,
  3,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AwardMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AwardMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AwardMeta, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AwardMeta, proj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AwardMeta, award_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AwardMeta, projmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AwardMeta, playergamestatsid_),
  0,
  3,
  4,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PnlMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PnlMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PnlMeta, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PnlMeta, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PnlMeta, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PnlMeta, pnl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PnlMeta, posmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PnlMeta, playergamestatsid_),
  0,
  3,
  4,
  5,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMarketState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMarketState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMarketState, limitbookmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMarketState, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMarketState, marketticmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMarketState, locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMarketState, prev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMarketState, next_),
  0,
  1,
  2,
  5,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LimitBookMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LimitBookMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LimitBookMeta, bid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LimitBookMeta, bidsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LimitBookMeta, asksize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LimitBookMeta, ask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LimitBookMeta, bidordermetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::LimitBookMeta, askordermetaroot_),
  2,
  3,
  4,
  5,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicMeta, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicMeta, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicMeta, orderfillhead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicMeta, prev_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, refnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, fname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, buyside_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, txmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, orderfillmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderMeta, prev_),
  6,
  0,
  1,
  7,
  8,
  9,
  2,
  3,
  5,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, refnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, fname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, fillprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, fillsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, buyside_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, txmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFillMeta, prev_),
  4,
  0,
  1,
  5,
  6,
  7,
  8,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalStateMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalStateMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalStateMeta, globalstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalStateMeta, trmetaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalStateMeta, prev_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalStateMeta, next_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMeta, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMeta, player_base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMeta, player_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMeta, datametaid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerMeta, prev_),
  0,
  3,
  4,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamMeta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamMeta, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamMeta, playermetaidroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamMeta, prev_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, schedulestateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, leaderboardstateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, projstateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, posstateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, orderstateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, marketstateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, globalstateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, teamstatemid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::pbstate, fantasynamestateid_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MerkleTree, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MerkleTree, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MerkleTree, root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MerkleTree, leaves_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NewPlayerModel, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NewPlayerModel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NewPlayerModel, players_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WsReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WsReq, _internal_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WsReq, _extensions_),
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WsReq, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WsReq, ctype_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WSReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WSReply, _internal_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WSReply, _extensions_),
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WSReply, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WSReply, ctype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WSReply, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::WSReply, data_),
  2,
  3,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetGlobalStateRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetGlobalStateRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetGlobalStateRep, globalstate_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetScheduleRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetScheduleRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetScheduleRep, scheduledata_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::CheckNameReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::CheckNameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::CheckNameReq, fantasy_name_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::CheckNameRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::CheckNameRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::CheckNameRep, isavail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::CheckNameRep, req_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Pk2FnameReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Pk2FnameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Pk2FnameReq, pk_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Pk2FnameRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Pk2FnameRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Pk2FnameRep, fname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Pk2FnameRep, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Pk2FnameRep, fnb_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::SubscribeReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::SubscribeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::SubscribeReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::SubscribeReq, fchash_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NameStatusReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NameStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NameStatusReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NameStatusReq, pk_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NameStatusRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NameStatusRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NameStatusRep, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::NameStatusRep, req_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetAllNamesRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetAllNamesRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetAllNamesRep, names_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetAllNamesRep, fnb_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamRoster, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamRoster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamRoster, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamRoster, players_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameDataRoster, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameDataRoster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameDataRoster, game_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameDataRoster, homeroster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameDataRoster, awayroster_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetCurrRostersRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetCurrRostersRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetCurrRostersRep, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetCurrRostersRep, gamerosters_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ROWMarket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ROWMarket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ROWMarket, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ROWMarket, quote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ROWMarket, playerdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ROWMarket, ohlc_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetROWMarketRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetROWMarketRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetROWMarketRep, rowmarket_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetDepthReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetDepthReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetDepthReq, pid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetDepthRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetDepthRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetDepthRep, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetDepthRep, depthitems_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetDepthRep, rowmarket_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersSymbol, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersSymbol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersSymbol, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersSymbol, netqty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersSymbol, netprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersSymbol, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersSymbol, pnl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersSymbol, orders_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersFname, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersFname, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersFname, fname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::AllOdersFname, pidorders_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetOrdersRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetOrdersRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetOrdersRep, req_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetOrdersRep, oorders_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetOrdersReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetOrdersReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetOrdersReq, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetOrdersReq, fname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetOrdersReq, fchash_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetProjectionReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetProjectionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetProjectionReq, fname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetProjectionReq, getavg_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerProj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerProj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerProj, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerProj, proj_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjByName, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjByName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjByName, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjByName, playerproj_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjByName, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ProjByName, block_),
  0,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetProjectionRep, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetProjectionRep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetProjectionRep, projs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GetProjectionRep, avg_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::KeyValue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::KeyValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::KeyValue, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::KeyValue, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, blocknum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, season_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, gamemetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, playermetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, fnamemetaroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, previd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, gameresultroot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Bootstrap, posmetaroot_),
  0,
  7,
  8,
  9,
  1,
  2,
  3,
  4,
  5,
  6,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 11, sizeof(::fantasybit::BlockMeta)},
  { 17, 28, sizeof(::fantasybit::TxMeta)},
  { 34, 46, sizeof(::fantasybit::TrMeta)},
  { 53, 60, sizeof(::fantasybit::GameMeta)},
  { 62, 69, sizeof(::fantasybit::DataMeta)},
  { 71, 80, sizeof(::fantasybit::LeaderBoardMeta)},
  { 84, 99, sizeof(::fantasybit::FantasyNameBalMeta)},
  { 109, 122, sizeof(::fantasybit::FantasyNameState)},
  { 130, 141, sizeof(::fantasybit::WeekGameStatusMeta)},
  { 147, 157, sizeof(::fantasybit::InGameProjMeta)},
  { 162, 172, sizeof(::fantasybit::GameResultsMeta)},
  { 177, 191, sizeof(::fantasybit::GameStatusMeta)},
  { 200, 211, sizeof(::fantasybit::TeamProjMeta)},
  { 217, 228, sizeof(::fantasybit::TeamResultMeta)},
  { 234, 244, sizeof(::fantasybit::GamePlayerProjMeta)},
  { 249, 259, sizeof(::fantasybit::ProjMeta)},
  { 264, 275, sizeof(::fantasybit::PosMeta)},
  { 281, 291, sizeof(::fantasybit::PlayerResultMeta)},
  { 296, 305, sizeof(::fantasybit::PlayerGameStats)},
  { 309, 319, sizeof(::fantasybit::AwardMeta)},
  { 324, 335, sizeof(::fantasybit::PnlMeta)},
  { 341, 352, sizeof(::fantasybit::PlayerMarketState)},
  { 358, 369, sizeof(::fantasybit::LimitBookMeta)},
  { 375, 384, sizeof(::fantasybit::MarketTicMeta)},
  { 388, 403, sizeof(::fantasybit::OrderMeta)},
  { 413, 427, sizeof(::fantasybit::OrderFillMeta)},
  { 436, 445, sizeof(::fantasybit::GlobalStateMeta)},
  { 449, 459, sizeof(::fantasybit::PlayerMeta)},
  { 464, 472, sizeof(::fantasybit::TeamMeta)},
  { 475, 489, sizeof(::fantasybit::pbstate)},
  { 498, 505, sizeof(::fantasybit::MerkleTree)},
  { 507, 513, sizeof(::fantasybit::NewPlayerModel)},
  { 514, 521, sizeof(::fantasybit::WsReq)},
  { 523, 532, sizeof(::fantasybit::WSReply)},
  { 536, 542, sizeof(::fantasybit::GetGlobalStateRep)},
  { 543, 549, sizeof(::fantasybit::GetScheduleRep)},
  { 550, 556, sizeof(::fantasybit::CheckNameReq)},
  { 557, 564, sizeof(::fantasybit::CheckNameRep)},
  { 566, 572, sizeof(::fantasybit::Pk2FnameReq)},
  { 573, 581, sizeof(::fantasybit::Pk2FnameRep)},
  { 584, 591, sizeof(::fantasybit::SubscribeReq)},
  { 593, 600, sizeof(::fantasybit::NameStatusReq)},
  { 602, 609, sizeof(::fantasybit::NameStatusRep)},
  { 611, 618, sizeof(::fantasybit::GetAllNamesRep)},
  { 620, 627, sizeof(::fantasybit::TeamRoster)},
  { 629, 637, sizeof(::fantasybit::GameDataRoster)},
  { 640, 647, sizeof(::fantasybit::GetCurrRostersRep)},
  { 649, 658, sizeof(::fantasybit::ROWMarket)},
  { 662, 668, sizeof(::fantasybit::GetROWMarketRep)},
  { 669, 675, sizeof(::fantasybit::GetDepthReq)},
  { 676, 684, sizeof(::fantasybit::GetDepthRep)},
  { 687, 698, sizeof(::fantasybit::AllOdersSymbol)},
  { 704, 711, sizeof(::fantasybit::AllOdersFname)},
  { 713, 720, sizeof(::fantasybit::GetOrdersRep)},
  { 722, 730, sizeof(::fantasybit::GetOrdersReq)},
  { 733, 740, sizeof(::fantasybit::GetProjectionReq)},
  { 742, 749, sizeof(::fantasybit::PlayerProj)},
  { 751, 760, sizeof(::fantasybit::ProjByName)},
  { 764, 771, sizeof(::fantasybit::GetProjectionRep)},
  { 773, 780, sizeof(::fantasybit::KeyValue)},
  { 782, 797, sizeof(::fantasybit::Bootstrap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_BlockMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_TxMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_TrMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GameMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_DataMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_LeaderBoardMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_FantasyNameBalMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_FantasyNameState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_WeekGameStatusMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_InGameProjMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GameResultsMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GameStatusMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_TeamProjMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_TeamResultMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GamePlayerProjMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_ProjMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_PosMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_PlayerResultMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_PlayerGameStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_AwardMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_PnlMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_PlayerMarketState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_LimitBookMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_MarketTicMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_OrderMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_OrderFillMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GlobalStateMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_PlayerMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_TeamMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_pbstate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_MerkleTree_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_NewPlayerModel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_WsReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_WSReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetGlobalStateRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetScheduleRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_CheckNameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_CheckNameRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_Pk2FnameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_Pk2FnameRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_SubscribeReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_NameStatusReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_NameStatusRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetAllNamesRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_TeamRoster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GameDataRoster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetCurrRostersRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_ROWMarket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetROWMarketRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetDepthReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetDepthRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_AllOdersSymbol_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_AllOdersFname_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetOrdersRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetOrdersReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetProjectionReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_PlayerProj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_ProjByName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GetProjectionRep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_KeyValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_Bootstrap_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "StateData.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 61);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\017StateData.proto\022\nfantasybit\032\017ProtoData"
      ".proto\032\016NameData.proto\032\020StaticData.proto"
      "\032\020StatusData.proto\032\014ExData.proto\"r\n\tBloc"
      "kMeta\022\020\n\010blocknum\030( \001(\005\022\020\n\010trmetaid\0302 \001("
      "\014\022\022\n\ntxmetaroot\030\n \001(\014\022\021\n\tpbstateid\030< \001(\014"
      "\022\014\n\004prev\030\024 \001(\014\022\014\n\004next\030\036 \001(\014\"\227\001\n\006TxMeta\022"
      "\020\n\010blocknum\030\n \001(\005\022\r\n\005txnum\030\024 \001(\005\022%\n\006txty"
      "pe\030( \001(\0162\025.fantasybit.TransType\022#\n\002tx\0302 "
      "\001(\0132\027.fantasybit.Transaction\022\024\n\014fantasy_"
      "name\030< \001(\t\022\n\n\002id\030F \001(\014\"\230\001\n\006TrMeta\022\020\n\010blo"
      "cknum\030\n \001(\005\022 \n\004type\030( \001(\0162\022.fantasybit.T"
      "rType\022\016\n\006season\0302 \001(\r\022\014\n\004week\030< \001(\r\022\024\n\014g"
      "amemetaroot\030F \001(\014\022\024\n\014datametaroot\030P \001(\014\022"
      "\020\n\010txmetaid\030d \001(\014\"D\n\010GameMeta\022\020\n\010txmetai"
      "d\030\n \001(\014\022&\n\010gamedata\030\024 \001(\0132\024.fantasybit.G"
      "ameData\"<\n\010DataMeta\022\020\n\010txmetaid\030\n \001(\014\022\036\n"
      "\004data\030\024 \001(\0132\020.fantasybit.Data\"R\n\017LeaderB"
      "oardMeta\022\014\n\004week\030\n \001(\r\022\025\n\rfnbalmetaroot\030"
      "\024 \001(\014\022\014\n\004prev\030\036 \001(\014\022\014\n\004next\030( \001(\014\"\277\001\n\022Fa"
      "ntasyNameBalMeta\022\020\n\010txmetaid\030\n \001(\014\022\020\n\010tr"
      "metaid\030\024 \001(\014\022\014\n\004name\030\031 \001(\t\022\022\n\npublic_key"
      "\030\036 \001(\t\022\014\n\004bits\030# \001(\004\022\r\n\005stake\030( \001(\003\022\025\n\ra"
      "wardmetaroot\0302 \001(\014\022\023\n\013pnlmetaroot\030< \001(\014\022"
      "\014\n\004prev\030F \001(\014\022\014\n\004next\030P \001(\014\"\257\001\n\020FantasyN"
      "ameState\022\014\n\004name\030\001 \001(\t\022\034\n\024fantasynamebal"
      "metaid\030\n \001(\014\022\023\n\013posmetaroot\030\024 \001(\014\022\026\n\016ord"
      "ersmetaroot\030\036 \001(\014\022\024\n\014projmetaroot\030( \001(\014\022"
      "\014\n\004prev\030F \001(\014\022\014\n\004next\030P \001(\014\022\020\n\010txmetaid\030"
      "2 \001(\014\"\222\001\n\022WeekGameStatusMeta\022\014\n\004week\030\n \001"
      "(\r\022\032\n\022gameresultmetaroot\030\024 \001(\014\022\032\n\022ingame"
      "projmetaroot\030\036 \001(\014\022\032\n\022opengamestatusroot"
      "\030( \001(\014\022\014\n\004prev\0302 \001(\014\022\014\n\004next\030< \001(\014\"~\n\016In"
      "GameProjMeta\022\016\n\006gameid\030\024 \001(\t\022\030\n\020gamestat"
      "usmetaid\030( \001(\014\022\024\n\014homeprojmeta\030< \001(\014\022\024\n\014"
      "awayprojmeta\030F \001(\014\022\026\n\016gamedatametaid\0302 \001"
      "(\014\"\205\001\n\017GameResultsMeta\022\016\n\006gameid\030\024 \001(\t\022\030"
      "\n\020gamestatusmetaid\030( \001(\014\022\026\n\016homeresultme"
      "ta\030< \001(\014\022\026\n\016awayresultmeta\030F \001(\014\022\030\n\020resu"
      "ltdatametaid\0302 \001(\014\"\321\001\n\016GameStatusMeta\022\n\n"
      "\002id\030\001 \001(\t\022\014\n\004week\030\002 \001(\005\022&\n\010gameinfo\030\n \001("
      "\0132\024.fantasybit.GameInfo\022)\n\tgamesatus\030\024 \001"
      "(\0132\026.fantasybit.GameStatus\022\022\n\ngamemetaid"
      "\030\036 \001(\014\022\022\n\ndatametaid\030( \001(\014\022\014\n\004prev\0302 \001(\014"
      "\022\014\n\004next\030< \001(\014\022\016\n\006season\030F \001(\005\"\207\001\n\014TeamP"
      "rojMeta\022\016\n\006gameid\030\024 \001(\t\022\014\n\004team\030\036 \001(\t\022\023\n"
      "\013kickofftime\030( \001(\r\022\014\n\004week\0302 \001(\r\022\036\n\026game"
      "playerprojmetaroot\030< \001(\014\022\026\n\016gamedatameta"
      "id\030F \001(\014\"\211\001\n\016TeamResultMeta\022\016\n\006gameid\030\024 "
      "\001(\t\022\014\n\004team\030\036 \001(\t\022\023\n\013kickofftime\030( \001(\r\022\014"
      "\n\004week\0302 \001(\r\022\034\n\024playerresultmetaroot\030< \001"
      "(\014\022\030\n\020resultdatametaid\030F \001(\014\"\217\001\n\022GamePla"
      "yerProjMeta\022\020\n\010playerid\030\024 \001(\t\022\030\n\020gamesta"
      "tusmetaid\030\036 \001(\014\022\032\n\022projmetaplayerroot\030< "
      "\001(\014\022\031\n\021posmetaplayerroot\030F \001(\014\022\026\n\016gameda"
      "tametaid\030P \001(\014\"X\n\010ProjMeta\022\014\n\004name\030\n \001(\t"
      "\022\014\n\004proj\030\024 \001(\005\022\020\n\010playerid\030\036 \001(\t\022\020\n\010txme"
      "taid\030( \001(\014\022\014\n\004prev\0302 \001(\014\"e\n\007PosMeta\022\014\n\004n"
      "ame\030\n \001(\t\022\013\n\003qty\030\024 \001(\005\022\r\n\005price\030\036 \001(\005\022\020\n"
      "\010playerid\030( \001(\t\022\020\n\010txmetaid\0302 \001(\014\022\014\n\004pre"
      "v\030< \001(\014\"\231\001\n\020PlayerResultMeta\022\031\n\021playerga"
      "mestatsid\030\n \001(\014\022\030\n\020gamestatusmetaid\030\036 \001("
      "\014\022\033\n\023awardmetaplayerroot\030< \001(\014\022\031\n\021pnlmet"
      "aplayerroot\030F \001(\014\022\030\n\020resultdatametaid\030P "
      "\001(\014\"e\n\017PlayerGameStats\022\020\n\010playerid\030\024 \001(\t"
      "\022\016\n\006result\030( \001(\002\022 \n\005stats\0302 \001(\0132\021.fantas"
      "ybit.Stats\022\016\n\006gameid\030< \001(\t\"e\n\tAwardMeta\022"
      "\014\n\004name\030\n \001(\t\022\014\n\004proj\030\024 \001(\005\022\r\n\005award\030\036 \001"
      "(\004\022\022\n\nprojmetaid\030( \001(\014\022\031\n\021playergamestat"
      "sid\0302 \001(\014\"n\n\007PnlMeta\022\014\n\004name\030\n \001(\t\022\013\n\003qt"
      "y\030\024 \001(\005\022\r\n\005price\030\036 \001(\005\022\013\n\003pnl\030( \001(\003\022\021\n\tp"
      "osmetaid\0302 \001(\014\022\031\n\021playergamestatsid\030< \001("
      "\014\"\203\001\n\021PlayerMarketState\022\027\n\017limitbookmeta"
      "id\030\n \001(\014\022\020\n\010playerid\030\024 \001(\t\022\027\n\017marketticm"
      "etaid\030\036 \001(\014\022\016\n\006locked\030\037 \001(\010\022\014\n\004prev\030( \001("
      "\014\022\014\n\004next\0302 \001(\014\"\177\n\rLimitBookMeta\022\013\n\003bid\030"
      "\n \001(\005\022\017\n\007bidsize\030\024 \001(\005\022\017\n\007asksize\030\036 \001(\005\022"
      "\013\n\003ask\030( \001(\005\022\030\n\020bidordermetaroot\0302 \001(\014\022\030"
      "\n\020askordermetaroot\030< \001(\014\"Q\n\rMarketTicMet"
      "a\022\r\n\005price\030\024 \001(\005\022\014\n\004size\030\036 \001(\005\022\025\n\rorderf"
      "illhead\030( \001(\014\022\014\n\004prev\0302 \001(\014\"\266\001\n\tOrderMet"
      "a\022\016\n\006refnum\030\001 \001(\005\022\r\n\005fname\030\n \001(\t\022\020\n\010play"
      "erid\030\024 \001(\t\022\017\n\007buyside\030\036 \001(\010\022\014\n\004size\030( \001("
      "\005\022\r\n\005price\0302 \001(\005\022\020\n\010txmetaid\030< \001(\014\022\027\n\017or"
      "derfillmetaid\030F \001(\014\022\021\n\ttimestamp\030K \001(\005\022\014"
      "\n\004prev\030P \001(\014\"\251\001\n\rOrderFillMeta\022\016\n\006refnum"
      "\030\001 \001(\005\022\r\n\005fname\030\n \001(\t\022\020\n\010playerid\030\017 \001(\t\022"
      "\021\n\tfillprice\030\024 \001(\005\022\020\n\010fillsize\030\036 \001(\005\022\017\n\007"
      "buyside\030# \001(\010\022\021\n\ttimestamp\030( \001(\004\022\020\n\010txme"
      "taid\030< \001(\014\022\014\n\004prev\030F \001(\014\"m\n\017GlobalStateM"
      "eta\022,\n\013globalstate\030\n \001(\0132\027.fantasybit.Gl"
      "obalState\022\020\n\010trmetaid\030\024 \001(\014\022\014\n\004prev\030\036 \001("
      "\014\022\014\n\004next\030( \001(\014\"\236\001\n\nPlayerMeta\022\020\n\010player"
      "id\030\n \001(\t\022+\n\013player_base\030\024 \001(\0132\026.fantasyb"
      "it.PlayerBase\022/\n\rplayer_status\030\036 \001(\0132\030.f"
      "antasybit.PlayerStatus\022\022\n\ndatametaid\030( \001"
      "(\014\022\014\n\004prev\0302 \001(\014\"B\n\010TeamMeta\022\016\n\006teamid\030\n"
      " \001(\t\022\030\n\020playermetaidroot\030\024 \001(\014\022\014\n\004prev\030\036"
      " \001(\014\"\335\001\n\007pbstate\022\027\n\017schedulestateid\030\n \001("
      "\014\022\032\n\022leaderboardstateid\030\024 \001(\014\022\023\n\013projsta"
      "teid\030\036 \001(\014\022\022\n\nposstateid\030# \001(\014\022\024\n\014orders"
      "tateid\030( \001(\014\022\025\n\rmarketstateid\0302 \001(\014\022\025\n\rg"
      "lobalstateid\030< \001(\014\022\024\n\014teamstatemid\030F \001(\014"
      "\022\032\n\022fantasynamestateid\030P \001(\014\"*\n\nMerkleTr"
      "ee\022\014\n\004root\030\n \001(\014\022\016\n\006leaves\030\024 \003(\014\"9\n\016NewP"
      "layerModel\022\'\n\007players\030\n \003(\0132\026.fantasybit"
      ".PlayerMeta\"D\n\005WsReq\022\017\n\007version\030\001 \001(\005\022 \n"
      "\005ctype\030\002 \001(\0162\021.fantasybit.CType*\010\010d\020\200\200\200\200"
      "\002\"t\n\007WSReply\022\017\n\007version\030\001 \001(\005\022 \n\005ctype\030\002"
      " \001(\0162\021.fantasybit.CType\022\036\n\003req\030\024 \001(\0132\021.f"
      "antasybit.WsReq\022\014\n\004data\030\036 \001(\t*\010\010d\020\200\200\200\200\002\""
      "\203\001\n\021GetGlobalStateRep\022,\n\013globalstate\030\n \001"
      "(\0132\027.fantasybit.GlobalState2@\n\003rep\022\023.fan"
      "tasybit.WSReply\030\204\007 \001(\0132\035.fantasybit.GetG"
      "lobalStateRep\"\177\n\016GetScheduleRep\022.\n\014sched"
      "uledata\030\n \001(\0132\030.fantasybit.ScheduleData2"
      "=\n\003rep\022\023.fantasybit.WSReply\030\216\007 \001(\0132\032.fan"
      "tasybit.GetScheduleRep\"_\n\014CheckNameReq\022\024"
      "\n\014fantasy_name\030\n \001(\t29\n\003req\022\021.fantasybit"
      ".WsReq\030\310\001 \001(\0132\030.fantasybit.CheckNameReq\""
      "\203\001\n\014CheckNameRep\022\017\n\007isavail\030\n \001(\t\022%\n\003req"
      "\030\024 \001(\0132\030.fantasybit.CheckNameReq2;\n\003rep\022"
      "\023.fantasybit.WSReply\030\310\001 \001(\0132\030.fantasybit"
      ".CheckNameRep\"S\n\013Pk2FnameReq\022\n\n\002pk\030\n \001(\t"
      "28\n\003req\022\021.fantasybit.WsReq\030\254\002 \001(\0132\027.fant"
      "asybit.Pk2FnameReq\"\247\001\n\013Pk2FnameRep\022\r\n\005fn"
      "ame\030\n \001(\t\022$\n\003req\030\024 \001(\0132\027.fantasybit.Pk2F"
      "nameReq\022\'\n\003fnb\030\036 \001(\0132\032.fantasybit.Fantas"
      "yNameBal2:\n\003rep\022\023.fantasybit.WSReply\030\254\002 "
      "\001(\0132\027.fantasybit.Pk2FnameRep\"g\n\014Subscrib"
      "eReq\022\014\n\004name\030\n \001(\t\022\016\n\006fchash\030\036 \001(\00429\n\003re"
      "q\022\021.fantasybit.WsReq\030\336\002 \001(\0132\030.fantasybit"
      ".SubscribeReq\"e\n\rNameStatusReq\022\014\n\004name\030\n"
      " \001(\t\022\n\n\002pk\030\024 \001(\t2:\n\003req\022\021.fantasybit.WsR"
      "eq\030\220\003 \001(\0132\031.fantasybit.NameStatusReq\"\237\001\n"
      "\rNameStatusRep\022(\n\006status\030\n \001(\0162\030.fantasy"
      "bit.MyNameStatus\022&\n\003req\030\024 \001(\0132\031.fantasyb"
      "it.NameStatusReq2<\n\003rep\022\023.fantasybit.WSR"
      "eply\030\220\003 \001(\0132\031.fantasybit.NameStatusRep\"\207"
      "\001\n\016GetAllNamesRep\022\r\n\005names\030\n \003(\t\022\'\n\003fnb\030"
      "\024 \003(\0132\032.fantasybit.FantasyNameBal2=\n\003rep"
      "\022\023.fantasybit.WSReply\030\364\003 \001(\0132\032.fantasybi"
      "t.GetAllNamesRep\"E\n\nTeamRoster\022\016\n\006teamid"
      "\030\n \001(\t\022\'\n\007players\030\024 \003(\0132\026.fantasybit.Pla"
      "yerData\"\221\001\n\016GameDataRoster\022\'\n\tgame_data\030"
      "\n \001(\0132\024.fantasybit.GameData\022*\n\nhomeroste"
      "r\030\024 \001(\0132\026.fantasybit.TeamRoster\022*\n\nawayr"
      "oster\030\036 \001(\0132\026.fantasybit.TeamRoster\"\224\001\n\021"
      "GetCurrRostersRep\022\014\n\004week\030\n \001(\005\022/\n\013gamer"
      "osters\030\024 \003(\0132\032.fantasybit.GameDataRoster"
      "2@\n\003rep\022\023.fantasybit.WSReply\030\230\007 \001(\0132\035.fa"
      "ntasybit.GetCurrRostersRep\"\224\001\n\tROWMarket"
      "\022\013\n\003pid\030\n \001(\t\022&\n\005quote\030\036 \001(\0132\027.fantasybi"
      "t.MarketQuote\022*\n\nplayerdata\030( \001(\0132\026.fant"
      "asybit.PlayerData\022&\n\004ohlc\0302 \001(\0132\030.fantas"
      "ybit.ContractOHLC\"{\n\017GetROWMarketRep\022(\n\t"
      "rowmarket\030\n \003(\0132\025.fantasybit.ROWMarket2>"
      "\n\003rep\022\023.fantasybit.WSReply\030\330\004 \001(\0132\033.fant"
      "asybit.GetROWMarketRep\"T\n\013GetDepthReq\022\013\n"
      "\003pid\030\n \001(\t28\n\003req\022\021.fantasybit.WsReq\030\274\005 "
      "\001(\0132\027.fantasybit.GetDepthReq\"\253\001\n\013GetDept"
      "hRep\022\013\n\003pid\030\n \001(\t\022)\n\ndepthitems\030\024 \003(\0132\025."
      "fantasybit.DepthItem\022(\n\trowmarket\030\036 \001(\0132"
      "\025.fantasybit.ROWMarket2:\n\003rep\022\023.fantasyb"
      "it.WSReply\030\274\005 \001(\0132\027.fantasybit.GetDepthR"
      "ep\"\177\n\016AllOdersSymbol\022\016\n\006symbol\030\n \001(\t\022\016\n\006"
      "netqty\030\036 \001(\005\022\020\n\010netprice\030( \001(\005\022\013\n\003avg\0302 "
      "\001(\001\022\013\n\003pnl\030< \001(\001\022!\n\006orders\030\024 \003(\0132\021.fanta"
      "sybit.Order\"M\n\rAllOdersFname\022\r\n\005fname\030\n "
      "\001(\t\022-\n\tpidorders\030\024 \003(\0132\032.fantasybit.AllO"
      "dersSymbol\"\236\001\n\014GetOrdersRep\022%\n\003req\030\n \001(\013"
      "2\030.fantasybit.GetOrdersReq\022*\n\007oorders\030\024 "
      "\001(\0132\031.fantasybit.AllOdersFname2;\n\003rep\022\023."
      "fantasybit.WSReply\030\240\006 \001(\0132\030.fantasybit.G"
      "etOrdersRep\"x\n\014GetOrdersReq\022\016\n\006symbol\030\n "
      "\001(\t\022\r\n\005fname\030\024 \001(\t\022\016\n\006fchash\030\036 \001(\00429\n\003re"
      "q\022\021.fantasybit.WsReq\030\240\006 \001(\0132\030.fantasybit"
      ".GetOrdersReq\"p\n\020GetProjectionReq\022\r\n\005fna"
      "me\030\024 \001(\t\022\016\n\006getavg\030\036 \001(\0102=\n\003req\022\021.fantas"
      "ybit.WsReq\030\204\007 \001(\0132\034.fantasybit.GetProjec"
      "tionReq\",\n\nPlayerProj\022\020\n\010playerid\030\n \001(\t\022"
      "\014\n\004proj\030\024 \001(\005\"d\n\nProjByName\022\014\n\004name\030\n \001("
      "\t\022*\n\nplayerproj\030\024 \003(\0132\026.fantasybit.Playe"
      "rProj\022\r\n\005count\030( \001(\005\022\r\n\005block\0302 \001(\005\"\237\001\n\020"
      "GetProjectionRep\022%\n\005projs\030\024 \001(\0132\026.fantas"
      "ybit.ProjByName\022#\n\003avg\030\036 \001(\0132\026.fantasybi"
      "t.ProjByName2\?\n\003rep\022\023.fantasybit.WSReply"
      "\030\254\007 \001(\0132\034.fantasybit.GetProjectionRep\"&\n"
      "\010KeyValue\022\013\n\003key\030\n \001(\014\022\r\n\005value\030\024 \001(\014\"\312\001"
      "\n\tBootstrap\022\013\n\003key\030\001 \001(\t\022\020\n\010blocknum\030\002 \001"
      "(\005\022\014\n\004week\030\003 \001(\005\022\016\n\006season\030\004 \001(\005\022\024\n\014game"
      "metaroot\030\n \001(\014\022\026\n\016playermetaroot\030\024 \001(\014\022\025"
      "\n\rfnamemetaroot\030\036 \001(\014\022\016\n\006previd\030( \001(\014\022\026\n"
      "\016gameresultroot\0302 \001(\014\022\023\n\013posmetaroot\030< \001"
      "(\014*\214\002\n\005CType\022\010\n\004NONE\020\000\022\r\n\tCHECKNAME\020\001\022\t\n"
      "\005NEWTX\020\002\022\014\n\010PK2FNAME\020\003\022\r\n\tGETSTATUS\020\004\022\017\n"
      "\013GETALLNAMES\020\005\022\020\n\014GETROWMARKET\020\006\022\014\n\010GETD"
      "EPTH\020\007\022\r\n\tGETORDERS\020\010\022\020\n\014GETPOSITIONS\020\t\022"
      "\022\n\016SUBSCRIBEFNAME\020\n\022\022\n\016GETGLOBALSTATE\020\013\022"
      "\017\n\013GETSCHEDULE\020\014\022\021\n\rGETGAMEROSTER\020\r\022\022\n\016G"
      "ETPROJECTIONS\020\017\022\020\n\014GETGAMESTART\020\020"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7993);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StateData.proto", &protobuf_RegisterTypes);
  ::protobuf_ProtoData_2eproto::AddDescriptors();
  ::protobuf_NameData_2eproto::AddDescriptors();
  ::protobuf_StaticData_2eproto::AddDescriptors();
  ::protobuf_StatusData_2eproto::AddDescriptors();
  ::protobuf_ExData_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_StateData_2eproto
namespace fantasybit {
const ::google::protobuf::EnumDescriptor* CType_descriptor() {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StateData_2eproto::file_level_enum_descriptors[0];
}
bool CType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void BlockMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockMeta::kBlocknumFieldNumber;
const int BlockMeta::kTrmetaidFieldNumber;
const int BlockMeta::kTxmetarootFieldNumber;
const int BlockMeta::kPbstateidFieldNumber;
const int BlockMeta::kPrevFieldNumber;
const int BlockMeta::kNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockMeta::BlockMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsBlockMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.BlockMeta)
}
BlockMeta::BlockMeta(const BlockMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaroot()) {
    txmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaroot_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_next()) {
    next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
  }
  trmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trmetaid()) {
    trmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trmetaid_);
  }
  pbstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pbstateid()) {
    pbstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbstateid_);
  }
  blocknum_ = from.blocknum_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.BlockMeta)
}

void BlockMeta::SharedCtor() {
  _cached_size_ = 0;
  txmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blocknum_ = 0;
}

BlockMeta::~BlockMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.BlockMeta)
  SharedDtor();
}

void BlockMeta::SharedDtor() {
  txmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbstateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockMeta& BlockMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsBlockMeta();
  return *internal_default_instance();
}

BlockMeta* BlockMeta::New(::google::protobuf::Arena* arena) const {
  BlockMeta* n = new BlockMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.BlockMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!txmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!next_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*next_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!trmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*trmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!pbstateid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pbstateid_.UnsafeRawStringPointer())->clear();
    }
  }
  blocknum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BlockMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.BlockMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes txmetaroot = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes next = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_next()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 blocknum = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_blocknum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blocknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes trmetaid = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_trmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pbstateid = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pbstateid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.BlockMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.BlockMeta)
  return false;
#undef DO_
}

void BlockMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.BlockMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes txmetaroot = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->txmetaroot(), output);
  }

  // optional bytes prev = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->prev(), output);
  }

  // optional bytes next = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->next(), output);
  }

  // optional int32 blocknum = 40;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->blocknum(), output);
  }

  // optional bytes trmetaid = 50;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->trmetaid(), output);
  }

  // optional bytes pbstateid = 60;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->pbstateid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.BlockMeta)
}

::google::protobuf::uint8* BlockMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.BlockMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes txmetaroot = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->txmetaroot(), target);
  }

  // optional bytes prev = 20;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->prev(), target);
  }

  // optional bytes next = 30;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->next(), target);
  }

  // optional int32 blocknum = 40;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->blocknum(), target);
  }

  // optional bytes trmetaid = 50;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->trmetaid(), target);
  }

  // optional bytes pbstateid = 60;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->pbstateid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.BlockMeta)
  return target;
}

size_t BlockMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.BlockMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes txmetaroot = 10;
    if (has_txmetaroot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaroot());
    }

    // optional bytes prev = 20;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional bytes next = 30;
    if (has_next()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->next());
    }

    // optional bytes trmetaid = 50;
    if (has_trmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->trmetaid());
    }

    // optional bytes pbstateid = 60;
    if (has_pbstateid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pbstateid());
    }

    // optional int32 blocknum = 40;
    if (has_blocknum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blocknum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.BlockMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.BlockMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.BlockMeta)
    MergeFrom(*source);
  }
}

void BlockMeta::MergeFrom(const BlockMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.BlockMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_txmetaroot();
      txmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaroot_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_next();
      next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_trmetaid();
      trmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trmetaid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_pbstateid();
      pbstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pbstateid_);
    }
    if (cached_has_bits & 0x00000020u) {
      blocknum_ = from.blocknum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BlockMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.BlockMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockMeta::CopyFrom(const BlockMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.BlockMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockMeta::IsInitialized() const {
  return true;
}

void BlockMeta::Swap(BlockMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockMeta::InternalSwap(BlockMeta* other) {
  using std::swap;
  txmetaroot_.Swap(&other->txmetaroot_);
  prev_.Swap(&other->prev_);
  next_.Swap(&other->next_);
  trmetaid_.Swap(&other->trmetaid_);
  pbstateid_.Swap(&other->pbstateid_);
  swap(blocknum_, other->blocknum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TxMeta::InitAsDefaultInstance() {
  ::fantasybit::_TxMeta_default_instance_._instance.get_mutable()->tx_ = const_cast< ::fantasybit::Transaction*>(
      ::fantasybit::Transaction::internal_default_instance());
}
void TxMeta::clear_tx() {
  if (tx_ != NULL) tx_->Clear();
  clear_has_tx();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TxMeta::kBlocknumFieldNumber;
const int TxMeta::kTxnumFieldNumber;
const int TxMeta::kTxtypeFieldNumber;
const int TxMeta::kTxFieldNumber;
const int TxMeta::kFantasyNameFieldNumber;
const int TxMeta::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TxMeta::TxMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsTxMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.TxMeta)
}
TxMeta::TxMeta(const TxMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fantasy_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fantasy_name()) {
    fantasy_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasy_name_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_tx()) {
    tx_ = new ::fantasybit::Transaction(*from.tx_);
  } else {
    tx_ = NULL;
  }
  ::memcpy(&txtype_, &from.txtype_,
    static_cast<size_t>(reinterpret_cast<char*>(&txnum_) -
    reinterpret_cast<char*>(&txtype_)) + sizeof(txnum_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.TxMeta)
}

void TxMeta::SharedCtor() {
  _cached_size_ = 0;
  fantasy_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&txnum_) -
      reinterpret_cast<char*>(&tx_)) + sizeof(txnum_));
}

TxMeta::~TxMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.TxMeta)
  SharedDtor();
}

void TxMeta::SharedDtor() {
  fantasy_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tx_;
}

void TxMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TxMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TxMeta& TxMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsTxMeta();
  return *internal_default_instance();
}

TxMeta* TxMeta::New(::google::protobuf::Arena* arena) const {
  TxMeta* n = new TxMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TxMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.TxMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!fantasy_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fantasy_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(tx_ != NULL);
      tx_->Clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&txtype_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&txnum_) -
        reinterpret_cast<char*>(&txtype_)) + sizeof(txnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TxMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.TxMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 blocknum = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_blocknum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blocknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 txnum = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_txnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &txnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.TransType txtype = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::TransType_IsValid(value)) {
            set_txtype(static_cast< ::fantasybit::TransType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                40, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.Transaction tx = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tx()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string fantasy_name = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fantasy_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fantasy_name().data(), static_cast<int>(this->fantasy_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TxMeta.fantasy_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes id = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.TxMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.TxMeta)
  return false;
#undef DO_
}

void TxMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.TxMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 blocknum = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->blocknum(), output);
  }

  // optional int32 txnum = 20;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->txnum(), output);
  }

  // optional .fantasybit.TransType txtype = 40;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      40, this->txtype(), output);
  }

  // optional .fantasybit.Transaction tx = 50;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->tx_, output);
  }

  // optional string fantasy_name = 60;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fantasy_name().data(), static_cast<int>(this->fantasy_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TxMeta.fantasy_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      60, this->fantasy_name(), output);
  }

  // optional bytes id = 70;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.TxMeta)
}

::google::protobuf::uint8* TxMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.TxMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 blocknum = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->blocknum(), target);
  }

  // optional int32 txnum = 20;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->txnum(), target);
  }

  // optional .fantasybit.TransType txtype = 40;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      40, this->txtype(), target);
  }

  // optional .fantasybit.Transaction tx = 50;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, *this->tx_, deterministic, target);
  }

  // optional string fantasy_name = 60;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fantasy_name().data(), static_cast<int>(this->fantasy_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TxMeta.fantasy_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        60, this->fantasy_name(), target);
  }

  // optional bytes id = 70;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.TxMeta)
  return target;
}

size_t TxMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.TxMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string fantasy_name = 60;
    if (has_fantasy_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fantasy_name());
    }

    // optional bytes id = 70;
    if (has_id()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->id());
    }

    // optional .fantasybit.Transaction tx = 50;
    if (has_tx()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->tx_);
    }

    // optional .fantasybit.TransType txtype = 40;
    if (has_txtype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->txtype());
    }

    // optional int32 blocknum = 10;
    if (has_blocknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blocknum());
    }

    // optional int32 txnum = 20;
    if (has_txnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->txnum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TxMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.TxMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const TxMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TxMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.TxMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.TxMeta)
    MergeFrom(*source);
  }
}

void TxMeta::MergeFrom(const TxMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.TxMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fantasy_name();
      fantasy_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasy_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_tx()->::fantasybit::Transaction::MergeFrom(from.tx());
    }
    if (cached_has_bits & 0x00000008u) {
      txtype_ = from.txtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      blocknum_ = from.blocknum_;
    }
    if (cached_has_bits & 0x00000020u) {
      txnum_ = from.txnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TxMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.TxMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TxMeta::CopyFrom(const TxMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.TxMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TxMeta::IsInitialized() const {
  if (has_tx()) {
    if (!this->tx_->IsInitialized()) return false;
  }
  return true;
}

void TxMeta::Swap(TxMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TxMeta::InternalSwap(TxMeta* other) {
  using std::swap;
  fantasy_name_.Swap(&other->fantasy_name_);
  id_.Swap(&other->id_);
  swap(tx_, other->tx_);
  swap(txtype_, other->txtype_);
  swap(blocknum_, other->blocknum_);
  swap(txnum_, other->txnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TxMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TrMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrMeta::kBlocknumFieldNumber;
const int TrMeta::kTypeFieldNumber;
const int TrMeta::kSeasonFieldNumber;
const int TrMeta::kWeekFieldNumber;
const int TrMeta::kGamemetarootFieldNumber;
const int TrMeta::kDatametarootFieldNumber;
const int TrMeta::kTxmetaidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrMeta::TrMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsTrMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.TrMeta)
}
TrMeta::TrMeta(const TrMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gamemetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamemetaroot()) {
    gamemetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemetaroot_);
  }
  datametaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_datametaroot()) {
    datametaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datametaroot_);
  }
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaid()) {
    txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
  }
  ::memcpy(&week_, &from.week_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&week_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.TrMeta)
}

void TrMeta::SharedCtor() {
  _cached_size_ = 0;
  gamemetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datametaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&week_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&season_) -
      reinterpret_cast<char*>(&week_)) + sizeof(season_));
  type_ = 2;
}

TrMeta::~TrMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.TrMeta)
  SharedDtor();
}

void TrMeta::SharedDtor() {
  gamemetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datametaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TrMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TrMeta& TrMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsTrMeta();
  return *internal_default_instance();
}

TrMeta* TrMeta::New(::google::protobuf::Arena* arena) const {
  TrMeta* n = new TrMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.TrMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gamemetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamemetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!datametaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*datametaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!txmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 120u) {
    ::memset(&week_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&season_) -
        reinterpret_cast<char*>(&week_)) + sizeof(season_));
    type_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TrMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.TrMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 blocknum = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_blocknum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blocknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.TrType type = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::TrType_IsValid(value)) {
            set_type(static_cast< ::fantasybit::TrType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                40, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 season = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_season();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &season_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 week = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamemetaroot = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamemetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes datametaroot = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datametaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes txmetaid = 100;
      case 100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.TrMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.TrMeta)
  return false;
#undef DO_
}

void TrMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.TrMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 blocknum = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->blocknum(), output);
  }

  // optional .fantasybit.TrType type = 40;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      40, this->type(), output);
  }

  // optional uint32 season = 50;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->season(), output);
  }

  // optional uint32 week = 60;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(60, this->week(), output);
  }

  // optional bytes gamemetaroot = 70;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->gamemetaroot(), output);
  }

  // optional bytes datametaroot = 80;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      80, this->datametaroot(), output);
  }

  // optional bytes txmetaid = 100;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      100, this->txmetaid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.TrMeta)
}

::google::protobuf::uint8* TrMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.TrMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 blocknum = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->blocknum(), target);
  }

  // optional .fantasybit.TrType type = 40;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      40, this->type(), target);
  }

  // optional uint32 season = 50;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->season(), target);
  }

  // optional uint32 week = 60;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(60, this->week(), target);
  }

  // optional bytes gamemetaroot = 70;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->gamemetaroot(), target);
  }

  // optional bytes datametaroot = 80;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        80, this->datametaroot(), target);
  }

  // optional bytes txmetaid = 100;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        100, this->txmetaid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.TrMeta)
  return target;
}

size_t TrMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.TrMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes gamemetaroot = 70;
    if (has_gamemetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamemetaroot());
    }

    // optional bytes datametaroot = 80;
    if (has_datametaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->datametaroot());
    }

    // optional bytes txmetaid = 100;
    if (has_txmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaid());
    }

    // optional uint32 week = 60;
    if (has_week()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->week());
    }

    // optional int32 blocknum = 10;
    if (has_blocknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blocknum());
    }

    // optional uint32 season = 50;
    if (has_season()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->season());
    }

    // optional .fantasybit.TrType type = 40;
    if (has_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.TrMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const TrMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TrMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.TrMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.TrMeta)
    MergeFrom(*source);
  }
}

void TrMeta::MergeFrom(const TrMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.TrMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gamemetaroot();
      gamemetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemetaroot_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_datametaroot();
      datametaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datametaroot_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_txmetaid();
      txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
    }
    if (cached_has_bits & 0x00000008u) {
      week_ = from.week_;
    }
    if (cached_has_bits & 0x00000010u) {
      blocknum_ = from.blocknum_;
    }
    if (cached_has_bits & 0x00000020u) {
      season_ = from.season_;
    }
    if (cached_has_bits & 0x00000040u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TrMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.TrMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrMeta::CopyFrom(const TrMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.TrMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrMeta::IsInitialized() const {
  return true;
}

void TrMeta::Swap(TrMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrMeta::InternalSwap(TrMeta* other) {
  using std::swap;
  gamemetaroot_.Swap(&other->gamemetaroot_);
  datametaroot_.Swap(&other->datametaroot_);
  txmetaid_.Swap(&other->txmetaid_);
  swap(week_, other->week_);
  swap(blocknum_, other->blocknum_);
  swap(season_, other->season_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameMeta::InitAsDefaultInstance() {
  ::fantasybit::_GameMeta_default_instance_._instance.get_mutable()->gamedata_ = const_cast< ::fantasybit::GameData*>(
      ::fantasybit::GameData::internal_default_instance());
}
void GameMeta::clear_gamedata() {
  if (gamedata_ != NULL) gamedata_->Clear();
  clear_has_gamedata();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMeta::kTxmetaidFieldNumber;
const int GameMeta::kGamedataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMeta::GameMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGameMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GameMeta)
}
GameMeta::GameMeta(const GameMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaid()) {
    txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
  }
  if (from.has_gamedata()) {
    gamedata_ = new ::fantasybit::GameData(*from.gamedata_);
  } else {
    gamedata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GameMeta)
}

void GameMeta::SharedCtor() {
  _cached_size_ = 0;
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamedata_ = NULL;
}

GameMeta::~GameMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.GameMeta)
  SharedDtor();
}

void GameMeta::SharedDtor() {
  txmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete gamedata_;
}

void GameMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameMeta& GameMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGameMeta();
  return *internal_default_instance();
}

GameMeta* GameMeta::New(::google::protobuf::Arena* arena) const {
  GameMeta* n = new GameMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GameMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!txmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(gamedata_ != NULL);
      gamedata_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GameMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes txmetaid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.GameData gamedata = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gamedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GameMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GameMeta)
  return false;
#undef DO_
}

void GameMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GameMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes txmetaid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->txmetaid(), output);
  }

  // optional .fantasybit.GameData gamedata = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->gamedata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GameMeta)
}

::google::protobuf::uint8* GameMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GameMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes txmetaid = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->txmetaid(), target);
  }

  // optional .fantasybit.GameData gamedata = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->gamedata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GameMeta)
  return target;
}

size_t GameMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GameMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes txmetaid = 10;
    if (has_txmetaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaid());
    }

    // optional .fantasybit.GameData gamedata = 20;
    if (has_gamedata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->gamedata_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GameMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GameMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GameMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GameMeta)
    MergeFrom(*source);
  }
}

void GameMeta::MergeFrom(const GameMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GameMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_txmetaid();
      txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_gamedata()->::fantasybit::GameData::MergeFrom(from.gamedata());
    }
  }
}

void GameMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GameMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMeta::CopyFrom(const GameMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GameMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameMeta::IsInitialized() const {
  return true;
}

void GameMeta::Swap(GameMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMeta::InternalSwap(GameMeta* other) {
  using std::swap;
  txmetaid_.Swap(&other->txmetaid_);
  swap(gamedata_, other->gamedata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataMeta::InitAsDefaultInstance() {
  ::fantasybit::_DataMeta_default_instance_._instance.get_mutable()->data_ = const_cast< ::fantasybit::Data*>(
      ::fantasybit::Data::internal_default_instance());
}
void DataMeta::clear_data() {
  if (data_ != NULL) data_->Clear();
  clear_has_data();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataMeta::kTxmetaidFieldNumber;
const int DataMeta::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataMeta::DataMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsDataMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.DataMeta)
}
DataMeta::DataMeta(const DataMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaid()) {
    txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
  }
  if (from.has_data()) {
    data_ = new ::fantasybit::Data(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.DataMeta)
}

void DataMeta::SharedCtor() {
  _cached_size_ = 0;
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = NULL;
}

DataMeta::~DataMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.DataMeta)
  SharedDtor();
}

void DataMeta::SharedDtor() {
  txmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void DataMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataMeta& DataMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsDataMeta();
  return *internal_default_instance();
}

DataMeta* DataMeta::New(::google::protobuf::Arena* arena) const {
  DataMeta* n = new DataMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.DataMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!txmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(data_ != NULL);
      data_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DataMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.DataMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes txmetaid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.Data data = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.DataMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.DataMeta)
  return false;
#undef DO_
}

void DataMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.DataMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes txmetaid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->txmetaid(), output);
  }

  // optional .fantasybit.Data data = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.DataMeta)
}

::google::protobuf::uint8* DataMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.DataMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes txmetaid = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->txmetaid(), target);
  }

  // optional .fantasybit.Data data = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->data_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.DataMeta)
  return target;
}

size_t DataMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.DataMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes txmetaid = 10;
    if (has_txmetaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaid());
    }

    // optional .fantasybit.Data data = 20;
    if (has_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->data_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.DataMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const DataMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.DataMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.DataMeta)
    MergeFrom(*source);
  }
}

void DataMeta::MergeFrom(const DataMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.DataMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_txmetaid();
      txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_data()->::fantasybit::Data::MergeFrom(from.data());
    }
  }
}

void DataMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.DataMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataMeta::CopyFrom(const DataMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.DataMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataMeta::IsInitialized() const {
  if (has_data()) {
    if (!this->data_->IsInitialized()) return false;
  }
  return true;
}

void DataMeta::Swap(DataMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataMeta::InternalSwap(DataMeta* other) {
  using std::swap;
  txmetaid_.Swap(&other->txmetaid_);
  swap(data_, other->data_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LeaderBoardMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LeaderBoardMeta::kWeekFieldNumber;
const int LeaderBoardMeta::kFnbalmetarootFieldNumber;
const int LeaderBoardMeta::kPrevFieldNumber;
const int LeaderBoardMeta::kNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LeaderBoardMeta::LeaderBoardMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsLeaderBoardMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.LeaderBoardMeta)
}
LeaderBoardMeta::LeaderBoardMeta(const LeaderBoardMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fnbalmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fnbalmetaroot()) {
    fnbalmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fnbalmetaroot_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_next()) {
    next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
  }
  week_ = from.week_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.LeaderBoardMeta)
}

void LeaderBoardMeta::SharedCtor() {
  _cached_size_ = 0;
  fnbalmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  week_ = 0u;
}

LeaderBoardMeta::~LeaderBoardMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.LeaderBoardMeta)
  SharedDtor();
}

void LeaderBoardMeta::SharedDtor() {
  fnbalmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LeaderBoardMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LeaderBoardMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LeaderBoardMeta& LeaderBoardMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsLeaderBoardMeta();
  return *internal_default_instance();
}

LeaderBoardMeta* LeaderBoardMeta::New(::google::protobuf::Arena* arena) const {
  LeaderBoardMeta* n = new LeaderBoardMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LeaderBoardMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.LeaderBoardMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!fnbalmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fnbalmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!next_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*next_.UnsafeRawStringPointer())->clear();
    }
  }
  week_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LeaderBoardMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.LeaderBoardMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 week = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes fnbalmetaroot = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fnbalmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes next = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_next()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.LeaderBoardMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.LeaderBoardMeta)
  return false;
#undef DO_
}

void LeaderBoardMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.LeaderBoardMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 week = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->week(), output);
  }

  // optional bytes fnbalmetaroot = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->fnbalmetaroot(), output);
  }

  // optional bytes prev = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->prev(), output);
  }

  // optional bytes next = 40;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->next(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.LeaderBoardMeta)
}

::google::protobuf::uint8* LeaderBoardMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.LeaderBoardMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 week = 10;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->week(), target);
  }

  // optional bytes fnbalmetaroot = 20;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->fnbalmetaroot(), target);
  }

  // optional bytes prev = 30;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->prev(), target);
  }

  // optional bytes next = 40;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->next(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.LeaderBoardMeta)
  return target;
}

size_t LeaderBoardMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.LeaderBoardMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes fnbalmetaroot = 20;
    if (has_fnbalmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->fnbalmetaroot());
    }

    // optional bytes prev = 30;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional bytes next = 40;
    if (has_next()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->next());
    }

    // optional uint32 week = 10;
    if (has_week()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->week());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LeaderBoardMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.LeaderBoardMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const LeaderBoardMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LeaderBoardMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.LeaderBoardMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.LeaderBoardMeta)
    MergeFrom(*source);
  }
}

void LeaderBoardMeta::MergeFrom(const LeaderBoardMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.LeaderBoardMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fnbalmetaroot();
      fnbalmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fnbalmetaroot_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_next();
      next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
    }
    if (cached_has_bits & 0x00000008u) {
      week_ = from.week_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LeaderBoardMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.LeaderBoardMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeaderBoardMeta::CopyFrom(const LeaderBoardMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.LeaderBoardMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeaderBoardMeta::IsInitialized() const {
  return true;
}

void LeaderBoardMeta::Swap(LeaderBoardMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LeaderBoardMeta::InternalSwap(LeaderBoardMeta* other) {
  using std::swap;
  fnbalmetaroot_.Swap(&other->fnbalmetaroot_);
  prev_.Swap(&other->prev_);
  next_.Swap(&other->next_);
  swap(week_, other->week_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LeaderBoardMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FantasyNameBalMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FantasyNameBalMeta::kTxmetaidFieldNumber;
const int FantasyNameBalMeta::kTrmetaidFieldNumber;
const int FantasyNameBalMeta::kNameFieldNumber;
const int FantasyNameBalMeta::kPublicKeyFieldNumber;
const int FantasyNameBalMeta::kBitsFieldNumber;
const int FantasyNameBalMeta::kStakeFieldNumber;
const int FantasyNameBalMeta::kAwardmetarootFieldNumber;
const int FantasyNameBalMeta::kPnlmetarootFieldNumber;
const int FantasyNameBalMeta::kPrevFieldNumber;
const int FantasyNameBalMeta::kNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FantasyNameBalMeta::FantasyNameBalMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsFantasyNameBalMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.FantasyNameBalMeta)
}
FantasyNameBalMeta::FantasyNameBalMeta(const FantasyNameBalMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaid()) {
    txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
  }
  trmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trmetaid()) {
    trmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trmetaid_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_public_key()) {
    public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
  }
  awardmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_awardmetaroot()) {
    awardmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.awardmetaroot_);
  }
  pnlmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pnlmetaroot()) {
    pnlmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pnlmetaroot_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_next()) {
    next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
  }
  ::memcpy(&bits_, &from.bits_,
    static_cast<size_t>(reinterpret_cast<char*>(&stake_) -
    reinterpret_cast<char*>(&bits_)) + sizeof(stake_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.FantasyNameBalMeta)
}

void FantasyNameBalMeta::SharedCtor() {
  _cached_size_ = 0;
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  awardmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pnlmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bits_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&stake_) -
      reinterpret_cast<char*>(&bits_)) + sizeof(stake_));
}

FantasyNameBalMeta::~FantasyNameBalMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.FantasyNameBalMeta)
  SharedDtor();
}

void FantasyNameBalMeta::SharedDtor() {
  txmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  public_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  awardmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pnlmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FantasyNameBalMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FantasyNameBalMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FantasyNameBalMeta& FantasyNameBalMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsFantasyNameBalMeta();
  return *internal_default_instance();
}

FantasyNameBalMeta* FantasyNameBalMeta::New(::google::protobuf::Arena* arena) const {
  FantasyNameBalMeta* n = new FantasyNameBalMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FantasyNameBalMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.FantasyNameBalMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!txmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!trmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*trmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!public_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*public_key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!awardmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*awardmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!pnlmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pnlmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!next_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*next_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 768u) {
    ::memset(&bits_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&stake_) -
        reinterpret_cast<char*>(&bits_)) + sizeof(stake_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FantasyNameBalMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.FantasyNameBalMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes txmetaid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes trmetaid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_trmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.FantasyNameBalMeta.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string public_key = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_public_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->public_key().data(), static_cast<int>(this->public_key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.FantasyNameBalMeta.public_key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bits = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          set_has_bits();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 stake = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_stake();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &stake_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes awardmetaroot = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_awardmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pnlmetaroot = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pnlmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes next = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_next()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.FantasyNameBalMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.FantasyNameBalMeta)
  return false;
#undef DO_
}

void FantasyNameBalMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.FantasyNameBalMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes txmetaid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->txmetaid(), output);
  }

  // optional bytes trmetaid = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->trmetaid(), output);
  }

  // optional string name = 25;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.FantasyNameBalMeta.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->name(), output);
  }

  // optional string public_key = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.FantasyNameBalMeta.public_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->public_key(), output);
  }

  // optional uint64 bits = 35;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(35, this->bits(), output);
  }

  // optional int64 stake = 40;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(40, this->stake(), output);
  }

  // optional bytes awardmetaroot = 50;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->awardmetaroot(), output);
  }

  // optional bytes pnlmetaroot = 60;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->pnlmetaroot(), output);
  }

  // optional bytes prev = 70;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->prev(), output);
  }

  // optional bytes next = 80;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      80, this->next(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.FantasyNameBalMeta)
}

::google::protobuf::uint8* FantasyNameBalMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.FantasyNameBalMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes txmetaid = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->txmetaid(), target);
  }

  // optional bytes trmetaid = 20;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->trmetaid(), target);
  }

  // optional string name = 25;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.FantasyNameBalMeta.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->name(), target);
  }

  // optional string public_key = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->public_key().data(), static_cast<int>(this->public_key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.FantasyNameBalMeta.public_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->public_key(), target);
  }

  // optional uint64 bits = 35;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(35, this->bits(), target);
  }

  // optional int64 stake = 40;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(40, this->stake(), target);
  }

  // optional bytes awardmetaroot = 50;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->awardmetaroot(), target);
  }

  // optional bytes pnlmetaroot = 60;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->pnlmetaroot(), target);
  }

  // optional bytes prev = 70;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->prev(), target);
  }

  // optional bytes next = 80;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        80, this->next(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.FantasyNameBalMeta)
  return target;
}

size_t FantasyNameBalMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.FantasyNameBalMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes txmetaid = 10;
    if (has_txmetaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaid());
    }

    // optional bytes trmetaid = 20;
    if (has_trmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->trmetaid());
    }

    // optional string name = 25;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string public_key = 30;
    if (has_public_key()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->public_key());
    }

    // optional bytes awardmetaroot = 50;
    if (has_awardmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->awardmetaroot());
    }

    // optional bytes pnlmetaroot = 60;
    if (has_pnlmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pnlmetaroot());
    }

    // optional bytes prev = 70;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional bytes next = 80;
    if (has_next()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->next());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint64 bits = 35;
    if (has_bits()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bits());
    }

    // optional int64 stake = 40;
    if (has_stake()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->stake());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FantasyNameBalMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.FantasyNameBalMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const FantasyNameBalMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FantasyNameBalMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.FantasyNameBalMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.FantasyNameBalMeta)
    MergeFrom(*source);
  }
}

void FantasyNameBalMeta::MergeFrom(const FantasyNameBalMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.FantasyNameBalMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_txmetaid();
      txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_trmetaid();
      trmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trmetaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_public_key();
      public_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.public_key_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_awardmetaroot();
      awardmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.awardmetaroot_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_pnlmetaroot();
      pnlmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pnlmetaroot_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_next();
      next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
    }
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      bits_ = from.bits_;
    }
    if (cached_has_bits & 0x00000200u) {
      stake_ = from.stake_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FantasyNameBalMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.FantasyNameBalMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FantasyNameBalMeta::CopyFrom(const FantasyNameBalMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.FantasyNameBalMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FantasyNameBalMeta::IsInitialized() const {
  return true;
}

void FantasyNameBalMeta::Swap(FantasyNameBalMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FantasyNameBalMeta::InternalSwap(FantasyNameBalMeta* other) {
  using std::swap;
  txmetaid_.Swap(&other->txmetaid_);
  trmetaid_.Swap(&other->trmetaid_);
  name_.Swap(&other->name_);
  public_key_.Swap(&other->public_key_);
  awardmetaroot_.Swap(&other->awardmetaroot_);
  pnlmetaroot_.Swap(&other->pnlmetaroot_);
  prev_.Swap(&other->prev_);
  next_.Swap(&other->next_);
  swap(bits_, other->bits_);
  swap(stake_, other->stake_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FantasyNameBalMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FantasyNameState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FantasyNameState::kNameFieldNumber;
const int FantasyNameState::kFantasynamebalmetaidFieldNumber;
const int FantasyNameState::kPosmetarootFieldNumber;
const int FantasyNameState::kOrdersmetarootFieldNumber;
const int FantasyNameState::kProjmetarootFieldNumber;
const int FantasyNameState::kPrevFieldNumber;
const int FantasyNameState::kNextFieldNumber;
const int FantasyNameState::kTxmetaidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FantasyNameState::FantasyNameState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsFantasyNameState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.FantasyNameState)
}
FantasyNameState::FantasyNameState(const FantasyNameState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  fantasynamebalmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fantasynamebalmetaid()) {
    fantasynamebalmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasynamebalmetaid_);
  }
  posmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_posmetaroot()) {
    posmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posmetaroot_);
  }
  ordersmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ordersmetaroot()) {
    ordersmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ordersmetaroot_);
  }
  projmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_projmetaroot()) {
    projmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projmetaroot_);
  }
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaid()) {
    txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_next()) {
    next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.FantasyNameState)
}

void FantasyNameState::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fantasynamebalmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordersmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  projmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FantasyNameState::~FantasyNameState() {
  // @@protoc_insertion_point(destructor:fantasybit.FantasyNameState)
  SharedDtor();
}

void FantasyNameState::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fantasynamebalmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ordersmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  projmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FantasyNameState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FantasyNameState::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FantasyNameState& FantasyNameState::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsFantasyNameState();
  return *internal_default_instance();
}

FantasyNameState* FantasyNameState::New(::google::protobuf::Arena* arena) const {
  FantasyNameState* n = new FantasyNameState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FantasyNameState::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.FantasyNameState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!fantasynamebalmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fantasynamebalmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!posmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*posmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!ordersmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ordersmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!projmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*projmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!txmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!next_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*next_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FantasyNameState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.FantasyNameState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.FantasyNameState.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes fantasynamebalmetaid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fantasynamebalmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes posmetaroot = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_posmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ordersmetaroot = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ordersmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes projmetaroot = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_projmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes txmetaid = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes next = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_next()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.FantasyNameState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.FantasyNameState)
  return false;
#undef DO_
}

void FantasyNameState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.FantasyNameState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.FantasyNameState.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes fantasynamebalmetaid = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->fantasynamebalmetaid(), output);
  }

  // optional bytes posmetaroot = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->posmetaroot(), output);
  }

  // optional bytes ordersmetaroot = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->ordersmetaroot(), output);
  }

  // optional bytes projmetaroot = 40;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->projmetaroot(), output);
  }

  // optional bytes txmetaid = 50;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->txmetaid(), output);
  }

  // optional bytes prev = 70;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->prev(), output);
  }

  // optional bytes next = 80;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      80, this->next(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.FantasyNameState)
}

::google::protobuf::uint8* FantasyNameState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.FantasyNameState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.FantasyNameState.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes fantasynamebalmetaid = 10;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->fantasynamebalmetaid(), target);
  }

  // optional bytes posmetaroot = 20;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->posmetaroot(), target);
  }

  // optional bytes ordersmetaroot = 30;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->ordersmetaroot(), target);
  }

  // optional bytes projmetaroot = 40;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->projmetaroot(), target);
  }

  // optional bytes txmetaid = 50;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->txmetaid(), target);
  }

  // optional bytes prev = 70;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->prev(), target);
  }

  // optional bytes next = 80;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        80, this->next(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.FantasyNameState)
  return target;
}

size_t FantasyNameState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.FantasyNameState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes fantasynamebalmetaid = 10;
    if (has_fantasynamebalmetaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->fantasynamebalmetaid());
    }

    // optional bytes posmetaroot = 20;
    if (has_posmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->posmetaroot());
    }

    // optional bytes ordersmetaroot = 30;
    if (has_ordersmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ordersmetaroot());
    }

    // optional bytes projmetaroot = 40;
    if (has_projmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->projmetaroot());
    }

    // optional bytes txmetaid = 50;
    if (has_txmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaid());
    }

    // optional bytes prev = 70;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional bytes next = 80;
    if (has_next()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->next());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FantasyNameState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.FantasyNameState)
  GOOGLE_DCHECK_NE(&from, this);
  const FantasyNameState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FantasyNameState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.FantasyNameState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.FantasyNameState)
    MergeFrom(*source);
  }
}

void FantasyNameState::MergeFrom(const FantasyNameState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.FantasyNameState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_fantasynamebalmetaid();
      fantasynamebalmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasynamebalmetaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_posmetaroot();
      posmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posmetaroot_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_ordersmetaroot();
      ordersmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ordersmetaroot_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_projmetaroot();
      projmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projmetaroot_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_txmetaid();
      txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_next();
      next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
    }
  }
}

void FantasyNameState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.FantasyNameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FantasyNameState::CopyFrom(const FantasyNameState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.FantasyNameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FantasyNameState::IsInitialized() const {
  return true;
}

void FantasyNameState::Swap(FantasyNameState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FantasyNameState::InternalSwap(FantasyNameState* other) {
  using std::swap;
  name_.Swap(&other->name_);
  fantasynamebalmetaid_.Swap(&other->fantasynamebalmetaid_);
  posmetaroot_.Swap(&other->posmetaroot_);
  ordersmetaroot_.Swap(&other->ordersmetaroot_);
  projmetaroot_.Swap(&other->projmetaroot_);
  txmetaid_.Swap(&other->txmetaid_);
  prev_.Swap(&other->prev_);
  next_.Swap(&other->next_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FantasyNameState::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WeekGameStatusMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WeekGameStatusMeta::kWeekFieldNumber;
const int WeekGameStatusMeta::kGameresultmetarootFieldNumber;
const int WeekGameStatusMeta::kIngameprojmetarootFieldNumber;
const int WeekGameStatusMeta::kOpengamestatusrootFieldNumber;
const int WeekGameStatusMeta::kPrevFieldNumber;
const int WeekGameStatusMeta::kNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WeekGameStatusMeta::WeekGameStatusMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsWeekGameStatusMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.WeekGameStatusMeta)
}
WeekGameStatusMeta::WeekGameStatusMeta(const WeekGameStatusMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameresultmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameresultmetaroot()) {
    gameresultmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameresultmetaroot_);
  }
  ingameprojmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ingameprojmetaroot()) {
    ingameprojmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ingameprojmetaroot_);
  }
  opengamestatusroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_opengamestatusroot()) {
    opengamestatusroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opengamestatusroot_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_next()) {
    next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
  }
  week_ = from.week_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.WeekGameStatusMeta)
}

void WeekGameStatusMeta::SharedCtor() {
  _cached_size_ = 0;
  gameresultmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingameprojmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opengamestatusroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  week_ = 0u;
}

WeekGameStatusMeta::~WeekGameStatusMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.WeekGameStatusMeta)
  SharedDtor();
}

void WeekGameStatusMeta::SharedDtor() {
  gameresultmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingameprojmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  opengamestatusroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WeekGameStatusMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WeekGameStatusMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WeekGameStatusMeta& WeekGameStatusMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsWeekGameStatusMeta();
  return *internal_default_instance();
}

WeekGameStatusMeta* WeekGameStatusMeta::New(::google::protobuf::Arena* arena) const {
  WeekGameStatusMeta* n = new WeekGameStatusMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WeekGameStatusMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.WeekGameStatusMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gameresultmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gameresultmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!ingameprojmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ingameprojmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!opengamestatusroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*opengamestatusroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!next_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*next_.UnsafeRawStringPointer())->clear();
    }
  }
  week_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WeekGameStatusMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.WeekGameStatusMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 week = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gameresultmetaroot = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gameresultmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes ingameprojmetaroot = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ingameprojmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes opengamestatusroot = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_opengamestatusroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes next = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_next()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.WeekGameStatusMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.WeekGameStatusMeta)
  return false;
#undef DO_
}

void WeekGameStatusMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.WeekGameStatusMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 week = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->week(), output);
  }

  // optional bytes gameresultmetaroot = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->gameresultmetaroot(), output);
  }

  // optional bytes ingameprojmetaroot = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->ingameprojmetaroot(), output);
  }

  // optional bytes opengamestatusroot = 40;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->opengamestatusroot(), output);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->prev(), output);
  }

  // optional bytes next = 60;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->next(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.WeekGameStatusMeta)
}

::google::protobuf::uint8* WeekGameStatusMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.WeekGameStatusMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 week = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->week(), target);
  }

  // optional bytes gameresultmetaroot = 20;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->gameresultmetaroot(), target);
  }

  // optional bytes ingameprojmetaroot = 30;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->ingameprojmetaroot(), target);
  }

  // optional bytes opengamestatusroot = 40;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->opengamestatusroot(), target);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->prev(), target);
  }

  // optional bytes next = 60;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->next(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.WeekGameStatusMeta)
  return target;
}

size_t WeekGameStatusMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.WeekGameStatusMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes gameresultmetaroot = 20;
    if (has_gameresultmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gameresultmetaroot());
    }

    // optional bytes ingameprojmetaroot = 30;
    if (has_ingameprojmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->ingameprojmetaroot());
    }

    // optional bytes opengamestatusroot = 40;
    if (has_opengamestatusroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->opengamestatusroot());
    }

    // optional bytes prev = 50;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional bytes next = 60;
    if (has_next()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->next());
    }

    // optional uint32 week = 10;
    if (has_week()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->week());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WeekGameStatusMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.WeekGameStatusMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const WeekGameStatusMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WeekGameStatusMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.WeekGameStatusMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.WeekGameStatusMeta)
    MergeFrom(*source);
  }
}

void WeekGameStatusMeta::MergeFrom(const WeekGameStatusMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.WeekGameStatusMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gameresultmetaroot();
      gameresultmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameresultmetaroot_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_ingameprojmetaroot();
      ingameprojmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ingameprojmetaroot_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_opengamestatusroot();
      opengamestatusroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opengamestatusroot_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_next();
      next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
    }
    if (cached_has_bits & 0x00000020u) {
      week_ = from.week_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WeekGameStatusMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.WeekGameStatusMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WeekGameStatusMeta::CopyFrom(const WeekGameStatusMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.WeekGameStatusMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WeekGameStatusMeta::IsInitialized() const {
  return true;
}

void WeekGameStatusMeta::Swap(WeekGameStatusMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WeekGameStatusMeta::InternalSwap(WeekGameStatusMeta* other) {
  using std::swap;
  gameresultmetaroot_.Swap(&other->gameresultmetaroot_);
  ingameprojmetaroot_.Swap(&other->ingameprojmetaroot_);
  opengamestatusroot_.Swap(&other->opengamestatusroot_);
  prev_.Swap(&other->prev_);
  next_.Swap(&other->next_);
  swap(week_, other->week_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WeekGameStatusMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InGameProjMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InGameProjMeta::kGameidFieldNumber;
const int InGameProjMeta::kGamestatusmetaidFieldNumber;
const int InGameProjMeta::kHomeprojmetaFieldNumber;
const int InGameProjMeta::kAwayprojmetaFieldNumber;
const int InGameProjMeta::kGamedatametaidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InGameProjMeta::InGameProjMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsInGameProjMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.InGameProjMeta)
}
InGameProjMeta::InGameProjMeta(const InGameProjMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameid()) {
    gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
  }
  gamestatusmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamestatusmetaid()) {
    gamestatusmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamestatusmetaid_);
  }
  gamedatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamedatametaid()) {
    gamedatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedatametaid_);
  }
  homeprojmeta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_homeprojmeta()) {
    homeprojmeta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homeprojmeta_);
  }
  awayprojmeta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_awayprojmeta()) {
    awayprojmeta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.awayprojmeta_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.InGameProjMeta)
}

void InGameProjMeta::SharedCtor() {
  _cached_size_ = 0;
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamestatusmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamedatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homeprojmeta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  awayprojmeta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InGameProjMeta::~InGameProjMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.InGameProjMeta)
  SharedDtor();
}

void InGameProjMeta::SharedDtor() {
  gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamestatusmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamedatametaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homeprojmeta_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  awayprojmeta_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InGameProjMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InGameProjMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InGameProjMeta& InGameProjMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsInGameProjMeta();
  return *internal_default_instance();
}

InGameProjMeta* InGameProjMeta::New(::google::protobuf::Arena* arena) const {
  InGameProjMeta* n = new InGameProjMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InGameProjMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.InGameProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gameid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gameid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!gamestatusmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamestatusmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!gamedatametaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamedatametaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!homeprojmeta_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*homeprojmeta_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!awayprojmeta_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*awayprojmeta_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InGameProjMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.InGameProjMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gameid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameid().data(), static_cast<int>(this->gameid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.InGameProjMeta.gameid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamestatusmetaid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamestatusmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamedatametaid = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamedatametaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes homeprojmeta = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_homeprojmeta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes awayprojmeta = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_awayprojmeta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.InGameProjMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.InGameProjMeta)
  return false;
#undef DO_
}

void InGameProjMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.InGameProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.InGameProjMeta.gameid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->gameid(), output);
  }

  // optional bytes gamestatusmetaid = 40;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->gamestatusmetaid(), output);
  }

  // optional bytes gamedatametaid = 50;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->gamedatametaid(), output);
  }

  // optional bytes homeprojmeta = 60;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->homeprojmeta(), output);
  }

  // optional bytes awayprojmeta = 70;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->awayprojmeta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.InGameProjMeta)
}

::google::protobuf::uint8* InGameProjMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.InGameProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.InGameProjMeta.gameid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->gameid(), target);
  }

  // optional bytes gamestatusmetaid = 40;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->gamestatusmetaid(), target);
  }

  // optional bytes gamedatametaid = 50;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->gamedatametaid(), target);
  }

  // optional bytes homeprojmeta = 60;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->homeprojmeta(), target);
  }

  // optional bytes awayprojmeta = 70;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->awayprojmeta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.InGameProjMeta)
  return target;
}

size_t InGameProjMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.InGameProjMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string gameid = 20;
    if (has_gameid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameid());
    }

    // optional bytes gamestatusmetaid = 40;
    if (has_gamestatusmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamestatusmetaid());
    }

    // optional bytes gamedatametaid = 50;
    if (has_gamedatametaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamedatametaid());
    }

    // optional bytes homeprojmeta = 60;
    if (has_homeprojmeta()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->homeprojmeta());
    }

    // optional bytes awayprojmeta = 70;
    if (has_awayprojmeta()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->awayprojmeta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InGameProjMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.InGameProjMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const InGameProjMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InGameProjMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.InGameProjMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.InGameProjMeta)
    MergeFrom(*source);
  }
}

void InGameProjMeta::MergeFrom(const InGameProjMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.InGameProjMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gameid();
      gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gamestatusmetaid();
      gamestatusmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamestatusmetaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_gamedatametaid();
      gamedatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedatametaid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_homeprojmeta();
      homeprojmeta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homeprojmeta_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_awayprojmeta();
      awayprojmeta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.awayprojmeta_);
    }
  }
}

void InGameProjMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.InGameProjMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InGameProjMeta::CopyFrom(const InGameProjMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.InGameProjMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InGameProjMeta::IsInitialized() const {
  return true;
}

void InGameProjMeta::Swap(InGameProjMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InGameProjMeta::InternalSwap(InGameProjMeta* other) {
  using std::swap;
  gameid_.Swap(&other->gameid_);
  gamestatusmetaid_.Swap(&other->gamestatusmetaid_);
  gamedatametaid_.Swap(&other->gamedatametaid_);
  homeprojmeta_.Swap(&other->homeprojmeta_);
  awayprojmeta_.Swap(&other->awayprojmeta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InGameProjMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameResultsMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameResultsMeta::kGameidFieldNumber;
const int GameResultsMeta::kGamestatusmetaidFieldNumber;
const int GameResultsMeta::kHomeresultmetaFieldNumber;
const int GameResultsMeta::kAwayresultmetaFieldNumber;
const int GameResultsMeta::kResultdatametaidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameResultsMeta::GameResultsMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGameResultsMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GameResultsMeta)
}
GameResultsMeta::GameResultsMeta(const GameResultsMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameid()) {
    gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
  }
  gamestatusmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamestatusmetaid()) {
    gamestatusmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamestatusmetaid_);
  }
  resultdatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_resultdatametaid()) {
    resultdatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resultdatametaid_);
  }
  homeresultmeta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_homeresultmeta()) {
    homeresultmeta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homeresultmeta_);
  }
  awayresultmeta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_awayresultmeta()) {
    awayresultmeta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.awayresultmeta_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GameResultsMeta)
}

void GameResultsMeta::SharedCtor() {
  _cached_size_ = 0;
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamestatusmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resultdatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homeresultmeta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  awayresultmeta_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GameResultsMeta::~GameResultsMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.GameResultsMeta)
  SharedDtor();
}

void GameResultsMeta::SharedDtor() {
  gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamestatusmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resultdatametaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  homeresultmeta_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  awayresultmeta_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameResultsMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameResultsMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameResultsMeta& GameResultsMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGameResultsMeta();
  return *internal_default_instance();
}

GameResultsMeta* GameResultsMeta::New(::google::protobuf::Arena* arena) const {
  GameResultsMeta* n = new GameResultsMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameResultsMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GameResultsMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gameid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gameid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!gamestatusmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamestatusmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!resultdatametaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*resultdatametaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!homeresultmeta_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*homeresultmeta_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!awayresultmeta_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*awayresultmeta_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameResultsMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GameResultsMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gameid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameid().data(), static_cast<int>(this->gameid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GameResultsMeta.gameid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamestatusmetaid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamestatusmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes resultdatametaid = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resultdatametaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes homeresultmeta = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_homeresultmeta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes awayresultmeta = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_awayresultmeta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GameResultsMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GameResultsMeta)
  return false;
#undef DO_
}

void GameResultsMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GameResultsMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GameResultsMeta.gameid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->gameid(), output);
  }

  // optional bytes gamestatusmetaid = 40;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->gamestatusmetaid(), output);
  }

  // optional bytes resultdatametaid = 50;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->resultdatametaid(), output);
  }

  // optional bytes homeresultmeta = 60;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->homeresultmeta(), output);
  }

  // optional bytes awayresultmeta = 70;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->awayresultmeta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GameResultsMeta)
}

::google::protobuf::uint8* GameResultsMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GameResultsMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GameResultsMeta.gameid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->gameid(), target);
  }

  // optional bytes gamestatusmetaid = 40;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->gamestatusmetaid(), target);
  }

  // optional bytes resultdatametaid = 50;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->resultdatametaid(), target);
  }

  // optional bytes homeresultmeta = 60;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->homeresultmeta(), target);
  }

  // optional bytes awayresultmeta = 70;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->awayresultmeta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GameResultsMeta)
  return target;
}

size_t GameResultsMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GameResultsMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string gameid = 20;
    if (has_gameid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameid());
    }

    // optional bytes gamestatusmetaid = 40;
    if (has_gamestatusmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamestatusmetaid());
    }

    // optional bytes resultdatametaid = 50;
    if (has_resultdatametaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->resultdatametaid());
    }

    // optional bytes homeresultmeta = 60;
    if (has_homeresultmeta()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->homeresultmeta());
    }

    // optional bytes awayresultmeta = 70;
    if (has_awayresultmeta()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->awayresultmeta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameResultsMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GameResultsMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GameResultsMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameResultsMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GameResultsMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GameResultsMeta)
    MergeFrom(*source);
  }
}

void GameResultsMeta::MergeFrom(const GameResultsMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GameResultsMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gameid();
      gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gamestatusmetaid();
      gamestatusmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamestatusmetaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_resultdatametaid();
      resultdatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resultdatametaid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_homeresultmeta();
      homeresultmeta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.homeresultmeta_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_awayresultmeta();
      awayresultmeta_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.awayresultmeta_);
    }
  }
}

void GameResultsMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GameResultsMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameResultsMeta::CopyFrom(const GameResultsMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GameResultsMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameResultsMeta::IsInitialized() const {
  return true;
}

void GameResultsMeta::Swap(GameResultsMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameResultsMeta::InternalSwap(GameResultsMeta* other) {
  using std::swap;
  gameid_.Swap(&other->gameid_);
  gamestatusmetaid_.Swap(&other->gamestatusmetaid_);
  resultdatametaid_.Swap(&other->resultdatametaid_);
  homeresultmeta_.Swap(&other->homeresultmeta_);
  awayresultmeta_.Swap(&other->awayresultmeta_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameResultsMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameStatusMeta::InitAsDefaultInstance() {
  ::fantasybit::_GameStatusMeta_default_instance_._instance.get_mutable()->gameinfo_ = const_cast< ::fantasybit::GameInfo*>(
      ::fantasybit::GameInfo::internal_default_instance());
  ::fantasybit::_GameStatusMeta_default_instance_._instance.get_mutable()->gamesatus_ = const_cast< ::fantasybit::GameStatus*>(
      ::fantasybit::GameStatus::internal_default_instance());
}
void GameStatusMeta::clear_gameinfo() {
  if (gameinfo_ != NULL) gameinfo_->Clear();
  clear_has_gameinfo();
}
void GameStatusMeta::clear_gamesatus() {
  if (gamesatus_ != NULL) gamesatus_->Clear();
  clear_has_gamesatus();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameStatusMeta::kIdFieldNumber;
const int GameStatusMeta::kWeekFieldNumber;
const int GameStatusMeta::kGameinfoFieldNumber;
const int GameStatusMeta::kGamesatusFieldNumber;
const int GameStatusMeta::kGamemetaidFieldNumber;
const int GameStatusMeta::kDatametaidFieldNumber;
const int GameStatusMeta::kPrevFieldNumber;
const int GameStatusMeta::kNextFieldNumber;
const int GameStatusMeta::kSeasonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameStatusMeta::GameStatusMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGameStatusMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GameStatusMeta)
}
GameStatusMeta::GameStatusMeta(const GameStatusMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  gamemetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamemetaid()) {
    gamemetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemetaid_);
  }
  datametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_datametaid()) {
    datametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datametaid_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_next()) {
    next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
  }
  if (from.has_gameinfo()) {
    gameinfo_ = new ::fantasybit::GameInfo(*from.gameinfo_);
  } else {
    gameinfo_ = NULL;
  }
  if (from.has_gamesatus()) {
    gamesatus_ = new ::fantasybit::GameStatus(*from.gamesatus_);
  } else {
    gamesatus_ = NULL;
  }
  ::memcpy(&week_, &from.week_,
    static_cast<size_t>(reinterpret_cast<char*>(&season_) -
    reinterpret_cast<char*>(&week_)) + sizeof(season_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.GameStatusMeta)
}

void GameStatusMeta::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamemetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&gameinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&season_) -
      reinterpret_cast<char*>(&gameinfo_)) + sizeof(season_));
}

GameStatusMeta::~GameStatusMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.GameStatusMeta)
  SharedDtor();
}

void GameStatusMeta::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamemetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datametaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete gameinfo_;
  if (this != internal_default_instance()) delete gamesatus_;
}

void GameStatusMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameStatusMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameStatusMeta& GameStatusMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGameStatusMeta();
  return *internal_default_instance();
}

GameStatusMeta* GameStatusMeta::New(::google::protobuf::Arena* arena) const {
  GameStatusMeta* n = new GameStatusMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameStatusMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GameStatusMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*id_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!gamemetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamemetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!datametaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*datametaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!next_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*next_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(gameinfo_ != NULL);
      gameinfo_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(gamesatus_ != NULL);
      gamesatus_->Clear();
    }
  }
  week_ = 0;
  season_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameStatusMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GameStatusMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GameStatusMeta.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 week = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.GameInfo gameinfo = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gameinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.GameStatus gamesatus = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gamesatus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamemetaid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamemetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes datametaid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datametaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes next = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_next()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 season = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 560 & 0xFF */)) {
          set_has_season();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &season_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GameStatusMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GameStatusMeta)
  return false;
#undef DO_
}

void GameStatusMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GameStatusMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GameStatusMeta.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional int32 week = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->week(), output);
  }

  // optional .fantasybit.GameInfo gameinfo = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->gameinfo_, output);
  }

  // optional .fantasybit.GameStatus gamesatus = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->gamesatus_, output);
  }

  // optional bytes gamemetaid = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->gamemetaid(), output);
  }

  // optional bytes datametaid = 40;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->datametaid(), output);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->prev(), output);
  }

  // optional bytes next = 60;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->next(), output);
  }

  // optional int32 season = 70;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(70, this->season(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GameStatusMeta)
}

::google::protobuf::uint8* GameStatusMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GameStatusMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GameStatusMeta.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional int32 week = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->week(), target);
  }

  // optional .fantasybit.GameInfo gameinfo = 10;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->gameinfo_, deterministic, target);
  }

  // optional .fantasybit.GameStatus gamesatus = 20;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->gamesatus_, deterministic, target);
  }

  // optional bytes gamemetaid = 30;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->gamemetaid(), target);
  }

  // optional bytes datametaid = 40;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->datametaid(), target);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->prev(), target);
  }

  // optional bytes next = 60;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->next(), target);
  }

  // optional int32 season = 70;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(70, this->season(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GameStatusMeta)
  return target;
}

size_t GameStatusMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GameStatusMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }

    // optional bytes gamemetaid = 30;
    if (has_gamemetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamemetaid());
    }

    // optional bytes datametaid = 40;
    if (has_datametaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->datametaid());
    }

    // optional bytes prev = 50;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional bytes next = 60;
    if (has_next()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->next());
    }

    // optional .fantasybit.GameInfo gameinfo = 10;
    if (has_gameinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->gameinfo_);
    }

    // optional .fantasybit.GameStatus gamesatus = 20;
    if (has_gamesatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->gamesatus_);
    }

    // optional int32 week = 2;
    if (has_week()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->week());
    }

  }
  // optional int32 season = 70;
  if (has_season()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->season());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameStatusMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GameStatusMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GameStatusMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameStatusMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GameStatusMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GameStatusMeta)
    MergeFrom(*source);
  }
}

void GameStatusMeta::MergeFrom(const GameStatusMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GameStatusMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gamemetaid();
      gamemetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemetaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_datametaid();
      datametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datametaid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_next();
      next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_gameinfo()->::fantasybit::GameInfo::MergeFrom(from.gameinfo());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_gamesatus()->::fantasybit::GameStatus::MergeFrom(from.gamesatus());
    }
    if (cached_has_bits & 0x00000080u) {
      week_ = from.week_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_season(from.season());
  }
}

void GameStatusMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GameStatusMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameStatusMeta::CopyFrom(const GameStatusMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GameStatusMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameStatusMeta::IsInitialized() const {
  return true;
}

void GameStatusMeta::Swap(GameStatusMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameStatusMeta::InternalSwap(GameStatusMeta* other) {
  using std::swap;
  id_.Swap(&other->id_);
  gamemetaid_.Swap(&other->gamemetaid_);
  datametaid_.Swap(&other->datametaid_);
  prev_.Swap(&other->prev_);
  next_.Swap(&other->next_);
  swap(gameinfo_, other->gameinfo_);
  swap(gamesatus_, other->gamesatus_);
  swap(week_, other->week_);
  swap(season_, other->season_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameStatusMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TeamProjMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamProjMeta::kGameidFieldNumber;
const int TeamProjMeta::kTeamFieldNumber;
const int TeamProjMeta::kKickofftimeFieldNumber;
const int TeamProjMeta::kWeekFieldNumber;
const int TeamProjMeta::kGameplayerprojmetarootFieldNumber;
const int TeamProjMeta::kGamedatametaidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamProjMeta::TeamProjMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsTeamProjMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.TeamProjMeta)
}
TeamProjMeta::TeamProjMeta(const TeamProjMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameid()) {
    gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
  }
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_team()) {
    team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
  }
  gameplayerprojmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameplayerprojmetaroot()) {
    gameplayerprojmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameplayerprojmetaroot_);
  }
  gamedatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamedatametaid()) {
    gamedatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedatametaid_);
  }
  ::memcpy(&kickofftime_, &from.kickofftime_,
    static_cast<size_t>(reinterpret_cast<char*>(&week_) -
    reinterpret_cast<char*>(&kickofftime_)) + sizeof(week_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.TeamProjMeta)
}

void TeamProjMeta::SharedCtor() {
  _cached_size_ = 0;
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameplayerprojmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamedatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kickofftime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&week_) -
      reinterpret_cast<char*>(&kickofftime_)) + sizeof(week_));
}

TeamProjMeta::~TeamProjMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.TeamProjMeta)
  SharedDtor();
}

void TeamProjMeta::SharedDtor() {
  gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameplayerprojmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamedatametaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TeamProjMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamProjMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamProjMeta& TeamProjMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsTeamProjMeta();
  return *internal_default_instance();
}

TeamProjMeta* TeamProjMeta::New(::google::protobuf::Arena* arena) const {
  TeamProjMeta* n = new TeamProjMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamProjMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.TeamProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gameid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gameid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!team_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*team_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!gameplayerprojmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gameplayerprojmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!gamedatametaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamedatametaid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&kickofftime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&week_) -
        reinterpret_cast<char*>(&kickofftime_)) + sizeof(week_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamProjMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.TeamProjMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gameid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameid().data(), static_cast<int>(this->gameid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamProjMeta.gameid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string team = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->team().data(), static_cast<int>(this->team().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamProjMeta.team");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 kickofftime = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_kickofftime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kickofftime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 week = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gameplayerprojmetaroot = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gameplayerprojmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamedatametaid = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamedatametaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.TeamProjMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.TeamProjMeta)
  return false;
#undef DO_
}

void TeamProjMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.TeamProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamProjMeta.gameid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->gameid(), output);
  }

  // optional string team = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamProjMeta.team");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->team(), output);
  }

  // optional uint32 kickofftime = 40;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->kickofftime(), output);
  }

  // optional uint32 week = 50;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->week(), output);
  }

  // optional bytes gameplayerprojmetaroot = 60;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->gameplayerprojmetaroot(), output);
  }

  // optional bytes gamedatametaid = 70;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->gamedatametaid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.TeamProjMeta)
}

::google::protobuf::uint8* TeamProjMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.TeamProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamProjMeta.gameid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->gameid(), target);
  }

  // optional string team = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamProjMeta.team");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->team(), target);
  }

  // optional uint32 kickofftime = 40;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->kickofftime(), target);
  }

  // optional uint32 week = 50;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->week(), target);
  }

  // optional bytes gameplayerprojmetaroot = 60;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->gameplayerprojmetaroot(), target);
  }

  // optional bytes gamedatametaid = 70;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->gamedatametaid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.TeamProjMeta)
  return target;
}

size_t TeamProjMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.TeamProjMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string gameid = 20;
    if (has_gameid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameid());
    }

    // optional string team = 30;
    if (has_team()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team());
    }

    // optional bytes gameplayerprojmetaroot = 60;
    if (has_gameplayerprojmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gameplayerprojmetaroot());
    }

    // optional bytes gamedatametaid = 70;
    if (has_gamedatametaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamedatametaid());
    }

    // optional uint32 kickofftime = 40;
    if (has_kickofftime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kickofftime());
    }

    // optional uint32 week = 50;
    if (has_week()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->week());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamProjMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.TeamProjMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamProjMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamProjMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.TeamProjMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.TeamProjMeta)
    MergeFrom(*source);
  }
}

void TeamProjMeta::MergeFrom(const TeamProjMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.TeamProjMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gameid();
      gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_team();
      team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_gameplayerprojmetaroot();
      gameplayerprojmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameplayerprojmetaroot_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_gamedatametaid();
      gamedatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedatametaid_);
    }
    if (cached_has_bits & 0x00000010u) {
      kickofftime_ = from.kickofftime_;
    }
    if (cached_has_bits & 0x00000020u) {
      week_ = from.week_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TeamProjMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.TeamProjMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamProjMeta::CopyFrom(const TeamProjMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.TeamProjMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamProjMeta::IsInitialized() const {
  return true;
}

void TeamProjMeta::Swap(TeamProjMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamProjMeta::InternalSwap(TeamProjMeta* other) {
  using std::swap;
  gameid_.Swap(&other->gameid_);
  team_.Swap(&other->team_);
  gameplayerprojmetaroot_.Swap(&other->gameplayerprojmetaroot_);
  gamedatametaid_.Swap(&other->gamedatametaid_);
  swap(kickofftime_, other->kickofftime_);
  swap(week_, other->week_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamProjMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TeamResultMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamResultMeta::kGameidFieldNumber;
const int TeamResultMeta::kTeamFieldNumber;
const int TeamResultMeta::kKickofftimeFieldNumber;
const int TeamResultMeta::kWeekFieldNumber;
const int TeamResultMeta::kPlayerresultmetarootFieldNumber;
const int TeamResultMeta::kResultdatametaidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamResultMeta::TeamResultMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsTeamResultMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.TeamResultMeta)
}
TeamResultMeta::TeamResultMeta(const TeamResultMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameid()) {
    gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
  }
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_team()) {
    team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
  }
  playerresultmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerresultmetaroot()) {
    playerresultmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerresultmetaroot_);
  }
  resultdatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_resultdatametaid()) {
    resultdatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resultdatametaid_);
  }
  ::memcpy(&kickofftime_, &from.kickofftime_,
    static_cast<size_t>(reinterpret_cast<char*>(&week_) -
    reinterpret_cast<char*>(&kickofftime_)) + sizeof(week_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.TeamResultMeta)
}

void TeamResultMeta::SharedCtor() {
  _cached_size_ = 0;
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerresultmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resultdatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&kickofftime_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&week_) -
      reinterpret_cast<char*>(&kickofftime_)) + sizeof(week_));
}

TeamResultMeta::~TeamResultMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.TeamResultMeta)
  SharedDtor();
}

void TeamResultMeta::SharedDtor() {
  gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerresultmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resultdatametaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TeamResultMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamResultMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamResultMeta& TeamResultMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsTeamResultMeta();
  return *internal_default_instance();
}

TeamResultMeta* TeamResultMeta::New(::google::protobuf::Arena* arena) const {
  TeamResultMeta* n = new TeamResultMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamResultMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.TeamResultMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!gameid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gameid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!team_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*team_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!playerresultmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerresultmetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!resultdatametaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*resultdatametaid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&kickofftime_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&week_) -
        reinterpret_cast<char*>(&kickofftime_)) + sizeof(week_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamResultMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.TeamResultMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gameid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameid().data(), static_cast<int>(this->gameid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamResultMeta.gameid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string team = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->team().data(), static_cast<int>(this->team().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamResultMeta.team");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 kickofftime = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_kickofftime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &kickofftime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 week = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes playerresultmetaroot = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playerresultmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes resultdatametaid = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resultdatametaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.TeamResultMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.TeamResultMeta)
  return false;
#undef DO_
}

void TeamResultMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.TeamResultMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamResultMeta.gameid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->gameid(), output);
  }

  // optional string team = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamResultMeta.team");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->team(), output);
  }

  // optional uint32 kickofftime = 40;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(40, this->kickofftime(), output);
  }

  // optional uint32 week = 50;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(50, this->week(), output);
  }

  // optional bytes playerresultmetaroot = 60;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->playerresultmetaroot(), output);
  }

  // optional bytes resultdatametaid = 70;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->resultdatametaid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.TeamResultMeta)
}

::google::protobuf::uint8* TeamResultMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.TeamResultMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamResultMeta.gameid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->gameid(), target);
  }

  // optional string team = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamResultMeta.team");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->team(), target);
  }

  // optional uint32 kickofftime = 40;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(40, this->kickofftime(), target);
  }

  // optional uint32 week = 50;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(50, this->week(), target);
  }

  // optional bytes playerresultmetaroot = 60;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->playerresultmetaroot(), target);
  }

  // optional bytes resultdatametaid = 70;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->resultdatametaid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.TeamResultMeta)
  return target;
}

size_t TeamResultMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.TeamResultMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string gameid = 20;
    if (has_gameid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameid());
    }

    // optional string team = 30;
    if (has_team()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->team());
    }

    // optional bytes playerresultmetaroot = 60;
    if (has_playerresultmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->playerresultmetaroot());
    }

    // optional bytes resultdatametaid = 70;
    if (has_resultdatametaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->resultdatametaid());
    }

    // optional uint32 kickofftime = 40;
    if (has_kickofftime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->kickofftime());
    }

    // optional uint32 week = 50;
    if (has_week()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->week());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamResultMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.TeamResultMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamResultMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamResultMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.TeamResultMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.TeamResultMeta)
    MergeFrom(*source);
  }
}

void TeamResultMeta::MergeFrom(const TeamResultMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.TeamResultMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gameid();
      gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_team();
      team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_playerresultmetaroot();
      playerresultmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerresultmetaroot_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_resultdatametaid();
      resultdatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resultdatametaid_);
    }
    if (cached_has_bits & 0x00000010u) {
      kickofftime_ = from.kickofftime_;
    }
    if (cached_has_bits & 0x00000020u) {
      week_ = from.week_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TeamResultMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.TeamResultMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamResultMeta::CopyFrom(const TeamResultMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.TeamResultMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamResultMeta::IsInitialized() const {
  return true;
}

void TeamResultMeta::Swap(TeamResultMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamResultMeta::InternalSwap(TeamResultMeta* other) {
  using std::swap;
  gameid_.Swap(&other->gameid_);
  team_.Swap(&other->team_);
  playerresultmetaroot_.Swap(&other->playerresultmetaroot_);
  resultdatametaid_.Swap(&other->resultdatametaid_);
  swap(kickofftime_, other->kickofftime_);
  swap(week_, other->week_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamResultMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GamePlayerProjMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GamePlayerProjMeta::kPlayeridFieldNumber;
const int GamePlayerProjMeta::kGamestatusmetaidFieldNumber;
const int GamePlayerProjMeta::kProjmetaplayerrootFieldNumber;
const int GamePlayerProjMeta::kPosmetaplayerrootFieldNumber;
const int GamePlayerProjMeta::kGamedatametaidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GamePlayerProjMeta::GamePlayerProjMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGamePlayerProjMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GamePlayerProjMeta)
}
GamePlayerProjMeta::GamePlayerProjMeta(const GamePlayerProjMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  gamestatusmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamestatusmetaid()) {
    gamestatusmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamestatusmetaid_);
  }
  projmetaplayerroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_projmetaplayerroot()) {
    projmetaplayerroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projmetaplayerroot_);
  }
  posmetaplayerroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_posmetaplayerroot()) {
    posmetaplayerroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posmetaplayerroot_);
  }
  gamedatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamedatametaid()) {
    gamedatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedatametaid_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GamePlayerProjMeta)
}

void GamePlayerProjMeta::SharedCtor() {
  _cached_size_ = 0;
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamestatusmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  projmetaplayerroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posmetaplayerroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamedatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GamePlayerProjMeta::~GamePlayerProjMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.GamePlayerProjMeta)
  SharedDtor();
}

void GamePlayerProjMeta::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamestatusmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  projmetaplayerroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posmetaplayerroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamedatametaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GamePlayerProjMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GamePlayerProjMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GamePlayerProjMeta& GamePlayerProjMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGamePlayerProjMeta();
  return *internal_default_instance();
}

GamePlayerProjMeta* GamePlayerProjMeta::New(::google::protobuf::Arena* arena) const {
  GamePlayerProjMeta* n = new GamePlayerProjMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GamePlayerProjMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GamePlayerProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!gamestatusmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamestatusmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!projmetaplayerroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*projmetaplayerroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!posmetaplayerroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*posmetaplayerroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!gamedatametaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamedatametaid_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GamePlayerProjMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GamePlayerProjMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string playerid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GamePlayerProjMeta.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamestatusmetaid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamestatusmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes projmetaplayerroot = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_projmetaplayerroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes posmetaplayerroot = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_posmetaplayerroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamedatametaid = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamedatametaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GamePlayerProjMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GamePlayerProjMeta)
  return false;
#undef DO_
}

void GamePlayerProjMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GamePlayerProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GamePlayerProjMeta.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->playerid(), output);
  }

  // optional bytes gamestatusmetaid = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->gamestatusmetaid(), output);
  }

  // optional bytes projmetaplayerroot = 60;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->projmetaplayerroot(), output);
  }

  // optional bytes posmetaplayerroot = 70;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->posmetaplayerroot(), output);
  }

  // optional bytes gamedatametaid = 80;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      80, this->gamedatametaid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GamePlayerProjMeta)
}

::google::protobuf::uint8* GamePlayerProjMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GamePlayerProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GamePlayerProjMeta.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->playerid(), target);
  }

  // optional bytes gamestatusmetaid = 30;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->gamestatusmetaid(), target);
  }

  // optional bytes projmetaplayerroot = 60;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->projmetaplayerroot(), target);
  }

  // optional bytes posmetaplayerroot = 70;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->posmetaplayerroot(), target);
  }

  // optional bytes gamedatametaid = 80;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        80, this->gamedatametaid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GamePlayerProjMeta)
  return target;
}

size_t GamePlayerProjMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GamePlayerProjMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string playerid = 20;
    if (has_playerid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional bytes gamestatusmetaid = 30;
    if (has_gamestatusmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamestatusmetaid());
    }

    // optional bytes projmetaplayerroot = 60;
    if (has_projmetaplayerroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->projmetaplayerroot());
    }

    // optional bytes posmetaplayerroot = 70;
    if (has_posmetaplayerroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->posmetaplayerroot());
    }

    // optional bytes gamedatametaid = 80;
    if (has_gamedatametaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamedatametaid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GamePlayerProjMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GamePlayerProjMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GamePlayerProjMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GamePlayerProjMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GamePlayerProjMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GamePlayerProjMeta)
    MergeFrom(*source);
  }
}

void GamePlayerProjMeta::MergeFrom(const GamePlayerProjMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GamePlayerProjMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gamestatusmetaid();
      gamestatusmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamestatusmetaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_projmetaplayerroot();
      projmetaplayerroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projmetaplayerroot_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_posmetaplayerroot();
      posmetaplayerroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posmetaplayerroot_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_gamedatametaid();
      gamedatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedatametaid_);
    }
  }
}

void GamePlayerProjMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GamePlayerProjMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GamePlayerProjMeta::CopyFrom(const GamePlayerProjMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GamePlayerProjMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GamePlayerProjMeta::IsInitialized() const {
  return true;
}

void GamePlayerProjMeta::Swap(GamePlayerProjMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GamePlayerProjMeta::InternalSwap(GamePlayerProjMeta* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_);
  gamestatusmetaid_.Swap(&other->gamestatusmetaid_);
  projmetaplayerroot_.Swap(&other->projmetaplayerroot_);
  posmetaplayerroot_.Swap(&other->posmetaplayerroot_);
  gamedatametaid_.Swap(&other->gamedatametaid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GamePlayerProjMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProjMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjMeta::kNameFieldNumber;
const int ProjMeta::kProjFieldNumber;
const int ProjMeta::kPlayeridFieldNumber;
const int ProjMeta::kTxmetaidFieldNumber;
const int ProjMeta::kPrevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjMeta::ProjMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsProjMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.ProjMeta)
}
ProjMeta::ProjMeta(const ProjMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaid()) {
    txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  proj_ = from.proj_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.ProjMeta)
}

void ProjMeta::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proj_ = 0;
}

ProjMeta::~ProjMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.ProjMeta)
  SharedDtor();
}

void ProjMeta::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProjMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjMeta& ProjMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsProjMeta();
  return *internal_default_instance();
}

ProjMeta* ProjMeta::New(::google::protobuf::Arena* arena) const {
  ProjMeta* n = new ProjMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.ProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!txmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
  }
  proj_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProjMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.ProjMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.ProjMeta.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 proj = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_proj();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &proj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string playerid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.ProjMeta.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes txmetaid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.ProjMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.ProjMeta)
  return false;
#undef DO_
}

void ProjMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.ProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ProjMeta.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  // optional int32 proj = 20;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->proj(), output);
  }

  // optional string playerid = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ProjMeta.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->playerid(), output);
  }

  // optional bytes txmetaid = 40;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->txmetaid(), output);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->prev(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.ProjMeta)
}

::google::protobuf::uint8* ProjMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.ProjMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ProjMeta.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  // optional int32 proj = 20;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->proj(), target);
  }

  // optional string playerid = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ProjMeta.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->playerid(), target);
  }

  // optional bytes txmetaid = 40;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->txmetaid(), target);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->prev(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.ProjMeta)
  return target;
}

size_t ProjMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.ProjMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 10;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string playerid = 30;
    if (has_playerid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional bytes txmetaid = 40;
    if (has_txmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaid());
    }

    // optional bytes prev = 50;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional int32 proj = 20;
    if (has_proj()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->proj());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.ProjMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.ProjMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.ProjMeta)
    MergeFrom(*source);
  }
}

void ProjMeta::MergeFrom(const ProjMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.ProjMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_txmetaid();
      txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000010u) {
      proj_ = from.proj_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProjMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.ProjMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjMeta::CopyFrom(const ProjMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.ProjMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjMeta::IsInitialized() const {
  return true;
}

void ProjMeta::Swap(ProjMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjMeta::InternalSwap(ProjMeta* other) {
  using std::swap;
  name_.Swap(&other->name_);
  playerid_.Swap(&other->playerid_);
  txmetaid_.Swap(&other->txmetaid_);
  prev_.Swap(&other->prev_);
  swap(proj_, other->proj_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PosMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PosMeta::kNameFieldNumber;
const int PosMeta::kQtyFieldNumber;
const int PosMeta::kPriceFieldNumber;
const int PosMeta::kPlayeridFieldNumber;
const int PosMeta::kTxmetaidFieldNumber;
const int PosMeta::kPrevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PosMeta::PosMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsPosMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.PosMeta)
}
PosMeta::PosMeta(const PosMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaid()) {
    txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  ::memcpy(&qty_, &from.qty_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&qty_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.PosMeta)
}

void PosMeta::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&qty_)) + sizeof(price_));
}

PosMeta::~PosMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.PosMeta)
  SharedDtor();
}

void PosMeta::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PosMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PosMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PosMeta& PosMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsPosMeta();
  return *internal_default_instance();
}

PosMeta* PosMeta::New(::google::protobuf::Arena* arena) const {
  PosMeta* n = new PosMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PosMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.PosMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!txmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 48u) {
    ::memset(&qty_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_) -
        reinterpret_cast<char*>(&qty_)) + sizeof(price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PosMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.PosMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PosMeta.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 qty = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_qty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 price = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string playerid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PosMeta.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes txmetaid = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.PosMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.PosMeta)
  return false;
#undef DO_
}

void PosMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.PosMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PosMeta.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  // optional int32 qty = 20;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->qty(), output);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->price(), output);
  }

  // optional string playerid = 40;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PosMeta.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      40, this->playerid(), output);
  }

  // optional bytes txmetaid = 50;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->txmetaid(), output);
  }

  // optional bytes prev = 60;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->prev(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.PosMeta)
}

::google::protobuf::uint8* PosMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.PosMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PosMeta.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  // optional int32 qty = 20;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->qty(), target);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->price(), target);
  }

  // optional string playerid = 40;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PosMeta.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->playerid(), target);
  }

  // optional bytes txmetaid = 50;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->txmetaid(), target);
  }

  // optional bytes prev = 60;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->prev(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.PosMeta)
  return target;
}

size_t PosMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.PosMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 10;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string playerid = 40;
    if (has_playerid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional bytes txmetaid = 50;
    if (has_txmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaid());
    }

    // optional bytes prev = 60;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional int32 qty = 20;
    if (has_qty()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qty());
    }

    // optional int32 price = 30;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PosMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.PosMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const PosMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PosMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.PosMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.PosMeta)
    MergeFrom(*source);
  }
}

void PosMeta::MergeFrom(const PosMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.PosMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_txmetaid();
      txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000010u) {
      qty_ = from.qty_;
    }
    if (cached_has_bits & 0x00000020u) {
      price_ = from.price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PosMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.PosMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PosMeta::CopyFrom(const PosMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.PosMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PosMeta::IsInitialized() const {
  return true;
}

void PosMeta::Swap(PosMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PosMeta::InternalSwap(PosMeta* other) {
  using std::swap;
  name_.Swap(&other->name_);
  playerid_.Swap(&other->playerid_);
  txmetaid_.Swap(&other->txmetaid_);
  prev_.Swap(&other->prev_);
  swap(qty_, other->qty_);
  swap(price_, other->price_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PosMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerResultMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerResultMeta::kPlayergamestatsidFieldNumber;
const int PlayerResultMeta::kGamestatusmetaidFieldNumber;
const int PlayerResultMeta::kAwardmetaplayerrootFieldNumber;
const int PlayerResultMeta::kPnlmetaplayerrootFieldNumber;
const int PlayerResultMeta::kResultdatametaidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerResultMeta::PlayerResultMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsPlayerResultMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.PlayerResultMeta)
}
PlayerResultMeta::PlayerResultMeta(const PlayerResultMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playergamestatsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playergamestatsid()) {
    playergamestatsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playergamestatsid_);
  }
  gamestatusmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamestatusmetaid()) {
    gamestatusmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamestatusmetaid_);
  }
  awardmetaplayerroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_awardmetaplayerroot()) {
    awardmetaplayerroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.awardmetaplayerroot_);
  }
  pnlmetaplayerroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pnlmetaplayerroot()) {
    pnlmetaplayerroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pnlmetaplayerroot_);
  }
  resultdatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_resultdatametaid()) {
    resultdatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resultdatametaid_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.PlayerResultMeta)
}

void PlayerResultMeta::SharedCtor() {
  _cached_size_ = 0;
  playergamestatsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamestatusmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  awardmetaplayerroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pnlmetaplayerroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resultdatametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PlayerResultMeta::~PlayerResultMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.PlayerResultMeta)
  SharedDtor();
}

void PlayerResultMeta::SharedDtor() {
  playergamestatsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamestatusmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  awardmetaplayerroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pnlmetaplayerroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resultdatametaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerResultMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerResultMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerResultMeta& PlayerResultMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsPlayerResultMeta();
  return *internal_default_instance();
}

PlayerResultMeta* PlayerResultMeta::New(::google::protobuf::Arena* arena) const {
  PlayerResultMeta* n = new PlayerResultMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerResultMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.PlayerResultMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!playergamestatsid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playergamestatsid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!gamestatusmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamestatusmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!awardmetaplayerroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*awardmetaplayerroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!pnlmetaplayerroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pnlmetaplayerroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!resultdatametaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*resultdatametaid_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerResultMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.PlayerResultMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes playergamestatsid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playergamestatsid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamestatusmetaid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamestatusmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes awardmetaplayerroot = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_awardmetaplayerroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pnlmetaplayerroot = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pnlmetaplayerroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes resultdatametaid = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_resultdatametaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.PlayerResultMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.PlayerResultMeta)
  return false;
#undef DO_
}

void PlayerResultMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.PlayerResultMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes playergamestatsid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->playergamestatsid(), output);
  }

  // optional bytes gamestatusmetaid = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->gamestatusmetaid(), output);
  }

  // optional bytes awardmetaplayerroot = 60;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->awardmetaplayerroot(), output);
  }

  // optional bytes pnlmetaplayerroot = 70;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->pnlmetaplayerroot(), output);
  }

  // optional bytes resultdatametaid = 80;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      80, this->resultdatametaid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.PlayerResultMeta)
}

::google::protobuf::uint8* PlayerResultMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.PlayerResultMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes playergamestatsid = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->playergamestatsid(), target);
  }

  // optional bytes gamestatusmetaid = 30;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->gamestatusmetaid(), target);
  }

  // optional bytes awardmetaplayerroot = 60;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->awardmetaplayerroot(), target);
  }

  // optional bytes pnlmetaplayerroot = 70;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->pnlmetaplayerroot(), target);
  }

  // optional bytes resultdatametaid = 80;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        80, this->resultdatametaid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.PlayerResultMeta)
  return target;
}

size_t PlayerResultMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.PlayerResultMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes playergamestatsid = 10;
    if (has_playergamestatsid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->playergamestatsid());
    }

    // optional bytes gamestatusmetaid = 30;
    if (has_gamestatusmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamestatusmetaid());
    }

    // optional bytes awardmetaplayerroot = 60;
    if (has_awardmetaplayerroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->awardmetaplayerroot());
    }

    // optional bytes pnlmetaplayerroot = 70;
    if (has_pnlmetaplayerroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pnlmetaplayerroot());
    }

    // optional bytes resultdatametaid = 80;
    if (has_resultdatametaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->resultdatametaid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerResultMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.PlayerResultMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerResultMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerResultMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.PlayerResultMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.PlayerResultMeta)
    MergeFrom(*source);
  }
}

void PlayerResultMeta::MergeFrom(const PlayerResultMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.PlayerResultMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playergamestatsid();
      playergamestatsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playergamestatsid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gamestatusmetaid();
      gamestatusmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamestatusmetaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_awardmetaplayerroot();
      awardmetaplayerroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.awardmetaplayerroot_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_pnlmetaplayerroot();
      pnlmetaplayerroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pnlmetaplayerroot_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_resultdatametaid();
      resultdatametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resultdatametaid_);
    }
  }
}

void PlayerResultMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.PlayerResultMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerResultMeta::CopyFrom(const PlayerResultMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.PlayerResultMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerResultMeta::IsInitialized() const {
  return true;
}

void PlayerResultMeta::Swap(PlayerResultMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerResultMeta::InternalSwap(PlayerResultMeta* other) {
  using std::swap;
  playergamestatsid_.Swap(&other->playergamestatsid_);
  gamestatusmetaid_.Swap(&other->gamestatusmetaid_);
  awardmetaplayerroot_.Swap(&other->awardmetaplayerroot_);
  pnlmetaplayerroot_.Swap(&other->pnlmetaplayerroot_);
  resultdatametaid_.Swap(&other->resultdatametaid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerResultMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerGameStats::InitAsDefaultInstance() {
  ::fantasybit::_PlayerGameStats_default_instance_._instance.get_mutable()->stats_ = const_cast< ::fantasybit::Stats*>(
      ::fantasybit::Stats::internal_default_instance());
}
void PlayerGameStats::clear_stats() {
  if (stats_ != NULL) stats_->Clear();
  clear_has_stats();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerGameStats::kPlayeridFieldNumber;
const int PlayerGameStats::kResultFieldNumber;
const int PlayerGameStats::kStatsFieldNumber;
const int PlayerGameStats::kGameidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerGameStats::PlayerGameStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsPlayerGameStats();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.PlayerGameStats)
}
PlayerGameStats::PlayerGameStats(const PlayerGameStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameid()) {
    gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
  }
  if (from.has_stats()) {
    stats_ = new ::fantasybit::Stats(*from.stats_);
  } else {
    stats_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.PlayerGameStats)
}

void PlayerGameStats::SharedCtor() {
  _cached_size_ = 0;
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stats_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&stats_)) + sizeof(result_));
}

PlayerGameStats::~PlayerGameStats() {
  // @@protoc_insertion_point(destructor:fantasybit.PlayerGameStats)
  SharedDtor();
}

void PlayerGameStats::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete stats_;
}

void PlayerGameStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerGameStats::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerGameStats& PlayerGameStats::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsPlayerGameStats();
  return *internal_default_instance();
}

PlayerGameStats* PlayerGameStats::New(::google::protobuf::Arena* arena) const {
  PlayerGameStats* n = new PlayerGameStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerGameStats::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.PlayerGameStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!gameid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gameid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(stats_ != NULL);
      stats_->Clear();
    }
  }
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerGameStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.PlayerGameStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string playerid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PlayerGameStats.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float result = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 325 & 0xFF */)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.Stats stats = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gameid = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameid().data(), static_cast<int>(this->gameid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PlayerGameStats.gameid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.PlayerGameStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.PlayerGameStats)
  return false;
#undef DO_
}

void PlayerGameStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.PlayerGameStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerGameStats.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->playerid(), output);
  }

  // optional float result = 40;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(40, this->result(), output);
  }

  // optional .fantasybit.Stats stats = 50;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->stats_, output);
  }

  // optional string gameid = 60;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerGameStats.gameid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      60, this->gameid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.PlayerGameStats)
}

::google::protobuf::uint8* PlayerGameStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.PlayerGameStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerGameStats.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->playerid(), target);
  }

  // optional float result = 40;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(40, this->result(), target);
  }

  // optional .fantasybit.Stats stats = 50;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, *this->stats_, deterministic, target);
  }

  // optional string gameid = 60;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerGameStats.gameid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        60, this->gameid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.PlayerGameStats)
  return target;
}

size_t PlayerGameStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.PlayerGameStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string playerid = 20;
    if (has_playerid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional string gameid = 60;
    if (has_gameid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gameid());
    }

    // optional .fantasybit.Stats stats = 50;
    if (has_stats()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->stats_);
    }

    // optional float result = 40;
    if (has_result()) {
      total_size += 2 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerGameStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.PlayerGameStats)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerGameStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerGameStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.PlayerGameStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.PlayerGameStats)
    MergeFrom(*source);
  }
}

void PlayerGameStats::MergeFrom(const PlayerGameStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.PlayerGameStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gameid();
      gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_stats()->::fantasybit::Stats::MergeFrom(from.stats());
    }
    if (cached_has_bits & 0x00000008u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerGameStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.PlayerGameStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerGameStats::CopyFrom(const PlayerGameStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.PlayerGameStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerGameStats::IsInitialized() const {
  return true;
}

void PlayerGameStats::Swap(PlayerGameStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerGameStats::InternalSwap(PlayerGameStats* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_);
  gameid_.Swap(&other->gameid_);
  swap(stats_, other->stats_);
  swap(result_, other->result_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerGameStats::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AwardMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AwardMeta::kNameFieldNumber;
const int AwardMeta::kProjFieldNumber;
const int AwardMeta::kAwardFieldNumber;
const int AwardMeta::kProjmetaidFieldNumber;
const int AwardMeta::kPlayergamestatsidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AwardMeta::AwardMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsAwardMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.AwardMeta)
}
AwardMeta::AwardMeta(const AwardMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  projmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_projmetaid()) {
    projmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projmetaid_);
  }
  playergamestatsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playergamestatsid()) {
    playergamestatsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playergamestatsid_);
  }
  ::memcpy(&proj_, &from.proj_,
    static_cast<size_t>(reinterpret_cast<char*>(&award_) -
    reinterpret_cast<char*>(&proj_)) + sizeof(award_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.AwardMeta)
}

void AwardMeta::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  projmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playergamestatsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&proj_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&award_) -
      reinterpret_cast<char*>(&proj_)) + sizeof(award_));
}

AwardMeta::~AwardMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.AwardMeta)
  SharedDtor();
}

void AwardMeta::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  projmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playergamestatsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AwardMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AwardMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AwardMeta& AwardMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsAwardMeta();
  return *internal_default_instance();
}

AwardMeta* AwardMeta::New(::google::protobuf::Arena* arena) const {
  AwardMeta* n = new AwardMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AwardMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.AwardMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!projmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*projmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!playergamestatsid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playergamestatsid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&proj_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&award_) -
        reinterpret_cast<char*>(&proj_)) + sizeof(award_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AwardMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.AwardMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.AwardMeta.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 proj = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_proj();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &proj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 award = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_award();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &award_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes projmetaid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_projmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes playergamestatsid = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playergamestatsid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.AwardMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.AwardMeta)
  return false;
#undef DO_
}

void AwardMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.AwardMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.AwardMeta.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  // optional int32 proj = 20;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->proj(), output);
  }

  // optional uint64 award = 30;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(30, this->award(), output);
  }

  // optional bytes projmetaid = 40;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->projmetaid(), output);
  }

  // optional bytes playergamestatsid = 50;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->playergamestatsid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.AwardMeta)
}

::google::protobuf::uint8* AwardMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.AwardMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.AwardMeta.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  // optional int32 proj = 20;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->proj(), target);
  }

  // optional uint64 award = 30;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(30, this->award(), target);
  }

  // optional bytes projmetaid = 40;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->projmetaid(), target);
  }

  // optional bytes playergamestatsid = 50;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->playergamestatsid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.AwardMeta)
  return target;
}

size_t AwardMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.AwardMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string name = 10;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes projmetaid = 40;
    if (has_projmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->projmetaid());
    }

    // optional bytes playergamestatsid = 50;
    if (has_playergamestatsid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->playergamestatsid());
    }

    // optional int32 proj = 20;
    if (has_proj()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->proj());
    }

    // optional uint64 award = 30;
    if (has_award()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->award());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AwardMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.AwardMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const AwardMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AwardMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.AwardMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.AwardMeta)
    MergeFrom(*source);
  }
}

void AwardMeta::MergeFrom(const AwardMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.AwardMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_projmetaid();
      projmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projmetaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_playergamestatsid();
      playergamestatsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playergamestatsid_);
    }
    if (cached_has_bits & 0x00000008u) {
      proj_ = from.proj_;
    }
    if (cached_has_bits & 0x00000010u) {
      award_ = from.award_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AwardMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.AwardMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AwardMeta::CopyFrom(const AwardMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.AwardMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AwardMeta::IsInitialized() const {
  return true;
}

void AwardMeta::Swap(AwardMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AwardMeta::InternalSwap(AwardMeta* other) {
  using std::swap;
  name_.Swap(&other->name_);
  projmetaid_.Swap(&other->projmetaid_);
  playergamestatsid_.Swap(&other->playergamestatsid_);
  swap(proj_, other->proj_);
  swap(award_, other->award_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AwardMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PnlMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PnlMeta::kNameFieldNumber;
const int PnlMeta::kQtyFieldNumber;
const int PnlMeta::kPriceFieldNumber;
const int PnlMeta::kPnlFieldNumber;
const int PnlMeta::kPosmetaidFieldNumber;
const int PnlMeta::kPlayergamestatsidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PnlMeta::PnlMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsPnlMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.PnlMeta)
}
PnlMeta::PnlMeta(const PnlMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  posmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_posmetaid()) {
    posmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posmetaid_);
  }
  playergamestatsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playergamestatsid()) {
    playergamestatsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playergamestatsid_);
  }
  ::memcpy(&qty_, &from.qty_,
    static_cast<size_t>(reinterpret_cast<char*>(&pnl_) -
    reinterpret_cast<char*>(&qty_)) + sizeof(pnl_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.PnlMeta)
}

void PnlMeta::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playergamestatsid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pnl_) -
      reinterpret_cast<char*>(&qty_)) + sizeof(pnl_));
}

PnlMeta::~PnlMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.PnlMeta)
  SharedDtor();
}

void PnlMeta::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playergamestatsid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PnlMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PnlMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PnlMeta& PnlMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsPnlMeta();
  return *internal_default_instance();
}

PnlMeta* PnlMeta::New(::google::protobuf::Arena* arena) const {
  PnlMeta* n = new PnlMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PnlMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.PnlMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!posmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*posmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!playergamestatsid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playergamestatsid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&qty_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pnl_) -
        reinterpret_cast<char*>(&qty_)) + sizeof(pnl_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PnlMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.PnlMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PnlMeta.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 qty = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_qty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 price = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 pnl = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_pnl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &pnl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes posmetaid = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_posmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes playergamestatsid = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playergamestatsid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.PnlMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.PnlMeta)
  return false;
#undef DO_
}

void PnlMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.PnlMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PnlMeta.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  // optional int32 qty = 20;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->qty(), output);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->price(), output);
  }

  // optional int64 pnl = 40;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(40, this->pnl(), output);
  }

  // optional bytes posmetaid = 50;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->posmetaid(), output);
  }

  // optional bytes playergamestatsid = 60;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->playergamestatsid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.PnlMeta)
}

::google::protobuf::uint8* PnlMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.PnlMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PnlMeta.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  // optional int32 qty = 20;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->qty(), target);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->price(), target);
  }

  // optional int64 pnl = 40;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(40, this->pnl(), target);
  }

  // optional bytes posmetaid = 50;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->posmetaid(), target);
  }

  // optional bytes playergamestatsid = 60;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->playergamestatsid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.PnlMeta)
  return target;
}

size_t PnlMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.PnlMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 10;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional bytes posmetaid = 50;
    if (has_posmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->posmetaid());
    }

    // optional bytes playergamestatsid = 60;
    if (has_playergamestatsid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->playergamestatsid());
    }

    // optional int32 qty = 20;
    if (has_qty()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qty());
    }

    // optional int32 price = 30;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional int64 pnl = 40;
    if (has_pnl()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->pnl());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PnlMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.PnlMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const PnlMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PnlMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.PnlMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.PnlMeta)
    MergeFrom(*source);
  }
}

void PnlMeta::MergeFrom(const PnlMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.PnlMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_posmetaid();
      posmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posmetaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_playergamestatsid();
      playergamestatsid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playergamestatsid_);
    }
    if (cached_has_bits & 0x00000008u) {
      qty_ = from.qty_;
    }
    if (cached_has_bits & 0x00000010u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000020u) {
      pnl_ = from.pnl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PnlMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.PnlMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PnlMeta::CopyFrom(const PnlMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.PnlMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PnlMeta::IsInitialized() const {
  return true;
}

void PnlMeta::Swap(PnlMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PnlMeta::InternalSwap(PnlMeta* other) {
  using std::swap;
  name_.Swap(&other->name_);
  posmetaid_.Swap(&other->posmetaid_);
  playergamestatsid_.Swap(&other->playergamestatsid_);
  swap(qty_, other->qty_);
  swap(price_, other->price_);
  swap(pnl_, other->pnl_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PnlMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerMarketState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMarketState::kLimitbookmetaidFieldNumber;
const int PlayerMarketState::kPlayeridFieldNumber;
const int PlayerMarketState::kMarketticmetaidFieldNumber;
const int PlayerMarketState::kLockedFieldNumber;
const int PlayerMarketState::kPrevFieldNumber;
const int PlayerMarketState::kNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMarketState::PlayerMarketState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsPlayerMarketState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.PlayerMarketState)
}
PlayerMarketState::PlayerMarketState(const PlayerMarketState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  limitbookmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_limitbookmetaid()) {
    limitbookmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.limitbookmetaid_);
  }
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  marketticmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_marketticmetaid()) {
    marketticmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.marketticmetaid_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_next()) {
    next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
  }
  locked_ = from.locked_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.PlayerMarketState)
}

void PlayerMarketState::SharedCtor() {
  _cached_size_ = 0;
  limitbookmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  marketticmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locked_ = false;
}

PlayerMarketState::~PlayerMarketState() {
  // @@protoc_insertion_point(destructor:fantasybit.PlayerMarketState)
  SharedDtor();
}

void PlayerMarketState::SharedDtor() {
  limitbookmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  marketticmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerMarketState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMarketState::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMarketState& PlayerMarketState::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsPlayerMarketState();
  return *internal_default_instance();
}

PlayerMarketState* PlayerMarketState::New(::google::protobuf::Arena* arena) const {
  PlayerMarketState* n = new PlayerMarketState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerMarketState::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.PlayerMarketState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!limitbookmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*limitbookmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!marketticmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*marketticmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!next_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*next_.UnsafeRawStringPointer())->clear();
    }
  }
  locked_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerMarketState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.PlayerMarketState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes limitbookmetaid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_limitbookmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string playerid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PlayerMarketState.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes marketticmetaid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_marketticmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool locked = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 248 & 0xFF */)) {
          set_has_locked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes next = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_next()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.PlayerMarketState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.PlayerMarketState)
  return false;
#undef DO_
}

void PlayerMarketState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.PlayerMarketState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes limitbookmetaid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->limitbookmetaid(), output);
  }

  // optional string playerid = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerMarketState.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->playerid(), output);
  }

  // optional bytes marketticmetaid = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->marketticmetaid(), output);
  }

  // optional bool locked = 31;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(31, this->locked(), output);
  }

  // optional bytes prev = 40;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->prev(), output);
  }

  // optional bytes next = 50;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->next(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.PlayerMarketState)
}

::google::protobuf::uint8* PlayerMarketState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.PlayerMarketState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes limitbookmetaid = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->limitbookmetaid(), target);
  }

  // optional string playerid = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerMarketState.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->playerid(), target);
  }

  // optional bytes marketticmetaid = 30;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->marketticmetaid(), target);
  }

  // optional bool locked = 31;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(31, this->locked(), target);
  }

  // optional bytes prev = 40;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->prev(), target);
  }

  // optional bytes next = 50;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->next(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.PlayerMarketState)
  return target;
}

size_t PlayerMarketState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.PlayerMarketState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes limitbookmetaid = 10;
    if (has_limitbookmetaid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->limitbookmetaid());
    }

    // optional string playerid = 20;
    if (has_playerid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional bytes marketticmetaid = 30;
    if (has_marketticmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->marketticmetaid());
    }

    // optional bytes prev = 40;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional bytes next = 50;
    if (has_next()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->next());
    }

    // optional bool locked = 31;
    if (has_locked()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMarketState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.PlayerMarketState)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMarketState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMarketState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.PlayerMarketState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.PlayerMarketState)
    MergeFrom(*source);
  }
}

void PlayerMarketState::MergeFrom(const PlayerMarketState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.PlayerMarketState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_limitbookmetaid();
      limitbookmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.limitbookmetaid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_marketticmetaid();
      marketticmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.marketticmetaid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_next();
      next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
    }
    if (cached_has_bits & 0x00000020u) {
      locked_ = from.locked_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerMarketState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.PlayerMarketState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMarketState::CopyFrom(const PlayerMarketState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.PlayerMarketState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMarketState::IsInitialized() const {
  return true;
}

void PlayerMarketState::Swap(PlayerMarketState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMarketState::InternalSwap(PlayerMarketState* other) {
  using std::swap;
  limitbookmetaid_.Swap(&other->limitbookmetaid_);
  playerid_.Swap(&other->playerid_);
  marketticmetaid_.Swap(&other->marketticmetaid_);
  prev_.Swap(&other->prev_);
  next_.Swap(&other->next_);
  swap(locked_, other->locked_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMarketState::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LimitBookMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LimitBookMeta::kBidFieldNumber;
const int LimitBookMeta::kBidsizeFieldNumber;
const int LimitBookMeta::kAsksizeFieldNumber;
const int LimitBookMeta::kAskFieldNumber;
const int LimitBookMeta::kBidordermetarootFieldNumber;
const int LimitBookMeta::kAskordermetarootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LimitBookMeta::LimitBookMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsLimitBookMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.LimitBookMeta)
}
LimitBookMeta::LimitBookMeta(const LimitBookMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bidordermetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bidordermetaroot()) {
    bidordermetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bidordermetaroot_);
  }
  askordermetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_askordermetaroot()) {
    askordermetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.askordermetaroot_);
  }
  ::memcpy(&bid_, &from.bid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ask_) -
    reinterpret_cast<char*>(&bid_)) + sizeof(ask_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.LimitBookMeta)
}

void LimitBookMeta::SharedCtor() {
  _cached_size_ = 0;
  bidordermetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  askordermetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ask_) -
      reinterpret_cast<char*>(&bid_)) + sizeof(ask_));
}

LimitBookMeta::~LimitBookMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.LimitBookMeta)
  SharedDtor();
}

void LimitBookMeta::SharedDtor() {
  bidordermetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  askordermetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LimitBookMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LimitBookMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LimitBookMeta& LimitBookMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsLimitBookMeta();
  return *internal_default_instance();
}

LimitBookMeta* LimitBookMeta::New(::google::protobuf::Arena* arena) const {
  LimitBookMeta* n = new LimitBookMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LimitBookMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.LimitBookMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!bidordermetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bidordermetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!askordermetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*askordermetaroot_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 60u) {
    ::memset(&bid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ask_) -
        reinterpret_cast<char*>(&bid_)) + sizeof(ask_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LimitBookMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.LimitBookMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_bid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bidsize = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_bidsize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bidsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 asksize = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_asksize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &asksize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ask = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_ask();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ask_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bidordermetaroot = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bidordermetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes askordermetaroot = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_askordermetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.LimitBookMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.LimitBookMeta)
  return false;
#undef DO_
}

void LimitBookMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.LimitBookMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bid = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->bid(), output);
  }

  // optional int32 bidsize = 20;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->bidsize(), output);
  }

  // optional int32 asksize = 30;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->asksize(), output);
  }

  // optional int32 ask = 40;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->ask(), output);
  }

  // optional bytes bidordermetaroot = 50;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->bidordermetaroot(), output);
  }

  // optional bytes askordermetaroot = 60;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->askordermetaroot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.LimitBookMeta)
}

::google::protobuf::uint8* LimitBookMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.LimitBookMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bid = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->bid(), target);
  }

  // optional int32 bidsize = 20;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->bidsize(), target);
  }

  // optional int32 asksize = 30;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->asksize(), target);
  }

  // optional int32 ask = 40;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->ask(), target);
  }

  // optional bytes bidordermetaroot = 50;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->bidordermetaroot(), target);
  }

  // optional bytes askordermetaroot = 60;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->askordermetaroot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.LimitBookMeta)
  return target;
}

size_t LimitBookMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.LimitBookMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes bidordermetaroot = 50;
    if (has_bidordermetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bidordermetaroot());
    }

    // optional bytes askordermetaroot = 60;
    if (has_askordermetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->askordermetaroot());
    }

    // optional int32 bid = 10;
    if (has_bid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bid());
    }

    // optional int32 bidsize = 20;
    if (has_bidsize()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bidsize());
    }

    // optional int32 asksize = 30;
    if (has_asksize()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->asksize());
    }

    // optional int32 ask = 40;
    if (has_ask()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ask());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LimitBookMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.LimitBookMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const LimitBookMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LimitBookMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.LimitBookMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.LimitBookMeta)
    MergeFrom(*source);
  }
}

void LimitBookMeta::MergeFrom(const LimitBookMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.LimitBookMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bidordermetaroot();
      bidordermetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bidordermetaroot_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_askordermetaroot();
      askordermetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.askordermetaroot_);
    }
    if (cached_has_bits & 0x00000004u) {
      bid_ = from.bid_;
    }
    if (cached_has_bits & 0x00000008u) {
      bidsize_ = from.bidsize_;
    }
    if (cached_has_bits & 0x00000010u) {
      asksize_ = from.asksize_;
    }
    if (cached_has_bits & 0x00000020u) {
      ask_ = from.ask_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LimitBookMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.LimitBookMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LimitBookMeta::CopyFrom(const LimitBookMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.LimitBookMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LimitBookMeta::IsInitialized() const {
  return true;
}

void LimitBookMeta::Swap(LimitBookMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LimitBookMeta::InternalSwap(LimitBookMeta* other) {
  using std::swap;
  bidordermetaroot_.Swap(&other->bidordermetaroot_);
  askordermetaroot_.Swap(&other->askordermetaroot_);
  swap(bid_, other->bid_);
  swap(bidsize_, other->bidsize_);
  swap(asksize_, other->asksize_);
  swap(ask_, other->ask_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LimitBookMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MarketTicMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketTicMeta::kPriceFieldNumber;
const int MarketTicMeta::kSizeFieldNumber;
const int MarketTicMeta::kOrderfillheadFieldNumber;
const int MarketTicMeta::kPrevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketTicMeta::MarketTicMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsMarketTicMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.MarketTicMeta)
}
MarketTicMeta::MarketTicMeta(const MarketTicMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  orderfillhead_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_orderfillhead()) {
    orderfillhead_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderfillhead_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&price_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.MarketTicMeta)
}

void MarketTicMeta::SharedCtor() {
  _cached_size_ = 0;
  orderfillhead_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&price_)) + sizeof(size_));
}

MarketTicMeta::~MarketTicMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.MarketTicMeta)
  SharedDtor();
}

void MarketTicMeta::SharedDtor() {
  orderfillhead_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MarketTicMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketTicMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketTicMeta& MarketTicMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsMarketTicMeta();
  return *internal_default_instance();
}

MarketTicMeta* MarketTicMeta::New(::google::protobuf::Arena* arena) const {
  MarketTicMeta* n = new MarketTicMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketTicMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.MarketTicMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!orderfillhead_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*orderfillhead_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&price_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&price_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MarketTicMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.MarketTicMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 price = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 size = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes orderfillhead = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_orderfillhead()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.MarketTicMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.MarketTicMeta)
  return false;
#undef DO_
}

void MarketTicMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.MarketTicMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 price = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->price(), output);
  }

  // optional int32 size = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->size(), output);
  }

  // optional bytes orderfillhead = 40;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->orderfillhead(), output);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->prev(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.MarketTicMeta)
}

::google::protobuf::uint8* MarketTicMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.MarketTicMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 price = 20;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->price(), target);
  }

  // optional int32 size = 30;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->size(), target);
  }

  // optional bytes orderfillhead = 40;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->orderfillhead(), target);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->prev(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.MarketTicMeta)
  return target;
}

size_t MarketTicMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.MarketTicMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes orderfillhead = 40;
    if (has_orderfillhead()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->orderfillhead());
    }

    // optional bytes prev = 50;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional int32 price = 20;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional int32 size = 30;
    if (has_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketTicMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.MarketTicMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketTicMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketTicMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.MarketTicMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.MarketTicMeta)
    MergeFrom(*source);
  }
}

void MarketTicMeta::MergeFrom(const MarketTicMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.MarketTicMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_orderfillhead();
      orderfillhead_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderfillhead_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000004u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000008u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MarketTicMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.MarketTicMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketTicMeta::CopyFrom(const MarketTicMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.MarketTicMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketTicMeta::IsInitialized() const {
  return true;
}

void MarketTicMeta::Swap(MarketTicMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketTicMeta::InternalSwap(MarketTicMeta* other) {
  using std::swap;
  orderfillhead_.Swap(&other->orderfillhead_);
  prev_.Swap(&other->prev_);
  swap(price_, other->price_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketTicMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderMeta::kRefnumFieldNumber;
const int OrderMeta::kFnameFieldNumber;
const int OrderMeta::kPlayeridFieldNumber;
const int OrderMeta::kBuysideFieldNumber;
const int OrderMeta::kSizeFieldNumber;
const int OrderMeta::kPriceFieldNumber;
const int OrderMeta::kTxmetaidFieldNumber;
const int OrderMeta::kOrderfillmetaidFieldNumber;
const int OrderMeta::kTimestampFieldNumber;
const int OrderMeta::kPrevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderMeta::OrderMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsOrderMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.OrderMeta)
}
OrderMeta::OrderMeta(const OrderMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fname()) {
    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaid()) {
    txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
  }
  orderfillmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_orderfillmetaid()) {
    orderfillmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderfillmetaid_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.OrderMeta)
}

void OrderMeta::SharedCtor() {
  _cached_size_ = 0;
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderfillmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(price_));
}

OrderMeta::~OrderMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.OrderMeta)
  SharedDtor();
}

void OrderMeta::SharedDtor() {
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderfillmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderMeta& OrderMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsOrderMeta();
  return *internal_default_instance();
}

OrderMeta* OrderMeta::New(::google::protobuf::Arena* arena) const {
  OrderMeta* n = new OrderMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.OrderMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!fname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!txmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!orderfillmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*orderfillmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 224u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&buyside_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(buyside_));
  }
  if (cached_has_bits & 768u) {
    ::memset(&size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_) -
        reinterpret_cast<char*>(&size_)) + sizeof(price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.OrderMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_refnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string fname = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fname().data(), static_cast<int>(this->fname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.OrderMeta.fname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string playerid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.OrderMeta.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool buyside = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_buyside();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &buyside_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 size = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 price = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes txmetaid = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes orderfillmetaid = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_orderfillmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 timestamp = 75;
      case 75: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 600 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.OrderMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.OrderMeta)
  return false;
#undef DO_
}

void OrderMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.OrderMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 refnum = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->refnum(), output);
  }

  // optional string fname = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.OrderMeta.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->fname(), output);
  }

  // optional string playerid = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.OrderMeta.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->playerid(), output);
  }

  // optional bool buyside = 30;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->buyside(), output);
  }

  // optional int32 size = 40;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->size(), output);
  }

  // optional int32 price = 50;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->price(), output);
  }

  // optional bytes txmetaid = 60;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->txmetaid(), output);
  }

  // optional bytes orderfillmetaid = 70;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->orderfillmetaid(), output);
  }

  // optional int32 timestamp = 75;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(75, this->timestamp(), output);
  }

  // optional bytes prev = 80;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      80, this->prev(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.OrderMeta)
}

::google::protobuf::uint8* OrderMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.OrderMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 refnum = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->refnum(), target);
  }

  // optional string fname = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.OrderMeta.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->fname(), target);
  }

  // optional string playerid = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.OrderMeta.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->playerid(), target);
  }

  // optional bool buyside = 30;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->buyside(), target);
  }

  // optional int32 size = 40;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->size(), target);
  }

  // optional int32 price = 50;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->price(), target);
  }

  // optional bytes txmetaid = 60;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->txmetaid(), target);
  }

  // optional bytes orderfillmetaid = 70;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->orderfillmetaid(), target);
  }

  // optional int32 timestamp = 75;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(75, this->timestamp(), target);
  }

  // optional bytes prev = 80;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        80, this->prev(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.OrderMeta)
  return target;
}

size_t OrderMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.OrderMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string fname = 10;
    if (has_fname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fname());
    }

    // optional string playerid = 20;
    if (has_playerid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional bytes txmetaid = 60;
    if (has_txmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaid());
    }

    // optional bytes orderfillmetaid = 70;
    if (has_orderfillmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->orderfillmetaid());
    }

    // optional bytes prev = 80;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional int32 timestamp = 75;
    if (has_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestamp());
    }

    // optional int32 refnum = 1;
    if (has_refnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refnum());
    }

    // optional bool buyside = 30;
    if (has_buyside()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 size = 40;
    if (has_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

    // optional int32 price = 50;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.OrderMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.OrderMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.OrderMeta)
    MergeFrom(*source);
  }
}

void OrderMeta::MergeFrom(const OrderMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.OrderMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fname();
      fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_txmetaid();
      txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_orderfillmetaid();
      orderfillmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderfillmetaid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000020u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000040u) {
      refnum_ = from.refnum_;
    }
    if (cached_has_bits & 0x00000080u) {
      buyside_ = from.buyside_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000200u) {
      price_ = from.price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OrderMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.OrderMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderMeta::CopyFrom(const OrderMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.OrderMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderMeta::IsInitialized() const {
  return true;
}

void OrderMeta::Swap(OrderMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderMeta::InternalSwap(OrderMeta* other) {
  using std::swap;
  fname_.Swap(&other->fname_);
  playerid_.Swap(&other->playerid_);
  txmetaid_.Swap(&other->txmetaid_);
  orderfillmetaid_.Swap(&other->orderfillmetaid_);
  prev_.Swap(&other->prev_);
  swap(timestamp_, other->timestamp_);
  swap(refnum_, other->refnum_);
  swap(buyside_, other->buyside_);
  swap(size_, other->size_);
  swap(price_, other->price_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderFillMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderFillMeta::kRefnumFieldNumber;
const int OrderFillMeta::kFnameFieldNumber;
const int OrderFillMeta::kPlayeridFieldNumber;
const int OrderFillMeta::kFillpriceFieldNumber;
const int OrderFillMeta::kFillsizeFieldNumber;
const int OrderFillMeta::kBuysideFieldNumber;
const int OrderFillMeta::kTimestampFieldNumber;
const int OrderFillMeta::kTxmetaidFieldNumber;
const int OrderFillMeta::kPrevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderFillMeta::OrderFillMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsOrderFillMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.OrderFillMeta)
}
OrderFillMeta::OrderFillMeta(const OrderFillMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fname()) {
    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_txmetaid()) {
    txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  ::memcpy(&refnum_, &from.refnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&refnum_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.OrderFillMeta)
}

void OrderFillMeta::SharedCtor() {
  _cached_size_ = 0;
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&refnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&refnum_)) + sizeof(timestamp_));
}

OrderFillMeta::~OrderFillMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.OrderFillMeta)
  SharedDtor();
}

void OrderFillMeta::SharedDtor() {
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OrderFillMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderFillMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderFillMeta& OrderFillMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsOrderFillMeta();
  return *internal_default_instance();
}

OrderFillMeta* OrderFillMeta::New(::google::protobuf::Arena* arena) const {
  OrderFillMeta* n = new OrderFillMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderFillMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.OrderFillMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!fname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!txmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*txmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&refnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&buyside_) -
        reinterpret_cast<char*>(&refnum_)) + sizeof(buyside_));
  }
  timestamp_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderFillMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.OrderFillMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refnum = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_refnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string fname = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fname().data(), static_cast<int>(this->fname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.OrderFillMeta.fname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string playerid = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.OrderFillMeta.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fillprice = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_fillprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fillprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fillsize = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_fillsize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fillsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool buyside = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          set_has_buyside();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &buyside_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 timestamp = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes txmetaid = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.OrderFillMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.OrderFillMeta)
  return false;
#undef DO_
}

void OrderFillMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.OrderFillMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 refnum = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->refnum(), output);
  }

  // optional string fname = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.OrderFillMeta.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->fname(), output);
  }

  // optional string playerid = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.OrderFillMeta.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->playerid(), output);
  }

  // optional int32 fillprice = 20;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->fillprice(), output);
  }

  // optional int32 fillsize = 30;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->fillsize(), output);
  }

  // optional bool buyside = 35;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(35, this->buyside(), output);
  }

  // optional uint64 timestamp = 40;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(40, this->timestamp(), output);
  }

  // optional bytes txmetaid = 60;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->txmetaid(), output);
  }

  // optional bytes prev = 70;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->prev(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.OrderFillMeta)
}

::google::protobuf::uint8* OrderFillMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.OrderFillMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 refnum = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->refnum(), target);
  }

  // optional string fname = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.OrderFillMeta.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->fname(), target);
  }

  // optional string playerid = 15;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.OrderFillMeta.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->playerid(), target);
  }

  // optional int32 fillprice = 20;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->fillprice(), target);
  }

  // optional int32 fillsize = 30;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->fillsize(), target);
  }

  // optional bool buyside = 35;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(35, this->buyside(), target);
  }

  // optional uint64 timestamp = 40;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(40, this->timestamp(), target);
  }

  // optional bytes txmetaid = 60;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->txmetaid(), target);
  }

  // optional bytes prev = 70;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->prev(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.OrderFillMeta)
  return target;
}

size_t OrderFillMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.OrderFillMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string fname = 10;
    if (has_fname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fname());
    }

    // optional string playerid = 15;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional bytes txmetaid = 60;
    if (has_txmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->txmetaid());
    }

    // optional bytes prev = 70;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional int32 refnum = 1;
    if (has_refnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refnum());
    }

    // optional int32 fillprice = 20;
    if (has_fillprice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fillprice());
    }

    // optional int32 fillsize = 30;
    if (has_fillsize()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fillsize());
    }

    // optional bool buyside = 35;
    if (has_buyside()) {
      total_size += 2 + 1;
    }

  }
  // optional uint64 timestamp = 40;
  if (has_timestamp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->timestamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderFillMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.OrderFillMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderFillMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderFillMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.OrderFillMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.OrderFillMeta)
    MergeFrom(*source);
  }
}

void OrderFillMeta::MergeFrom(const OrderFillMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.OrderFillMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fname();
      fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_txmetaid();
      txmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txmetaid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000010u) {
      refnum_ = from.refnum_;
    }
    if (cached_has_bits & 0x00000020u) {
      fillprice_ = from.fillprice_;
    }
    if (cached_has_bits & 0x00000040u) {
      fillsize_ = from.fillsize_;
    }
    if (cached_has_bits & 0x00000080u) {
      buyside_ = from.buyside_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_timestamp(from.timestamp());
  }
}

void OrderFillMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.OrderFillMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderFillMeta::CopyFrom(const OrderFillMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.OrderFillMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderFillMeta::IsInitialized() const {
  return true;
}

void OrderFillMeta::Swap(OrderFillMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderFillMeta::InternalSwap(OrderFillMeta* other) {
  using std::swap;
  fname_.Swap(&other->fname_);
  playerid_.Swap(&other->playerid_);
  txmetaid_.Swap(&other->txmetaid_);
  prev_.Swap(&other->prev_);
  swap(refnum_, other->refnum_);
  swap(fillprice_, other->fillprice_);
  swap(fillsize_, other->fillsize_);
  swap(buyside_, other->buyside_);
  swap(timestamp_, other->timestamp_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderFillMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GlobalStateMeta::InitAsDefaultInstance() {
  ::fantasybit::_GlobalStateMeta_default_instance_._instance.get_mutable()->globalstate_ = const_cast< ::fantasybit::GlobalState*>(
      ::fantasybit::GlobalState::internal_default_instance());
}
void GlobalStateMeta::clear_globalstate() {
  if (globalstate_ != NULL) globalstate_->Clear();
  clear_has_globalstate();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalStateMeta::kGlobalstateFieldNumber;
const int GlobalStateMeta::kTrmetaidFieldNumber;
const int GlobalStateMeta::kPrevFieldNumber;
const int GlobalStateMeta::kNextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalStateMeta::GlobalStateMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGlobalStateMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GlobalStateMeta)
}
GlobalStateMeta::GlobalStateMeta(const GlobalStateMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trmetaid()) {
    trmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trmetaid_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_next()) {
    next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
  }
  if (from.has_globalstate()) {
    globalstate_ = new ::fantasybit::GlobalState(*from.globalstate_);
  } else {
    globalstate_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GlobalStateMeta)
}

void GlobalStateMeta::SharedCtor() {
  _cached_size_ = 0;
  trmetaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  globalstate_ = NULL;
}

GlobalStateMeta::~GlobalStateMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.GlobalStateMeta)
  SharedDtor();
}

void GlobalStateMeta::SharedDtor() {
  trmetaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  next_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete globalstate_;
}

void GlobalStateMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalStateMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GlobalStateMeta& GlobalStateMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGlobalStateMeta();
  return *internal_default_instance();
}

GlobalStateMeta* GlobalStateMeta::New(::google::protobuf::Arena* arena) const {
  GlobalStateMeta* n = new GlobalStateMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GlobalStateMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GlobalStateMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!trmetaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*trmetaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!next_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*next_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(globalstate_ != NULL);
      globalstate_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GlobalStateMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GlobalStateMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.GlobalState globalstate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_globalstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes trmetaid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_trmetaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes next = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_next()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GlobalStateMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GlobalStateMeta)
  return false;
#undef DO_
}

void GlobalStateMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GlobalStateMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GlobalState globalstate = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->globalstate_, output);
  }

  // optional bytes trmetaid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->trmetaid(), output);
  }

  // optional bytes prev = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->prev(), output);
  }

  // optional bytes next = 40;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->next(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GlobalStateMeta)
}

::google::protobuf::uint8* GlobalStateMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GlobalStateMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GlobalState globalstate = 10;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->globalstate_, deterministic, target);
  }

  // optional bytes trmetaid = 20;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->trmetaid(), target);
  }

  // optional bytes prev = 30;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->prev(), target);
  }

  // optional bytes next = 40;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->next(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GlobalStateMeta)
  return target;
}

size_t GlobalStateMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GlobalStateMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes trmetaid = 20;
    if (has_trmetaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->trmetaid());
    }

    // optional bytes prev = 30;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional bytes next = 40;
    if (has_next()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->next());
    }

    // optional .fantasybit.GlobalState globalstate = 10;
    if (has_globalstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->globalstate_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalStateMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GlobalStateMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalStateMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GlobalStateMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GlobalStateMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GlobalStateMeta)
    MergeFrom(*source);
  }
}

void GlobalStateMeta::MergeFrom(const GlobalStateMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GlobalStateMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_trmetaid();
      trmetaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trmetaid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_next();
      next_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_globalstate()->::fantasybit::GlobalState::MergeFrom(from.globalstate());
    }
  }
}

void GlobalStateMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GlobalStateMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalStateMeta::CopyFrom(const GlobalStateMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GlobalStateMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalStateMeta::IsInitialized() const {
  return true;
}

void GlobalStateMeta::Swap(GlobalStateMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GlobalStateMeta::InternalSwap(GlobalStateMeta* other) {
  using std::swap;
  trmetaid_.Swap(&other->trmetaid_);
  prev_.Swap(&other->prev_);
  next_.Swap(&other->next_);
  swap(globalstate_, other->globalstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GlobalStateMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerMeta::InitAsDefaultInstance() {
  ::fantasybit::_PlayerMeta_default_instance_._instance.get_mutable()->player_base_ = const_cast< ::fantasybit::PlayerBase*>(
      ::fantasybit::PlayerBase::internal_default_instance());
  ::fantasybit::_PlayerMeta_default_instance_._instance.get_mutable()->player_status_ = const_cast< ::fantasybit::PlayerStatus*>(
      ::fantasybit::PlayerStatus::internal_default_instance());
}
void PlayerMeta::clear_player_base() {
  if (player_base_ != NULL) player_base_->Clear();
  clear_has_player_base();
}
void PlayerMeta::clear_player_status() {
  if (player_status_ != NULL) player_status_->Clear();
  clear_has_player_status();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerMeta::kPlayeridFieldNumber;
const int PlayerMeta::kPlayerBaseFieldNumber;
const int PlayerMeta::kPlayerStatusFieldNumber;
const int PlayerMeta::kDatametaidFieldNumber;
const int PlayerMeta::kPrevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerMeta::PlayerMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsPlayerMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.PlayerMeta)
}
PlayerMeta::PlayerMeta(const PlayerMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  datametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_datametaid()) {
    datametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datametaid_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  if (from.has_player_base()) {
    player_base_ = new ::fantasybit::PlayerBase(*from.player_base_);
  } else {
    player_base_ = NULL;
  }
  if (from.has_player_status()) {
    player_status_ = new ::fantasybit::PlayerStatus(*from.player_status_);
  } else {
    player_status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.PlayerMeta)
}

void PlayerMeta::SharedCtor() {
  _cached_size_ = 0;
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datametaid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_base_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&player_status_) -
      reinterpret_cast<char*>(&player_base_)) + sizeof(player_status_));
}

PlayerMeta::~PlayerMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.PlayerMeta)
  SharedDtor();
}

void PlayerMeta::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  datametaid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete player_base_;
  if (this != internal_default_instance()) delete player_status_;
}

void PlayerMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerMeta& PlayerMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsPlayerMeta();
  return *internal_default_instance();
}

PlayerMeta* PlayerMeta::New(::google::protobuf::Arena* arena) const {
  PlayerMeta* n = new PlayerMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.PlayerMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!datametaid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*datametaid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(player_base_ != NULL);
      player_base_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(player_status_ != NULL);
      player_status_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.PlayerMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string playerid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PlayerMeta.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.PlayerBase player_base = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.PlayerStatus player_status = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_player_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes datametaid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_datametaid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.PlayerMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.PlayerMeta)
  return false;
#undef DO_
}

void PlayerMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.PlayerMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerMeta.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->playerid(), output);
  }

  // optional .fantasybit.PlayerBase player_base = 20;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->player_base_, output);
  }

  // optional .fantasybit.PlayerStatus player_status = 30;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->player_status_, output);
  }

  // optional bytes datametaid = 40;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->datametaid(), output);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->prev(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.PlayerMeta)
}

::google::protobuf::uint8* PlayerMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.PlayerMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerMeta.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->playerid(), target);
  }

  // optional .fantasybit.PlayerBase player_base = 20;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->player_base_, deterministic, target);
  }

  // optional .fantasybit.PlayerStatus player_status = 30;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, *this->player_status_, deterministic, target);
  }

  // optional bytes datametaid = 40;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->datametaid(), target);
  }

  // optional bytes prev = 50;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->prev(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.PlayerMeta)
  return target;
}

size_t PlayerMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.PlayerMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string playerid = 10;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional bytes datametaid = 40;
    if (has_datametaid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->datametaid());
    }

    // optional bytes prev = 50;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

    // optional .fantasybit.PlayerBase player_base = 20;
    if (has_player_base()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->player_base_);
    }

    // optional .fantasybit.PlayerStatus player_status = 30;
    if (has_player_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->player_status_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.PlayerMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.PlayerMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.PlayerMeta)
    MergeFrom(*source);
  }
}

void PlayerMeta::MergeFrom(const PlayerMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.PlayerMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_datametaid();
      datametaid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.datametaid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_player_base()->::fantasybit::PlayerBase::MergeFrom(from.player_base());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_player_status()->::fantasybit::PlayerStatus::MergeFrom(from.player_status());
    }
  }
}

void PlayerMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.PlayerMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerMeta::CopyFrom(const PlayerMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.PlayerMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerMeta::IsInitialized() const {
  return true;
}

void PlayerMeta::Swap(PlayerMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerMeta::InternalSwap(PlayerMeta* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_);
  datametaid_.Swap(&other->datametaid_);
  prev_.Swap(&other->prev_);
  swap(player_base_, other->player_base_);
  swap(player_status_, other->player_status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TeamMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamMeta::kTeamidFieldNumber;
const int TeamMeta::kPlayermetaidrootFieldNumber;
const int TeamMeta::kPrevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamMeta::TeamMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsTeamMeta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.TeamMeta)
}
TeamMeta::TeamMeta(const TeamMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  teamid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_teamid()) {
    teamid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamid_);
  }
  playermetaidroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playermetaidroot()) {
    playermetaidroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playermetaidroot_);
  }
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prev()) {
    prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.TeamMeta)
}

void TeamMeta::SharedCtor() {
  _cached_size_ = 0;
  teamid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playermetaidroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TeamMeta::~TeamMeta() {
  // @@protoc_insertion_point(destructor:fantasybit.TeamMeta)
  SharedDtor();
}

void TeamMeta::SharedDtor() {
  teamid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playermetaidroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prev_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TeamMeta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamMeta::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamMeta& TeamMeta::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsTeamMeta();
  return *internal_default_instance();
}

TeamMeta* TeamMeta::New(::google::protobuf::Arena* arena) const {
  TeamMeta* n = new TeamMeta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.TeamMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!teamid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*teamid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!playermetaidroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playermetaidroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!prev_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prev_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.TeamMeta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string teamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->teamid().data(), static_cast<int>(this->teamid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamMeta.teamid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes playermetaidroot = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playermetaidroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes prev = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_prev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.TeamMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.TeamMeta)
  return false;
#undef DO_
}

void TeamMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.TeamMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string teamid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teamid().data(), static_cast<int>(this->teamid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamMeta.teamid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->teamid(), output);
  }

  // optional bytes playermetaidroot = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->playermetaidroot(), output);
  }

  // optional bytes prev = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->prev(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.TeamMeta)
}

::google::protobuf::uint8* TeamMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.TeamMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string teamid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teamid().data(), static_cast<int>(this->teamid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamMeta.teamid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->teamid(), target);
  }

  // optional bytes playermetaidroot = 20;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->playermetaidroot(), target);
  }

  // optional bytes prev = 30;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->prev(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.TeamMeta)
  return target;
}

size_t TeamMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.TeamMeta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string teamid = 10;
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->teamid());
    }

    // optional bytes playermetaidroot = 20;
    if (has_playermetaidroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->playermetaidroot());
    }

    // optional bytes prev = 30;
    if (has_prev()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->prev());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.TeamMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.TeamMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.TeamMeta)
    MergeFrom(*source);
  }
}

void TeamMeta::MergeFrom(const TeamMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.TeamMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_teamid();
      teamid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_playermetaidroot();
      playermetaidroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playermetaidroot_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_prev();
      prev_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prev_);
    }
  }
}

void TeamMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.TeamMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamMeta::CopyFrom(const TeamMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.TeamMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamMeta::IsInitialized() const {
  return true;
}

void TeamMeta::Swap(TeamMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamMeta::InternalSwap(TeamMeta* other) {
  using std::swap;
  teamid_.Swap(&other->teamid_);
  playermetaidroot_.Swap(&other->playermetaidroot_);
  prev_.Swap(&other->prev_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamMeta::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void pbstate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int pbstate::kSchedulestateidFieldNumber;
const int pbstate::kLeaderboardstateidFieldNumber;
const int pbstate::kProjstateidFieldNumber;
const int pbstate::kPosstateidFieldNumber;
const int pbstate::kOrderstateidFieldNumber;
const int pbstate::kMarketstateidFieldNumber;
const int pbstate::kGlobalstateidFieldNumber;
const int pbstate::kTeamstatemidFieldNumber;
const int pbstate::kFantasynamestateidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

pbstate::pbstate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultspbstate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.pbstate)
}
pbstate::pbstate(const pbstate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  schedulestateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_schedulestateid()) {
    schedulestateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schedulestateid_);
  }
  leaderboardstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_leaderboardstateid()) {
    leaderboardstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderboardstateid_);
  }
  projstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_projstateid()) {
    projstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projstateid_);
  }
  posstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_posstateid()) {
    posstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posstateid_);
  }
  orderstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_orderstateid()) {
    orderstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderstateid_);
  }
  marketstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_marketstateid()) {
    marketstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.marketstateid_);
  }
  globalstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_globalstateid()) {
    globalstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.globalstateid_);
  }
  teamstatemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_teamstatemid()) {
    teamstatemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamstatemid_);
  }
  fantasynamestateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fantasynamestateid()) {
    fantasynamestateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasynamestateid_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.pbstate)
}

void pbstate::SharedCtor() {
  _cached_size_ = 0;
  schedulestateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leaderboardstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  projstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  marketstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  globalstateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teamstatemid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fantasynamestateid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

pbstate::~pbstate() {
  // @@protoc_insertion_point(destructor:fantasybit.pbstate)
  SharedDtor();
}

void pbstate::SharedDtor() {
  schedulestateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  leaderboardstateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  projstateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posstateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  orderstateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  marketstateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  globalstateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teamstatemid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fantasynamestateid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void pbstate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pbstate::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const pbstate& pbstate::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultspbstate();
  return *internal_default_instance();
}

pbstate* pbstate::New(::google::protobuf::Arena* arena) const {
  pbstate* n = new pbstate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void pbstate::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.pbstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!schedulestateid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*schedulestateid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!leaderboardstateid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*leaderboardstateid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!projstateid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*projstateid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!posstateid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*posstateid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!orderstateid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*orderstateid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!marketstateid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*marketstateid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!globalstateid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*globalstateid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(!teamstatemid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*teamstatemid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 0x00000100u) {
    GOOGLE_DCHECK(!fantasynamestateid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*fantasynamestateid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool pbstate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.pbstate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes schedulestateid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_schedulestateid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes leaderboardstateid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_leaderboardstateid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes projstateid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_projstateid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes posstateid = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_posstateid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes orderstateid = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_orderstateid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes marketstateid = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_marketstateid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes globalstateid = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_globalstateid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes teamstatemid = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_teamstatemid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes fantasynamestateid = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fantasynamestateid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.pbstate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.pbstate)
  return false;
#undef DO_
}

void pbstate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.pbstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes schedulestateid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->schedulestateid(), output);
  }

  // optional bytes leaderboardstateid = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->leaderboardstateid(), output);
  }

  // optional bytes projstateid = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->projstateid(), output);
  }

  // optional bytes posstateid = 35;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      35, this->posstateid(), output);
  }

  // optional bytes orderstateid = 40;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->orderstateid(), output);
  }

  // optional bytes marketstateid = 50;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->marketstateid(), output);
  }

  // optional bytes globalstateid = 60;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->globalstateid(), output);
  }

  // optional bytes teamstatemid = 70;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      70, this->teamstatemid(), output);
  }

  // optional bytes fantasynamestateid = 80;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      80, this->fantasynamestateid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.pbstate)
}

::google::protobuf::uint8* pbstate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.pbstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes schedulestateid = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->schedulestateid(), target);
  }

  // optional bytes leaderboardstateid = 20;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->leaderboardstateid(), target);
  }

  // optional bytes projstateid = 30;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->projstateid(), target);
  }

  // optional bytes posstateid = 35;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        35, this->posstateid(), target);
  }

  // optional bytes orderstateid = 40;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->orderstateid(), target);
  }

  // optional bytes marketstateid = 50;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->marketstateid(), target);
  }

  // optional bytes globalstateid = 60;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->globalstateid(), target);
  }

  // optional bytes teamstatemid = 70;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        70, this->teamstatemid(), target);
  }

  // optional bytes fantasynamestateid = 80;
  if (cached_has_bits & 0x00000100u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        80, this->fantasynamestateid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.pbstate)
  return target;
}

size_t pbstate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.pbstate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes schedulestateid = 10;
    if (has_schedulestateid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->schedulestateid());
    }

    // optional bytes leaderboardstateid = 20;
    if (has_leaderboardstateid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->leaderboardstateid());
    }

    // optional bytes projstateid = 30;
    if (has_projstateid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->projstateid());
    }

    // optional bytes posstateid = 35;
    if (has_posstateid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->posstateid());
    }

    // optional bytes orderstateid = 40;
    if (has_orderstateid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->orderstateid());
    }

    // optional bytes marketstateid = 50;
    if (has_marketstateid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->marketstateid());
    }

    // optional bytes globalstateid = 60;
    if (has_globalstateid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->globalstateid());
    }

    // optional bytes teamstatemid = 70;
    if (has_teamstatemid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->teamstatemid());
    }

  }
  // optional bytes fantasynamestateid = 80;
  if (has_fantasynamestateid()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->fantasynamestateid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pbstate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.pbstate)
  GOOGLE_DCHECK_NE(&from, this);
  const pbstate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const pbstate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.pbstate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.pbstate)
    MergeFrom(*source);
  }
}

void pbstate::MergeFrom(const pbstate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.pbstate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_schedulestateid();
      schedulestateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.schedulestateid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_leaderboardstateid();
      leaderboardstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.leaderboardstateid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_projstateid();
      projstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.projstateid_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_posstateid();
      posstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posstateid_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_orderstateid();
      orderstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.orderstateid_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_marketstateid();
      marketstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.marketstateid_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_globalstateid();
      globalstateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.globalstateid_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_teamstatemid();
      teamstatemid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamstatemid_);
    }
  }
  if (cached_has_bits & 0x00000100u) {
    set_has_fantasynamestateid();
    fantasynamestateid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasynamestateid_);
  }
}

void pbstate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.pbstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pbstate::CopyFrom(const pbstate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.pbstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pbstate::IsInitialized() const {
  return true;
}

void pbstate::Swap(pbstate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void pbstate::InternalSwap(pbstate* other) {
  using std::swap;
  schedulestateid_.Swap(&other->schedulestateid_);
  leaderboardstateid_.Swap(&other->leaderboardstateid_);
  projstateid_.Swap(&other->projstateid_);
  posstateid_.Swap(&other->posstateid_);
  orderstateid_.Swap(&other->orderstateid_);
  marketstateid_.Swap(&other->marketstateid_);
  globalstateid_.Swap(&other->globalstateid_);
  teamstatemid_.Swap(&other->teamstatemid_);
  fantasynamestateid_.Swap(&other->fantasynamestateid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata pbstate::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MerkleTree::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MerkleTree::kRootFieldNumber;
const int MerkleTree::kLeavesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MerkleTree::MerkleTree()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsMerkleTree();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.MerkleTree)
}
MerkleTree::MerkleTree(const MerkleTree& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      leaves_(from.leaves_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_root()) {
    root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.root_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.MerkleTree)
}

void MerkleTree::SharedCtor() {
  _cached_size_ = 0;
  root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MerkleTree::~MerkleTree() {
  // @@protoc_insertion_point(destructor:fantasybit.MerkleTree)
  SharedDtor();
}

void MerkleTree::SharedDtor() {
  root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MerkleTree::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MerkleTree::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MerkleTree& MerkleTree::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsMerkleTree();
  return *internal_default_instance();
}

MerkleTree* MerkleTree::New(::google::protobuf::Arena* arena) const {
  MerkleTree* n = new MerkleTree;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MerkleTree::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.MerkleTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  leaves_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!root_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*root_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MerkleTree::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.MerkleTree)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes root = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes leaves = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_leaves()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.MerkleTree)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.MerkleTree)
  return false;
#undef DO_
}

void MerkleTree::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.MerkleTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes root = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->root(), output);
  }

  // repeated bytes leaves = 20;
  for (int i = 0, n = this->leaves_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      20, this->leaves(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.MerkleTree)
}

::google::protobuf::uint8* MerkleTree::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.MerkleTree)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes root = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->root(), target);
  }

  // repeated bytes leaves = 20;
  for (int i = 0, n = this->leaves_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(20, this->leaves(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.MerkleTree)
  return target;
}

size_t MerkleTree::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.MerkleTree)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated bytes leaves = 20;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->leaves_size());
  for (int i = 0, n = this->leaves_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->leaves(i));
  }

  // optional bytes root = 10;
  if (has_root()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->root());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MerkleTree::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.MerkleTree)
  GOOGLE_DCHECK_NE(&from, this);
  const MerkleTree* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MerkleTree>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.MerkleTree)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.MerkleTree)
    MergeFrom(*source);
  }
}

void MerkleTree::MergeFrom(const MerkleTree& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.MerkleTree)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  leaves_.MergeFrom(from.leaves_);
  if (from.has_root()) {
    set_has_root();
    root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.root_);
  }
}

void MerkleTree::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.MerkleTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MerkleTree::CopyFrom(const MerkleTree& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.MerkleTree)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MerkleTree::IsInitialized() const {
  return true;
}

void MerkleTree::Swap(MerkleTree* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MerkleTree::InternalSwap(MerkleTree* other) {
  using std::swap;
  leaves_.InternalSwap(&other->leaves_);
  root_.Swap(&other->root_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MerkleTree::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NewPlayerModel::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewPlayerModel::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewPlayerModel::NewPlayerModel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsNewPlayerModel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.NewPlayerModel)
}
NewPlayerModel::NewPlayerModel(const NewPlayerModel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:fantasybit.NewPlayerModel)
}

void NewPlayerModel::SharedCtor() {
  _cached_size_ = 0;
}

NewPlayerModel::~NewPlayerModel() {
  // @@protoc_insertion_point(destructor:fantasybit.NewPlayerModel)
  SharedDtor();
}

void NewPlayerModel::SharedDtor() {
}

void NewPlayerModel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewPlayerModel::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewPlayerModel& NewPlayerModel::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsNewPlayerModel();
  return *internal_default_instance();
}

NewPlayerModel* NewPlayerModel::New(::google::protobuf::Arena* arena) const {
  NewPlayerModel* n = new NewPlayerModel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewPlayerModel::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.NewPlayerModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewPlayerModel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.NewPlayerModel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .fantasybit.PlayerMeta players = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.NewPlayerModel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.NewPlayerModel)
  return false;
#undef DO_
}

void NewPlayerModel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.NewPlayerModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .fantasybit.PlayerMeta players = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->players(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.NewPlayerModel)
}

::google::protobuf::uint8* NewPlayerModel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.NewPlayerModel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .fantasybit.PlayerMeta players = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.NewPlayerModel)
  return target;
}

size_t NewPlayerModel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.NewPlayerModel)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.PlayerMeta players = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewPlayerModel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.NewPlayerModel)
  GOOGLE_DCHECK_NE(&from, this);
  const NewPlayerModel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewPlayerModel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.NewPlayerModel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.NewPlayerModel)
    MergeFrom(*source);
  }
}

void NewPlayerModel::MergeFrom(const NewPlayerModel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.NewPlayerModel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
}

void NewPlayerModel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.NewPlayerModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewPlayerModel::CopyFrom(const NewPlayerModel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.NewPlayerModel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewPlayerModel::IsInitialized() const {
  return true;
}

void NewPlayerModel::Swap(NewPlayerModel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewPlayerModel::InternalSwap(NewPlayerModel* other) {
  using std::swap;
  players_.InternalSwap(&other->players_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewPlayerModel::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WsReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WsReq::kVersionFieldNumber;
const int WsReq::kCtypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WsReq::WsReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsWsReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.WsReq)
}
WsReq::WsReq(const WsReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&ctype_) -
    reinterpret_cast<char*>(&version_)) + sizeof(ctype_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.WsReq)
}

void WsReq::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctype_) -
      reinterpret_cast<char*>(&version_)) + sizeof(ctype_));
}

WsReq::~WsReq() {
  // @@protoc_insertion_point(destructor:fantasybit.WsReq)
  SharedDtor();
}

void WsReq::SharedDtor() {
}

void WsReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WsReq::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WsReq& WsReq::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsWsReq();
  return *internal_default_instance();
}

WsReq* WsReq::New(::google::protobuf::Arena* arena) const {
  WsReq* n = new WsReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.WsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ctype_) -
        reinterpret_cast<char*>(&version_)) + sizeof(ctype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WsReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.WsReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.CType ctype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::CType_IsValid(value)) {
            set_ctype(static_cast< ::fantasybit::CType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        if ((800u <= tag)) {
          DO_(_extensions_.ParseField(tag, input,
              internal_default_instance(),
              _internal_metadata_.mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.WsReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.WsReq)
  return false;
#undef DO_
}

void WsReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.WsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // optional .fantasybit.CType ctype = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ctype(), output);
  }

  // Extension range [100, 536870912)
  _extensions_.SerializeWithCachedSizes(
      100, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.WsReq)
}

::google::protobuf::uint8* WsReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.WsReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // optional .fantasybit.CType ctype = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ctype(), target);
  }

  // Extension range [100, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      100, 536870912, deterministic, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.WsReq)
  return target;
}

size_t WsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.WsReq)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional .fantasybit.CType ctype = 2;
    if (has_ctype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WsReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.WsReq)
  GOOGLE_DCHECK_NE(&from, this);
  const WsReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WsReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.WsReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.WsReq)
    MergeFrom(*source);
  }
}

void WsReq::MergeFrom(const WsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.WsReq)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      ctype_ = from.ctype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WsReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.WsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WsReq::CopyFrom(const WsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.WsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WsReq::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  return true;
}

void WsReq::Swap(WsReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WsReq::InternalSwap(WsReq* other) {
  using std::swap;
  swap(version_, other->version_);
  swap(ctype_, other->ctype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata WsReq::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WSReply::InitAsDefaultInstance() {
  ::fantasybit::_WSReply_default_instance_._instance.get_mutable()->req_ = const_cast< ::fantasybit::WsReq*>(
      ::fantasybit::WsReq::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WSReply::kVersionFieldNumber;
const int WSReply::kCtypeFieldNumber;
const int WSReply::kReqFieldNumber;
const int WSReply::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WSReply::WSReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsWSReply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.WSReply)
}
WSReply::WSReply(const WSReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  _extensions_.MergeFrom(from._extensions_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_req()) {
    req_ = new ::fantasybit::WsReq(*from.req_);
  } else {
    req_ = NULL;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&ctype_) -
    reinterpret_cast<char*>(&version_)) + sizeof(ctype_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.WSReply)
}

void WSReply::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ctype_) -
      reinterpret_cast<char*>(&req_)) + sizeof(ctype_));
}

WSReply::~WSReply() {
  // @@protoc_insertion_point(destructor:fantasybit.WSReply)
  SharedDtor();
}

void WSReply::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete req_;
}

void WSReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WSReply::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WSReply& WSReply::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsWSReply();
  return *internal_default_instance();
}

WSReply* WSReply::New(::google::protobuf::Arena* arena) const {
  WSReply* n = new WSReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WSReply::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.WSReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _extensions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
  }
  if (cached_has_bits & 12u) {
    ::memset(&version_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ctype_) -
        reinterpret_cast<char*>(&version_)) + sizeof(ctype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool WSReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.WSReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.CType ctype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::CType_IsValid(value)) {
            set_ctype(static_cast< ::fantasybit::CType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                2, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.WsReq req = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string data = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), static_cast<int>(this->data().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.WSReply.data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        if ((800u <= tag)) {
          DO_(_extensions_.ParseField(tag, input,
              internal_default_instance(),
              _internal_metadata_.mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.WSReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.WSReply)
  return false;
#undef DO_
}

void WSReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.WSReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // optional .fantasybit.CType ctype = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->ctype(), output);
  }

  // optional .fantasybit.WsReq req = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->req_, output);
  }

  // optional string data = 30;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.WSReply.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->data(), output);
  }

  // Extension range [100, 536870912)
  _extensions_.SerializeWithCachedSizes(
      100, 536870912, output);

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.WSReply)
}

::google::protobuf::uint8* WSReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.WSReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 version = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // optional .fantasybit.CType ctype = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->ctype(), target);
  }

  // optional .fantasybit.WsReq req = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->req_, deterministic, target);
  }

  // optional string data = 30;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), static_cast<int>(this->data().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.WSReply.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->data(), target);
  }

  // Extension range [100, 536870912)
  target = _extensions_.InternalSerializeWithCachedSizesToArray(
      100, 536870912, deterministic, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.WSReply)
  return target;
}

size_t WSReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.WSReply)
  size_t total_size = 0;

  total_size += _extensions_.ByteSize();

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string data = 30;
    if (has_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->data());
    }

    // optional .fantasybit.WsReq req = 20;
    if (has_req()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->req_);
    }

    // optional int32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional .fantasybit.CType ctype = 2;
    if (has_ctype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ctype());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WSReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.WSReply)
  GOOGLE_DCHECK_NE(&from, this);
  const WSReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WSReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.WSReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.WSReply)
    MergeFrom(*source);
  }
}

void WSReply::MergeFrom(const WSReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.WSReply)
  GOOGLE_DCHECK_NE(&from, this);
  _extensions_.MergeFrom(from._extensions_);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_req()->::fantasybit::WsReq::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000004u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000008u) {
      ctype_ = from.ctype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void WSReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.WSReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WSReply::CopyFrom(const WSReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.WSReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WSReply::IsInitialized() const {
  if (!_extensions_.IsInitialized()) {
    return false;
  }

  if (has_req()) {
    if (!this->req_->IsInitialized()) return false;
  }
  return true;
}

void WSReply::Swap(WSReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WSReply::InternalSwap(WSReply* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(req_, other->req_);
  swap(version_, other->version_);
  swap(ctype_, other->ctype_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
  _extensions_.Swap(&other->_extensions_);
}

::google::protobuf::Metadata WSReply::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetGlobalStateRep::InitAsDefaultInstance() {
  ::fantasybit::_GetGlobalStateRep_default_instance_._instance.get_mutable()->globalstate_ = const_cast< ::fantasybit::GlobalState*>(
      ::fantasybit::GlobalState::internal_default_instance());
}
void GetGlobalStateRep::clear_globalstate() {
  if (globalstate_ != NULL) globalstate_->Clear();
  clear_has_globalstate();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGlobalStateRep::kGlobalstateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetGlobalStateRep::GetGlobalStateRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetGlobalStateRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetGlobalStateRep)
}
GetGlobalStateRep::GetGlobalStateRep(const GetGlobalStateRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_globalstate()) {
    globalstate_ = new ::fantasybit::GlobalState(*from.globalstate_);
  } else {
    globalstate_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetGlobalStateRep)
}

void GetGlobalStateRep::SharedCtor() {
  _cached_size_ = 0;
  globalstate_ = NULL;
}

GetGlobalStateRep::~GetGlobalStateRep() {
  // @@protoc_insertion_point(destructor:fantasybit.GetGlobalStateRep)
  SharedDtor();
}

void GetGlobalStateRep::SharedDtor() {
  if (this != internal_default_instance()) delete globalstate_;
}

void GetGlobalStateRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetGlobalStateRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetGlobalStateRep& GetGlobalStateRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetGlobalStateRep();
  return *internal_default_instance();
}

GetGlobalStateRep* GetGlobalStateRep::New(::google::protobuf::Arena* arena) const {
  GetGlobalStateRep* n = new GetGlobalStateRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetGlobalStateRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetGlobalStateRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(globalstate_ != NULL);
    globalstate_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetGlobalStateRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetGlobalStateRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.GlobalState globalstate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_globalstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetGlobalStateRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetGlobalStateRep)
  return false;
#undef DO_
}

void GetGlobalStateRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetGlobalStateRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GlobalState globalstate = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->globalstate_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetGlobalStateRep)
}

::google::protobuf::uint8* GetGlobalStateRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetGlobalStateRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GlobalState globalstate = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->globalstate_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetGlobalStateRep)
  return target;
}

size_t GetGlobalStateRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetGlobalStateRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .fantasybit.GlobalState globalstate = 10;
  if (has_globalstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->globalstate_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetGlobalStateRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetGlobalStateRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetGlobalStateRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetGlobalStateRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetGlobalStateRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetGlobalStateRep)
    MergeFrom(*source);
  }
}

void GetGlobalStateRep::MergeFrom(const GetGlobalStateRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetGlobalStateRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_globalstate()) {
    mutable_globalstate()->::fantasybit::GlobalState::MergeFrom(from.globalstate());
  }
}

void GetGlobalStateRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetGlobalStateRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetGlobalStateRep::CopyFrom(const GetGlobalStateRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetGlobalStateRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetGlobalStateRep::IsInitialized() const {
  return true;
}

void GetGlobalStateRep::Swap(GetGlobalStateRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetGlobalStateRep::InternalSwap(GetGlobalStateRep* other) {
  using std::swap;
  swap(globalstate_, other->globalstate_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetGlobalStateRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetScheduleRep::InitAsDefaultInstance() {
  ::fantasybit::_GetScheduleRep_default_instance_._instance.get_mutable()->scheduledata_ = const_cast< ::fantasybit::ScheduleData*>(
      ::fantasybit::ScheduleData::internal_default_instance());
}
void GetScheduleRep::clear_scheduledata() {
  if (scheduledata_ != NULL) scheduledata_->Clear();
  clear_has_scheduledata();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetScheduleRep::kScheduledataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetScheduleRep::GetScheduleRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetScheduleRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetScheduleRep)
}
GetScheduleRep::GetScheduleRep(const GetScheduleRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_scheduledata()) {
    scheduledata_ = new ::fantasybit::ScheduleData(*from.scheduledata_);
  } else {
    scheduledata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetScheduleRep)
}

void GetScheduleRep::SharedCtor() {
  _cached_size_ = 0;
  scheduledata_ = NULL;
}

GetScheduleRep::~GetScheduleRep() {
  // @@protoc_insertion_point(destructor:fantasybit.GetScheduleRep)
  SharedDtor();
}

void GetScheduleRep::SharedDtor() {
  if (this != internal_default_instance()) delete scheduledata_;
}

void GetScheduleRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetScheduleRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetScheduleRep& GetScheduleRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetScheduleRep();
  return *internal_default_instance();
}

GetScheduleRep* GetScheduleRep::New(::google::protobuf::Arena* arena) const {
  GetScheduleRep* n = new GetScheduleRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetScheduleRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetScheduleRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(scheduledata_ != NULL);
    scheduledata_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetScheduleRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetScheduleRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.ScheduleData scheduledata = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scheduledata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetScheduleRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetScheduleRep)
  return false;
#undef DO_
}

void GetScheduleRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetScheduleRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.ScheduleData scheduledata = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->scheduledata_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetScheduleRep)
}

::google::protobuf::uint8* GetScheduleRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetScheduleRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.ScheduleData scheduledata = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->scheduledata_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetScheduleRep)
  return target;
}

size_t GetScheduleRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetScheduleRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional .fantasybit.ScheduleData scheduledata = 10;
  if (has_scheduledata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->scheduledata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetScheduleRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetScheduleRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetScheduleRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetScheduleRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetScheduleRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetScheduleRep)
    MergeFrom(*source);
  }
}

void GetScheduleRep::MergeFrom(const GetScheduleRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetScheduleRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_scheduledata()) {
    mutable_scheduledata()->::fantasybit::ScheduleData::MergeFrom(from.scheduledata());
  }
}

void GetScheduleRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetScheduleRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScheduleRep::CopyFrom(const GetScheduleRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetScheduleRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScheduleRep::IsInitialized() const {
  return true;
}

void GetScheduleRep::Swap(GetScheduleRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetScheduleRep::InternalSwap(GetScheduleRep* other) {
  using std::swap;
  swap(scheduledata_, other->scheduledata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetScheduleRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckNameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckNameReq::kFantasyNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckNameReq::CheckNameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsCheckNameReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.CheckNameReq)
}
CheckNameReq::CheckNameReq(const CheckNameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fantasy_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fantasy_name()) {
    fantasy_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasy_name_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.CheckNameReq)
}

void CheckNameReq::SharedCtor() {
  _cached_size_ = 0;
  fantasy_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CheckNameReq::~CheckNameReq() {
  // @@protoc_insertion_point(destructor:fantasybit.CheckNameReq)
  SharedDtor();
}

void CheckNameReq::SharedDtor() {
  fantasy_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckNameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckNameReq::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckNameReq& CheckNameReq::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsCheckNameReq();
  return *internal_default_instance();
}

CheckNameReq* CheckNameReq::New(::google::protobuf::Arena* arena) const {
  CheckNameReq* n = new CheckNameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckNameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.CheckNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!fantasy_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*fantasy_name_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckNameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.CheckNameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fantasy_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fantasy_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fantasy_name().data(), static_cast<int>(this->fantasy_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.CheckNameReq.fantasy_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.CheckNameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.CheckNameReq)
  return false;
#undef DO_
}

void CheckNameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.CheckNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fantasy_name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fantasy_name().data(), static_cast<int>(this->fantasy_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.CheckNameReq.fantasy_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->fantasy_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.CheckNameReq)
}

::google::protobuf::uint8* CheckNameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.CheckNameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fantasy_name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fantasy_name().data(), static_cast<int>(this->fantasy_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.CheckNameReq.fantasy_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->fantasy_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.CheckNameReq)
  return target;
}

size_t CheckNameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.CheckNameReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string fantasy_name = 10;
  if (has_fantasy_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fantasy_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckNameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.CheckNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckNameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckNameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.CheckNameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.CheckNameReq)
    MergeFrom(*source);
  }
}

void CheckNameReq::MergeFrom(const CheckNameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.CheckNameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_fantasy_name()) {
    set_has_fantasy_name();
    fantasy_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasy_name_);
  }
}

void CheckNameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.CheckNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckNameReq::CopyFrom(const CheckNameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.CheckNameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckNameReq::IsInitialized() const {
  return true;
}

void CheckNameReq::Swap(CheckNameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckNameReq::InternalSwap(CheckNameReq* other) {
  using std::swap;
  fantasy_name_.Swap(&other->fantasy_name_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckNameReq::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckNameRep::InitAsDefaultInstance() {
  ::fantasybit::_CheckNameRep_default_instance_._instance.get_mutable()->req_ = const_cast< ::fantasybit::CheckNameReq*>(
      ::fantasybit::CheckNameReq::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckNameRep::kIsavailFieldNumber;
const int CheckNameRep::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckNameRep::CheckNameRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsCheckNameRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.CheckNameRep)
}
CheckNameRep::CheckNameRep(const CheckNameRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  isavail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_isavail()) {
    isavail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isavail_);
  }
  if (from.has_req()) {
    req_ = new ::fantasybit::CheckNameReq(*from.req_);
  } else {
    req_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.CheckNameRep)
}

void CheckNameRep::SharedCtor() {
  _cached_size_ = 0;
  isavail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  req_ = NULL;
}

CheckNameRep::~CheckNameRep() {
  // @@protoc_insertion_point(destructor:fantasybit.CheckNameRep)
  SharedDtor();
}

void CheckNameRep::SharedDtor() {
  isavail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete req_;
}

void CheckNameRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckNameRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckNameRep& CheckNameRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsCheckNameRep();
  return *internal_default_instance();
}

CheckNameRep* CheckNameRep::New(::google::protobuf::Arena* arena) const {
  CheckNameRep* n = new CheckNameRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckNameRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.CheckNameRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!isavail_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*isavail_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckNameRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.CheckNameRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string isavail = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_isavail()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->isavail().data(), static_cast<int>(this->isavail().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.CheckNameRep.isavail");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.CheckNameReq req = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.CheckNameRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.CheckNameRep)
  return false;
#undef DO_
}

void CheckNameRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.CheckNameRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string isavail = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->isavail().data(), static_cast<int>(this->isavail().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.CheckNameRep.isavail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->isavail(), output);
  }

  // optional .fantasybit.CheckNameReq req = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->req_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.CheckNameRep)
}

::google::protobuf::uint8* CheckNameRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.CheckNameRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string isavail = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->isavail().data(), static_cast<int>(this->isavail().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.CheckNameRep.isavail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->isavail(), target);
  }

  // optional .fantasybit.CheckNameReq req = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->req_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.CheckNameRep)
  return target;
}

size_t CheckNameRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.CheckNameRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string isavail = 10;
    if (has_isavail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->isavail());
    }

    // optional .fantasybit.CheckNameReq req = 20;
    if (has_req()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->req_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckNameRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.CheckNameRep)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckNameRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckNameRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.CheckNameRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.CheckNameRep)
    MergeFrom(*source);
  }
}

void CheckNameRep::MergeFrom(const CheckNameRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.CheckNameRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_isavail();
      isavail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.isavail_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_req()->::fantasybit::CheckNameReq::MergeFrom(from.req());
    }
  }
}

void CheckNameRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.CheckNameRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckNameRep::CopyFrom(const CheckNameRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.CheckNameRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckNameRep::IsInitialized() const {
  return true;
}

void CheckNameRep::Swap(CheckNameRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckNameRep::InternalSwap(CheckNameRep* other) {
  using std::swap;
  isavail_.Swap(&other->isavail_);
  swap(req_, other->req_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckNameRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pk2FnameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pk2FnameReq::kPkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pk2FnameReq::Pk2FnameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsPk2FnameReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.Pk2FnameReq)
}
Pk2FnameReq::Pk2FnameReq(const Pk2FnameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pk()) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.Pk2FnameReq)
}

void Pk2FnameReq::SharedCtor() {
  _cached_size_ = 0;
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Pk2FnameReq::~Pk2FnameReq() {
  // @@protoc_insertion_point(destructor:fantasybit.Pk2FnameReq)
  SharedDtor();
}

void Pk2FnameReq::SharedDtor() {
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pk2FnameReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pk2FnameReq::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pk2FnameReq& Pk2FnameReq::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsPk2FnameReq();
  return *internal_default_instance();
}

Pk2FnameReq* Pk2FnameReq::New(::google::protobuf::Arena* arena) const {
  Pk2FnameReq* n = new Pk2FnameReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pk2FnameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.Pk2FnameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!pk_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*pk_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pk2FnameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.Pk2FnameReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pk = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pk().data(), static_cast<int>(this->pk().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.Pk2FnameReq.pk");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.Pk2FnameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.Pk2FnameReq)
  return false;
#undef DO_
}

void Pk2FnameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.Pk2FnameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pk = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.Pk2FnameReq.pk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->pk(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.Pk2FnameReq)
}

::google::protobuf::uint8* Pk2FnameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.Pk2FnameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pk = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.Pk2FnameReq.pk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->pk(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.Pk2FnameReq)
  return target;
}

size_t Pk2FnameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.Pk2FnameReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string pk = 10;
  if (has_pk()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pk());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pk2FnameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.Pk2FnameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const Pk2FnameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pk2FnameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.Pk2FnameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.Pk2FnameReq)
    MergeFrom(*source);
  }
}

void Pk2FnameReq::MergeFrom(const Pk2FnameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.Pk2FnameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pk()) {
    set_has_pk();
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
}

void Pk2FnameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.Pk2FnameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pk2FnameReq::CopyFrom(const Pk2FnameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.Pk2FnameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pk2FnameReq::IsInitialized() const {
  return true;
}

void Pk2FnameReq::Swap(Pk2FnameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pk2FnameReq::InternalSwap(Pk2FnameReq* other) {
  using std::swap;
  pk_.Swap(&other->pk_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pk2FnameReq::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pk2FnameRep::InitAsDefaultInstance() {
  ::fantasybit::_Pk2FnameRep_default_instance_._instance.get_mutable()->req_ = const_cast< ::fantasybit::Pk2FnameReq*>(
      ::fantasybit::Pk2FnameReq::internal_default_instance());
  ::fantasybit::_Pk2FnameRep_default_instance_._instance.get_mutable()->fnb_ = const_cast< ::fantasybit::FantasyNameBal*>(
      ::fantasybit::FantasyNameBal::internal_default_instance());
}
void Pk2FnameRep::clear_fnb() {
  if (fnb_ != NULL) fnb_->Clear();
  clear_has_fnb();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pk2FnameRep::kFnameFieldNumber;
const int Pk2FnameRep::kReqFieldNumber;
const int Pk2FnameRep::kFnbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pk2FnameRep::Pk2FnameRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsPk2FnameRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.Pk2FnameRep)
}
Pk2FnameRep::Pk2FnameRep(const Pk2FnameRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fname()) {
    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  if (from.has_req()) {
    req_ = new ::fantasybit::Pk2FnameReq(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_fnb()) {
    fnb_ = new ::fantasybit::FantasyNameBal(*from.fnb_);
  } else {
    fnb_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.Pk2FnameRep)
}

void Pk2FnameRep::SharedCtor() {
  _cached_size_ = 0;
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fnb_) -
      reinterpret_cast<char*>(&req_)) + sizeof(fnb_));
}

Pk2FnameRep::~Pk2FnameRep() {
  // @@protoc_insertion_point(destructor:fantasybit.Pk2FnameRep)
  SharedDtor();
}

void Pk2FnameRep::SharedDtor() {
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete fnb_;
}

void Pk2FnameRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pk2FnameRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pk2FnameRep& Pk2FnameRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsPk2FnameRep();
  return *internal_default_instance();
}

Pk2FnameRep* Pk2FnameRep::New(::google::protobuf::Arena* arena) const {
  Pk2FnameRep* n = new Pk2FnameRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pk2FnameRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.Pk2FnameRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!fname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fname_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(fnb_ != NULL);
      fnb_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pk2FnameRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.Pk2FnameRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fname = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fname().data(), static_cast<int>(this->fname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.Pk2FnameRep.fname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.Pk2FnameReq req = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.FantasyNameBal fnb = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fnb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.Pk2FnameRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.Pk2FnameRep)
  return false;
#undef DO_
}

void Pk2FnameRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.Pk2FnameRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fname = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.Pk2FnameRep.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->fname(), output);
  }

  // optional .fantasybit.Pk2FnameReq req = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->req_, output);
  }

  // optional .fantasybit.FantasyNameBal fnb = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->fnb_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.Pk2FnameRep)
}

::google::protobuf::uint8* Pk2FnameRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.Pk2FnameRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fname = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.Pk2FnameRep.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->fname(), target);
  }

  // optional .fantasybit.Pk2FnameReq req = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->req_, deterministic, target);
  }

  // optional .fantasybit.FantasyNameBal fnb = 30;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, *this->fnb_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.Pk2FnameRep)
  return target;
}

size_t Pk2FnameRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.Pk2FnameRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string fname = 10;
    if (has_fname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fname());
    }

    // optional .fantasybit.Pk2FnameReq req = 20;
    if (has_req()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->req_);
    }

    // optional .fantasybit.FantasyNameBal fnb = 30;
    if (has_fnb()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->fnb_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pk2FnameRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.Pk2FnameRep)
  GOOGLE_DCHECK_NE(&from, this);
  const Pk2FnameRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pk2FnameRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.Pk2FnameRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.Pk2FnameRep)
    MergeFrom(*source);
  }
}

void Pk2FnameRep::MergeFrom(const Pk2FnameRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.Pk2FnameRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fname();
      fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_req()->::fantasybit::Pk2FnameReq::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_fnb()->::fantasybit::FantasyNameBal::MergeFrom(from.fnb());
    }
  }
}

void Pk2FnameRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.Pk2FnameRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pk2FnameRep::CopyFrom(const Pk2FnameRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.Pk2FnameRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pk2FnameRep::IsInitialized() const {
  return true;
}

void Pk2FnameRep::Swap(Pk2FnameRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pk2FnameRep::InternalSwap(Pk2FnameRep* other) {
  using std::swap;
  fname_.Swap(&other->fname_);
  swap(req_, other->req_);
  swap(fnb_, other->fnb_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pk2FnameRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeReq::kNameFieldNumber;
const int SubscribeReq::kFchashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeReq::SubscribeReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsSubscribeReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.SubscribeReq)
}
SubscribeReq::SubscribeReq(const SubscribeReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  fchash_ = from.fchash_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.SubscribeReq)
}

void SubscribeReq::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fchash_ = GOOGLE_ULONGLONG(0);
}

SubscribeReq::~SubscribeReq() {
  // @@protoc_insertion_point(destructor:fantasybit.SubscribeReq)
  SharedDtor();
}

void SubscribeReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribeReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribeReq::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeReq& SubscribeReq::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsSubscribeReq();
  return *internal_default_instance();
}

SubscribeReq* SubscribeReq::New(::google::protobuf::Arena* arena) const {
  SubscribeReq* n = new SubscribeReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.SubscribeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  fchash_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SubscribeReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.SubscribeReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.SubscribeReq.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fchash = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_fchash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fchash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.SubscribeReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.SubscribeReq)
  return false;
#undef DO_
}

void SubscribeReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.SubscribeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.SubscribeReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  // optional uint64 fchash = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(30, this->fchash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.SubscribeReq)
}

::google::protobuf::uint8* SubscribeReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.SubscribeReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.SubscribeReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  // optional uint64 fchash = 30;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(30, this->fchash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.SubscribeReq)
  return target;
}

size_t SubscribeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.SubscribeReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 10;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 fchash = 30;
    if (has_fchash()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fchash());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribeReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.SubscribeReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.SubscribeReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.SubscribeReq)
    MergeFrom(*source);
  }
}

void SubscribeReq::MergeFrom(const SubscribeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.SubscribeReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      fchash_ = from.fchash_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SubscribeReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.SubscribeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeReq::CopyFrom(const SubscribeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.SubscribeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeReq::IsInitialized() const {
  return true;
}

void SubscribeReq::Swap(SubscribeReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeReq::InternalSwap(SubscribeReq* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(fchash_, other->fchash_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribeReq::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameStatusReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameStatusReq::kNameFieldNumber;
const int NameStatusReq::kPkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameStatusReq::NameStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsNameStatusReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.NameStatusReq)
}
NameStatusReq::NameStatusReq(const NameStatusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pk()) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.NameStatusReq)
}

void NameStatusReq::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NameStatusReq::~NameStatusReq() {
  // @@protoc_insertion_point(destructor:fantasybit.NameStatusReq)
  SharedDtor();
}

void NameStatusReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NameStatusReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NameStatusReq::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameStatusReq& NameStatusReq::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsNameStatusReq();
  return *internal_default_instance();
}

NameStatusReq* NameStatusReq::New(::google::protobuf::Arena* arena) const {
  NameStatusReq* n = new NameStatusReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NameStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.NameStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!pk_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pk_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NameStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.NameStatusReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.NameStatusReq.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pk = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pk().data(), static_cast<int>(this->pk().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.NameStatusReq.pk");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.NameStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.NameStatusReq)
  return false;
#undef DO_
}

void NameStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.NameStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.NameStatusReq.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  // optional string pk = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.NameStatusReq.pk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->pk(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.NameStatusReq)
}

::google::protobuf::uint8* NameStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.NameStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.NameStatusReq.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  // optional string pk = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.NameStatusReq.pk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->pk(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.NameStatusReq)
  return target;
}

size_t NameStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.NameStatusReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 10;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string pk = 20;
    if (has_pk()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pk());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NameStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.NameStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const NameStatusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.NameStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.NameStatusReq)
    MergeFrom(*source);
  }
}

void NameStatusReq::MergeFrom(const NameStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.NameStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pk();
      pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
    }
  }
}

void NameStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.NameStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameStatusReq::CopyFrom(const NameStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.NameStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameStatusReq::IsInitialized() const {
  return true;
}

void NameStatusReq::Swap(NameStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameStatusReq::InternalSwap(NameStatusReq* other) {
  using std::swap;
  name_.Swap(&other->name_);
  pk_.Swap(&other->pk_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NameStatusReq::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NameStatusRep::InitAsDefaultInstance() {
  ::fantasybit::_NameStatusRep_default_instance_._instance.get_mutable()->req_ = const_cast< ::fantasybit::NameStatusReq*>(
      ::fantasybit::NameStatusReq::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameStatusRep::kStatusFieldNumber;
const int NameStatusRep::kReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NameStatusRep::NameStatusRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsNameStatusRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.NameStatusRep)
}
NameStatusRep::NameStatusRep(const NameStatusRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::fantasybit::NameStatusReq(*from.req_);
  } else {
    req_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.NameStatusRep)
}

void NameStatusRep::SharedCtor() {
  _cached_size_ = 0;
  req_ = NULL;
  status_ = 1;
}

NameStatusRep::~NameStatusRep() {
  // @@protoc_insertion_point(destructor:fantasybit.NameStatusRep)
  SharedDtor();
}

void NameStatusRep::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
}

void NameStatusRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NameStatusRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NameStatusRep& NameStatusRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsNameStatusRep();
  return *internal_default_instance();
}

NameStatusRep* NameStatusRep::New(::google::protobuf::Arena* arena) const {
  NameStatusRep* n = new NameStatusRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NameStatusRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.NameStatusRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    status_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NameStatusRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.NameStatusRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.MyNameStatus status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::MyNameStatus_IsValid(value)) {
            set_status(static_cast< ::fantasybit::MyNameStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.NameStatusReq req = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.NameStatusRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.NameStatusRep)
  return false;
#undef DO_
}

void NameStatusRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.NameStatusRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.MyNameStatus status = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->status(), output);
  }

  // optional .fantasybit.NameStatusReq req = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->req_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.NameStatusRep)
}

::google::protobuf::uint8* NameStatusRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.NameStatusRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.MyNameStatus status = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->status(), target);
  }

  // optional .fantasybit.NameStatusReq req = 20;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->req_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.NameStatusRep)
  return target;
}

size_t NameStatusRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.NameStatusRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .fantasybit.NameStatusReq req = 20;
    if (has_req()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->req_);
    }

    // optional .fantasybit.MyNameStatus status = 10;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NameStatusRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.NameStatusRep)
  GOOGLE_DCHECK_NE(&from, this);
  const NameStatusRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NameStatusRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.NameStatusRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.NameStatusRep)
    MergeFrom(*source);
  }
}

void NameStatusRep::MergeFrom(const NameStatusRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.NameStatusRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::fantasybit::NameStatusReq::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NameStatusRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.NameStatusRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NameStatusRep::CopyFrom(const NameStatusRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.NameStatusRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NameStatusRep::IsInitialized() const {
  return true;
}

void NameStatusRep::Swap(NameStatusRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NameStatusRep::InternalSwap(NameStatusRep* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NameStatusRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetAllNamesRep::InitAsDefaultInstance() {
}
void GetAllNamesRep::clear_fnb() {
  fnb_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAllNamesRep::kNamesFieldNumber;
const int GetAllNamesRep::kFnbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetAllNamesRep::GetAllNamesRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetAllNamesRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetAllNamesRep)
}
GetAllNamesRep::GetAllNamesRep(const GetAllNamesRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      names_(from.names_),
      fnb_(from.fnb_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetAllNamesRep)
}

void GetAllNamesRep::SharedCtor() {
  _cached_size_ = 0;
}

GetAllNamesRep::~GetAllNamesRep() {
  // @@protoc_insertion_point(destructor:fantasybit.GetAllNamesRep)
  SharedDtor();
}

void GetAllNamesRep::SharedDtor() {
}

void GetAllNamesRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetAllNamesRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetAllNamesRep& GetAllNamesRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetAllNamesRep();
  return *internal_default_instance();
}

GetAllNamesRep* GetAllNamesRep::New(::google::protobuf::Arena* arena) const {
  GetAllNamesRep* n = new GetAllNamesRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetAllNamesRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetAllNamesRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  names_.Clear();
  fnb_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetAllNamesRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetAllNamesRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string names = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_names()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->names(this->names_size() - 1).data(),
            static_cast<int>(this->names(this->names_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GetAllNamesRep.names");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.FantasyNameBal fnb = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_fnb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetAllNamesRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetAllNamesRep)
  return false;
#undef DO_
}

void GetAllNamesRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetAllNamesRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 10;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetAllNamesRep.names");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->names(i), output);
  }

  // repeated .fantasybit.FantasyNameBal fnb = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fnb_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->fnb(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetAllNamesRep)
}

::google::protobuf::uint8* GetAllNamesRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetAllNamesRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string names = 10;
  for (int i = 0, n = this->names_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->names(i).data(), static_cast<int>(this->names(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetAllNamesRep.names");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->names(i), target);
  }

  // repeated .fantasybit.FantasyNameBal fnb = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fnb_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->fnb(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetAllNamesRep)
  return target;
}

size_t GetAllNamesRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetAllNamesRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string names = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->names_size());
  for (int i = 0, n = this->names_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->names(i));
  }

  // repeated .fantasybit.FantasyNameBal fnb = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->fnb_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fnb(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetAllNamesRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetAllNamesRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetAllNamesRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetAllNamesRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetAllNamesRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetAllNamesRep)
    MergeFrom(*source);
  }
}

void GetAllNamesRep::MergeFrom(const GetAllNamesRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetAllNamesRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  names_.MergeFrom(from.names_);
  fnb_.MergeFrom(from.fnb_);
}

void GetAllNamesRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetAllNamesRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetAllNamesRep::CopyFrom(const GetAllNamesRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetAllNamesRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllNamesRep::IsInitialized() const {
  return true;
}

void GetAllNamesRep::Swap(GetAllNamesRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetAllNamesRep::InternalSwap(GetAllNamesRep* other) {
  using std::swap;
  names_.InternalSwap(&other->names_);
  fnb_.InternalSwap(&other->fnb_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetAllNamesRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TeamRoster::InitAsDefaultInstance() {
}
void TeamRoster::clear_players() {
  players_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamRoster::kTeamidFieldNumber;
const int TeamRoster::kPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamRoster::TeamRoster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsTeamRoster();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.TeamRoster)
}
TeamRoster::TeamRoster(const TeamRoster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  teamid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_teamid()) {
    teamid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamid_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.TeamRoster)
}

void TeamRoster::SharedCtor() {
  _cached_size_ = 0;
  teamid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TeamRoster::~TeamRoster() {
  // @@protoc_insertion_point(destructor:fantasybit.TeamRoster)
  SharedDtor();
}

void TeamRoster::SharedDtor() {
  teamid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TeamRoster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamRoster::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamRoster& TeamRoster::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsTeamRoster();
  return *internal_default_instance();
}

TeamRoster* TeamRoster::New(::google::protobuf::Arena* arena) const {
  TeamRoster* n = new TeamRoster;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamRoster::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.TeamRoster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  players_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!teamid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*teamid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamRoster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.TeamRoster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string teamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->teamid().data(), static_cast<int>(this->teamid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamRoster.teamid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.PlayerData players = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.TeamRoster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.TeamRoster)
  return false;
#undef DO_
}

void TeamRoster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.TeamRoster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string teamid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teamid().data(), static_cast<int>(this->teamid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamRoster.teamid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->teamid(), output);
  }

  // repeated .fantasybit.PlayerData players = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->players(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.TeamRoster)
}

::google::protobuf::uint8* TeamRoster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.TeamRoster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string teamid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teamid().data(), static_cast<int>(this->teamid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamRoster.teamid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->teamid(), target);
  }

  // repeated .fantasybit.PlayerData players = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->players_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->players(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.TeamRoster)
  return target;
}

size_t TeamRoster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.TeamRoster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.PlayerData players = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->players_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->players(static_cast<int>(i)));
    }
  }

  // optional string teamid = 10;
  if (has_teamid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->teamid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamRoster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.TeamRoster)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamRoster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamRoster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.TeamRoster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.TeamRoster)
    MergeFrom(*source);
  }
}

void TeamRoster::MergeFrom(const TeamRoster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.TeamRoster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  if (from.has_teamid()) {
    set_has_teamid();
    teamid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamid_);
  }
}

void TeamRoster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.TeamRoster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamRoster::CopyFrom(const TeamRoster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.TeamRoster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamRoster::IsInitialized() const {
  return true;
}

void TeamRoster::Swap(TeamRoster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamRoster::InternalSwap(TeamRoster* other) {
  using std::swap;
  players_.InternalSwap(&other->players_);
  teamid_.Swap(&other->teamid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamRoster::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameDataRoster::InitAsDefaultInstance() {
  ::fantasybit::_GameDataRoster_default_instance_._instance.get_mutable()->game_data_ = const_cast< ::fantasybit::GameData*>(
      ::fantasybit::GameData::internal_default_instance());
  ::fantasybit::_GameDataRoster_default_instance_._instance.get_mutable()->homeroster_ = const_cast< ::fantasybit::TeamRoster*>(
      ::fantasybit::TeamRoster::internal_default_instance());
  ::fantasybit::_GameDataRoster_default_instance_._instance.get_mutable()->awayroster_ = const_cast< ::fantasybit::TeamRoster*>(
      ::fantasybit::TeamRoster::internal_default_instance());
}
void GameDataRoster::clear_game_data() {
  if (game_data_ != NULL) game_data_->Clear();
  clear_has_game_data();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameDataRoster::kGameDataFieldNumber;
const int GameDataRoster::kHomerosterFieldNumber;
const int GameDataRoster::kAwayrosterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameDataRoster::GameDataRoster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGameDataRoster();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GameDataRoster)
}
GameDataRoster::GameDataRoster(const GameDataRoster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_game_data()) {
    game_data_ = new ::fantasybit::GameData(*from.game_data_);
  } else {
    game_data_ = NULL;
  }
  if (from.has_homeroster()) {
    homeroster_ = new ::fantasybit::TeamRoster(*from.homeroster_);
  } else {
    homeroster_ = NULL;
  }
  if (from.has_awayroster()) {
    awayroster_ = new ::fantasybit::TeamRoster(*from.awayroster_);
  } else {
    awayroster_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GameDataRoster)
}

void GameDataRoster::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&game_data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&awayroster_) -
      reinterpret_cast<char*>(&game_data_)) + sizeof(awayroster_));
}

GameDataRoster::~GameDataRoster() {
  // @@protoc_insertion_point(destructor:fantasybit.GameDataRoster)
  SharedDtor();
}

void GameDataRoster::SharedDtor() {
  if (this != internal_default_instance()) delete game_data_;
  if (this != internal_default_instance()) delete homeroster_;
  if (this != internal_default_instance()) delete awayroster_;
}

void GameDataRoster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameDataRoster::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameDataRoster& GameDataRoster::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGameDataRoster();
  return *internal_default_instance();
}

GameDataRoster* GameDataRoster::New(::google::protobuf::Arena* arena) const {
  GameDataRoster* n = new GameDataRoster;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameDataRoster::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GameDataRoster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(game_data_ != NULL);
      game_data_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(homeroster_ != NULL);
      homeroster_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(awayroster_ != NULL);
      awayroster_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameDataRoster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GameDataRoster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.GameData game_data = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_game_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.TeamRoster homeroster = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_homeroster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.TeamRoster awayroster = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_awayroster()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GameDataRoster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GameDataRoster)
  return false;
#undef DO_
}

void GameDataRoster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GameDataRoster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GameData game_data = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->game_data_, output);
  }

  // optional .fantasybit.TeamRoster homeroster = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->homeroster_, output);
  }

  // optional .fantasybit.TeamRoster awayroster = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->awayroster_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GameDataRoster)
}

::google::protobuf::uint8* GameDataRoster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GameDataRoster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GameData game_data = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->game_data_, deterministic, target);
  }

  // optional .fantasybit.TeamRoster homeroster = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->homeroster_, deterministic, target);
  }

  // optional .fantasybit.TeamRoster awayroster = 30;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, *this->awayroster_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GameDataRoster)
  return target;
}

size_t GameDataRoster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GameDataRoster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .fantasybit.GameData game_data = 10;
    if (has_game_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->game_data_);
    }

    // optional .fantasybit.TeamRoster homeroster = 20;
    if (has_homeroster()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->homeroster_);
    }

    // optional .fantasybit.TeamRoster awayroster = 30;
    if (has_awayroster()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->awayroster_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameDataRoster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GameDataRoster)
  GOOGLE_DCHECK_NE(&from, this);
  const GameDataRoster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameDataRoster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GameDataRoster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GameDataRoster)
    MergeFrom(*source);
  }
}

void GameDataRoster::MergeFrom(const GameDataRoster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GameDataRoster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_game_data()->::fantasybit::GameData::MergeFrom(from.game_data());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_homeroster()->::fantasybit::TeamRoster::MergeFrom(from.homeroster());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_awayroster()->::fantasybit::TeamRoster::MergeFrom(from.awayroster());
    }
  }
}

void GameDataRoster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GameDataRoster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameDataRoster::CopyFrom(const GameDataRoster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GameDataRoster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameDataRoster::IsInitialized() const {
  return true;
}

void GameDataRoster::Swap(GameDataRoster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameDataRoster::InternalSwap(GameDataRoster* other) {
  using std::swap;
  swap(game_data_, other->game_data_);
  swap(homeroster_, other->homeroster_);
  swap(awayroster_, other->awayroster_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameDataRoster::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetCurrRostersRep::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCurrRostersRep::kWeekFieldNumber;
const int GetCurrRostersRep::kGamerostersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetCurrRostersRep::GetCurrRostersRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetCurrRostersRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetCurrRostersRep)
}
GetCurrRostersRep::GetCurrRostersRep(const GetCurrRostersRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gamerosters_(from.gamerosters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  week_ = from.week_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetCurrRostersRep)
}

void GetCurrRostersRep::SharedCtor() {
  _cached_size_ = 0;
  week_ = 0;
}

GetCurrRostersRep::~GetCurrRostersRep() {
  // @@protoc_insertion_point(destructor:fantasybit.GetCurrRostersRep)
  SharedDtor();
}

void GetCurrRostersRep::SharedDtor() {
}

void GetCurrRostersRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetCurrRostersRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetCurrRostersRep& GetCurrRostersRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetCurrRostersRep();
  return *internal_default_instance();
}

GetCurrRostersRep* GetCurrRostersRep::New(::google::protobuf::Arena* arena) const {
  GetCurrRostersRep* n = new GetCurrRostersRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetCurrRostersRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetCurrRostersRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gamerosters_.Clear();
  week_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetCurrRostersRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetCurrRostersRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 week = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.GameDataRoster gamerosters = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_gamerosters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetCurrRostersRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetCurrRostersRep)
  return false;
#undef DO_
}

void GetCurrRostersRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetCurrRostersRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 week = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->week(), output);
  }

  // repeated .fantasybit.GameDataRoster gamerosters = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gamerosters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->gamerosters(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetCurrRostersRep)
}

::google::protobuf::uint8* GetCurrRostersRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetCurrRostersRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 week = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->week(), target);
  }

  // repeated .fantasybit.GameDataRoster gamerosters = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gamerosters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->gamerosters(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetCurrRostersRep)
  return target;
}

size_t GetCurrRostersRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetCurrRostersRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.GameDataRoster gamerosters = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->gamerosters_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gamerosters(static_cast<int>(i)));
    }
  }

  // optional int32 week = 10;
  if (has_week()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->week());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetCurrRostersRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetCurrRostersRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetCurrRostersRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetCurrRostersRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetCurrRostersRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetCurrRostersRep)
    MergeFrom(*source);
  }
}

void GetCurrRostersRep::MergeFrom(const GetCurrRostersRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetCurrRostersRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gamerosters_.MergeFrom(from.gamerosters_);
  if (from.has_week()) {
    set_week(from.week());
  }
}

void GetCurrRostersRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetCurrRostersRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetCurrRostersRep::CopyFrom(const GetCurrRostersRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetCurrRostersRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetCurrRostersRep::IsInitialized() const {
  return true;
}

void GetCurrRostersRep::Swap(GetCurrRostersRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetCurrRostersRep::InternalSwap(GetCurrRostersRep* other) {
  using std::swap;
  gamerosters_.InternalSwap(&other->gamerosters_);
  swap(week_, other->week_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetCurrRostersRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ROWMarket::InitAsDefaultInstance() {
  ::fantasybit::_ROWMarket_default_instance_._instance.get_mutable()->quote_ = const_cast< ::fantasybit::MarketQuote*>(
      ::fantasybit::MarketQuote::internal_default_instance());
  ::fantasybit::_ROWMarket_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::fantasybit::PlayerData*>(
      ::fantasybit::PlayerData::internal_default_instance());
  ::fantasybit::_ROWMarket_default_instance_._instance.get_mutable()->ohlc_ = const_cast< ::fantasybit::ContractOHLC*>(
      ::fantasybit::ContractOHLC::internal_default_instance());
}
void ROWMarket::clear_quote() {
  if (quote_ != NULL) quote_->Clear();
  clear_has_quote();
}
void ROWMarket::clear_playerdata() {
  if (playerdata_ != NULL) playerdata_->Clear();
  clear_has_playerdata();
}
void ROWMarket::clear_ohlc() {
  if (ohlc_ != NULL) ohlc_->Clear();
  clear_has_ohlc();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ROWMarket::kPidFieldNumber;
const int ROWMarket::kQuoteFieldNumber;
const int ROWMarket::kPlayerdataFieldNumber;
const int ROWMarket::kOhlcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ROWMarket::ROWMarket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsROWMarket();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.ROWMarket)
}
ROWMarket::ROWMarket(const ROWMarket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pid()) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  if (from.has_quote()) {
    quote_ = new ::fantasybit::MarketQuote(*from.quote_);
  } else {
    quote_ = NULL;
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::fantasybit::PlayerData(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  if (from.has_ohlc()) {
    ohlc_ = new ::fantasybit::ContractOHLC(*from.ohlc_);
  } else {
    ohlc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.ROWMarket)
}

void ROWMarket::SharedCtor() {
  _cached_size_ = 0;
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&quote_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ohlc_) -
      reinterpret_cast<char*>(&quote_)) + sizeof(ohlc_));
}

ROWMarket::~ROWMarket() {
  // @@protoc_insertion_point(destructor:fantasybit.ROWMarket)
  SharedDtor();
}

void ROWMarket::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete quote_;
  if (this != internal_default_instance()) delete playerdata_;
  if (this != internal_default_instance()) delete ohlc_;
}

void ROWMarket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ROWMarket::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ROWMarket& ROWMarket::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsROWMarket();
  return *internal_default_instance();
}

ROWMarket* ROWMarket::New(::google::protobuf::Arena* arena) const {
  ROWMarket* n = new ROWMarket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ROWMarket::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.ROWMarket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!pid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(quote_ != NULL);
      quote_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(playerdata_ != NULL);
      playerdata_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(ohlc_ != NULL);
      ohlc_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ROWMarket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.ROWMarket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pid().data(), static_cast<int>(this->pid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.ROWMarket.pid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.MarketQuote quote = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quote()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.PlayerData playerdata = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.ContractOHLC ohlc = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ohlc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.ROWMarket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.ROWMarket)
  return false;
#undef DO_
}

void ROWMarket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.ROWMarket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ROWMarket.pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->pid(), output);
  }

  // optional .fantasybit.MarketQuote quote = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->quote_, output);
  }

  // optional .fantasybit.PlayerData playerdata = 40;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->playerdata_, output);
  }

  // optional .fantasybit.ContractOHLC ohlc = 50;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, *this->ohlc_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.ROWMarket)
}

::google::protobuf::uint8* ROWMarket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.ROWMarket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ROWMarket.pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->pid(), target);
  }

  // optional .fantasybit.MarketQuote quote = 30;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, *this->quote_, deterministic, target);
  }

  // optional .fantasybit.PlayerData playerdata = 40;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, *this->playerdata_, deterministic, target);
  }

  // optional .fantasybit.ContractOHLC ohlc = 50;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, *this->ohlc_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.ROWMarket)
  return target;
}

size_t ROWMarket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.ROWMarket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string pid = 10;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pid());
    }

    // optional .fantasybit.MarketQuote quote = 30;
    if (has_quote()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->quote_);
    }

    // optional .fantasybit.PlayerData playerdata = 40;
    if (has_playerdata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->playerdata_);
    }

    // optional .fantasybit.ContractOHLC ohlc = 50;
    if (has_ohlc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->ohlc_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ROWMarket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.ROWMarket)
  GOOGLE_DCHECK_NE(&from, this);
  const ROWMarket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ROWMarket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.ROWMarket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.ROWMarket)
    MergeFrom(*source);
  }
}

void ROWMarket::MergeFrom(const ROWMarket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.ROWMarket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pid();
      pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_quote()->::fantasybit::MarketQuote::MergeFrom(from.quote());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_playerdata()->::fantasybit::PlayerData::MergeFrom(from.playerdata());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_ohlc()->::fantasybit::ContractOHLC::MergeFrom(from.ohlc());
    }
  }
}

void ROWMarket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.ROWMarket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROWMarket::CopyFrom(const ROWMarket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.ROWMarket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROWMarket::IsInitialized() const {
  return true;
}

void ROWMarket::Swap(ROWMarket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ROWMarket::InternalSwap(ROWMarket* other) {
  using std::swap;
  pid_.Swap(&other->pid_);
  swap(quote_, other->quote_);
  swap(playerdata_, other->playerdata_);
  swap(ohlc_, other->ohlc_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ROWMarket::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetROWMarketRep::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetROWMarketRep::kRowmarketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetROWMarketRep::GetROWMarketRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetROWMarketRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetROWMarketRep)
}
GetROWMarketRep::GetROWMarketRep(const GetROWMarketRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rowmarket_(from.rowmarket_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetROWMarketRep)
}

void GetROWMarketRep::SharedCtor() {
  _cached_size_ = 0;
}

GetROWMarketRep::~GetROWMarketRep() {
  // @@protoc_insertion_point(destructor:fantasybit.GetROWMarketRep)
  SharedDtor();
}

void GetROWMarketRep::SharedDtor() {
}

void GetROWMarketRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetROWMarketRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetROWMarketRep& GetROWMarketRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetROWMarketRep();
  return *internal_default_instance();
}

GetROWMarketRep* GetROWMarketRep::New(::google::protobuf::Arena* arena) const {
  GetROWMarketRep* n = new GetROWMarketRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetROWMarketRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetROWMarketRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rowmarket_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetROWMarketRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetROWMarketRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .fantasybit.ROWMarket rowmarket = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rowmarket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetROWMarketRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetROWMarketRep)
  return false;
#undef DO_
}

void GetROWMarketRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetROWMarketRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .fantasybit.ROWMarket rowmarket = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rowmarket_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->rowmarket(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetROWMarketRep)
}

::google::protobuf::uint8* GetROWMarketRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetROWMarketRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .fantasybit.ROWMarket rowmarket = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rowmarket_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->rowmarket(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetROWMarketRep)
  return target;
}

size_t GetROWMarketRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetROWMarketRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.ROWMarket rowmarket = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->rowmarket_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rowmarket(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetROWMarketRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetROWMarketRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetROWMarketRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetROWMarketRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetROWMarketRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetROWMarketRep)
    MergeFrom(*source);
  }
}

void GetROWMarketRep::MergeFrom(const GetROWMarketRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetROWMarketRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rowmarket_.MergeFrom(from.rowmarket_);
}

void GetROWMarketRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetROWMarketRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetROWMarketRep::CopyFrom(const GetROWMarketRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetROWMarketRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetROWMarketRep::IsInitialized() const {
  return true;
}

void GetROWMarketRep::Swap(GetROWMarketRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetROWMarketRep::InternalSwap(GetROWMarketRep* other) {
  using std::swap;
  rowmarket_.InternalSwap(&other->rowmarket_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetROWMarketRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDepthReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDepthReq::kPidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDepthReq::GetDepthReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetDepthReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetDepthReq)
}
GetDepthReq::GetDepthReq(const GetDepthReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pid()) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetDepthReq)
}

void GetDepthReq::SharedCtor() {
  _cached_size_ = 0;
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetDepthReq::~GetDepthReq() {
  // @@protoc_insertion_point(destructor:fantasybit.GetDepthReq)
  SharedDtor();
}

void GetDepthReq::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetDepthReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDepthReq::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDepthReq& GetDepthReq::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetDepthReq();
  return *internal_default_instance();
}

GetDepthReq* GetDepthReq::New(::google::protobuf::Arena* arena) const {
  GetDepthReq* n = new GetDepthReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDepthReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetDepthReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!pid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*pid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetDepthReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetDepthReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pid().data(), static_cast<int>(this->pid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GetDepthReq.pid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetDepthReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetDepthReq)
  return false;
#undef DO_
}

void GetDepthReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetDepthReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetDepthReq.pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->pid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetDepthReq)
}

::google::protobuf::uint8* GetDepthReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetDepthReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetDepthReq.pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->pid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetDepthReq)
  return target;
}

size_t GetDepthReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetDepthReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // optional string pid = 10;
  if (has_pid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDepthReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetDepthReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDepthReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDepthReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetDepthReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetDepthReq)
    MergeFrom(*source);
  }
}

void GetDepthReq::MergeFrom(const GetDepthReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetDepthReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pid()) {
    set_has_pid();
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
}

void GetDepthReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetDepthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDepthReq::CopyFrom(const GetDepthReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetDepthReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDepthReq::IsInitialized() const {
  return true;
}

void GetDepthReq::Swap(GetDepthReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDepthReq::InternalSwap(GetDepthReq* other) {
  using std::swap;
  pid_.Swap(&other->pid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDepthReq::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDepthRep::InitAsDefaultInstance() {
  ::fantasybit::_GetDepthRep_default_instance_._instance.get_mutable()->rowmarket_ = const_cast< ::fantasybit::ROWMarket*>(
      ::fantasybit::ROWMarket::internal_default_instance());
}
void GetDepthRep::clear_depthitems() {
  depthitems_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDepthRep::kPidFieldNumber;
const int GetDepthRep::kDepthitemsFieldNumber;
const int GetDepthRep::kRowmarketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDepthRep::GetDepthRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetDepthRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetDepthRep)
}
GetDepthRep::GetDepthRep(const GetDepthRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      depthitems_(from.depthitems_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pid()) {
    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  if (from.has_rowmarket()) {
    rowmarket_ = new ::fantasybit::ROWMarket(*from.rowmarket_);
  } else {
    rowmarket_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetDepthRep)
}

void GetDepthRep::SharedCtor() {
  _cached_size_ = 0;
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rowmarket_ = NULL;
}

GetDepthRep::~GetDepthRep() {
  // @@protoc_insertion_point(destructor:fantasybit.GetDepthRep)
  SharedDtor();
}

void GetDepthRep::SharedDtor() {
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete rowmarket_;
}

void GetDepthRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDepthRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDepthRep& GetDepthRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetDepthRep();
  return *internal_default_instance();
}

GetDepthRep* GetDepthRep::New(::google::protobuf::Arena* arena) const {
  GetDepthRep* n = new GetDepthRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDepthRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetDepthRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  depthitems_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!pid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(rowmarket_ != NULL);
      rowmarket_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetDepthRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetDepthRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pid().data(), static_cast<int>(this->pid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GetDepthRep.pid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.DepthItem depthitems = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_depthitems()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.ROWMarket rowmarket = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rowmarket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetDepthRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetDepthRep)
  return false;
#undef DO_
}

void GetDepthRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetDepthRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetDepthRep.pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->pid(), output);
  }

  // repeated .fantasybit.DepthItem depthitems = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->depthitems_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->depthitems(static_cast<int>(i)), output);
  }

  // optional .fantasybit.ROWMarket rowmarket = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->rowmarket_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetDepthRep)
}

::google::protobuf::uint8* GetDepthRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetDepthRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pid().data(), static_cast<int>(this->pid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetDepthRep.pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->pid(), target);
  }

  // repeated .fantasybit.DepthItem depthitems = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->depthitems_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->depthitems(static_cast<int>(i)), deterministic, target);
  }

  // optional .fantasybit.ROWMarket rowmarket = 30;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, *this->rowmarket_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetDepthRep)
  return target;
}

size_t GetDepthRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetDepthRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.DepthItem depthitems = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->depthitems_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->depthitems(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string pid = 10;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pid());
    }

    // optional .fantasybit.ROWMarket rowmarket = 30;
    if (has_rowmarket()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->rowmarket_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDepthRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetDepthRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDepthRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDepthRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetDepthRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetDepthRep)
    MergeFrom(*source);
  }
}

void GetDepthRep::MergeFrom(const GetDepthRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetDepthRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  depthitems_.MergeFrom(from.depthitems_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pid();
      pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_rowmarket()->::fantasybit::ROWMarket::MergeFrom(from.rowmarket());
    }
  }
}

void GetDepthRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetDepthRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDepthRep::CopyFrom(const GetDepthRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetDepthRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDepthRep::IsInitialized() const {
  return true;
}

void GetDepthRep::Swap(GetDepthRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDepthRep::InternalSwap(GetDepthRep* other) {
  using std::swap;
  depthitems_.InternalSwap(&other->depthitems_);
  pid_.Swap(&other->pid_);
  swap(rowmarket_, other->rowmarket_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDepthRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllOdersSymbol::InitAsDefaultInstance() {
}
void AllOdersSymbol::clear_orders() {
  orders_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllOdersSymbol::kSymbolFieldNumber;
const int AllOdersSymbol::kNetqtyFieldNumber;
const int AllOdersSymbol::kNetpriceFieldNumber;
const int AllOdersSymbol::kAvgFieldNumber;
const int AllOdersSymbol::kPnlFieldNumber;
const int AllOdersSymbol::kOrdersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllOdersSymbol::AllOdersSymbol()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsAllOdersSymbol();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.AllOdersSymbol)
}
AllOdersSymbol::AllOdersSymbol(const AllOdersSymbol& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      orders_(from.orders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&netqty_, &from.netqty_,
    static_cast<size_t>(reinterpret_cast<char*>(&pnl_) -
    reinterpret_cast<char*>(&netqty_)) + sizeof(pnl_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.AllOdersSymbol)
}

void AllOdersSymbol::SharedCtor() {
  _cached_size_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&netqty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pnl_) -
      reinterpret_cast<char*>(&netqty_)) + sizeof(pnl_));
}

AllOdersSymbol::~AllOdersSymbol() {
  // @@protoc_insertion_point(destructor:fantasybit.AllOdersSymbol)
  SharedDtor();
}

void AllOdersSymbol::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllOdersSymbol::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllOdersSymbol::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllOdersSymbol& AllOdersSymbol::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsAllOdersSymbol();
  return *internal_default_instance();
}

AllOdersSymbol* AllOdersSymbol::New(::google::protobuf::Arena* arena) const {
  AllOdersSymbol* n = new AllOdersSymbol;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllOdersSymbol::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.AllOdersSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  orders_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*symbol_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 30u) {
    ::memset(&netqty_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&pnl_) -
        reinterpret_cast<char*>(&netqty_)) + sizeof(pnl_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllOdersSymbol::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.AllOdersSymbol)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string symbol = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.AllOdersSymbol.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.Order orders = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_orders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 netqty = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_netqty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netqty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 netprice = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_netprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double avg = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 401 & 0xFF */)) {
          set_has_avg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &avg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double pnl = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(225u /* 481 & 0xFF */)) {
          set_has_pnl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &pnl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.AllOdersSymbol)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.AllOdersSymbol)
  return false;
#undef DO_
}

void AllOdersSymbol::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.AllOdersSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.AllOdersSymbol.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->symbol(), output);
  }

  // repeated .fantasybit.Order orders = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->orders(static_cast<int>(i)), output);
  }

  // optional int32 netqty = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->netqty(), output);
  }

  // optional int32 netprice = 40;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->netprice(), output);
  }

  // optional double avg = 50;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(50, this->avg(), output);
  }

  // optional double pnl = 60;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(60, this->pnl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.AllOdersSymbol)
}

::google::protobuf::uint8* AllOdersSymbol::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.AllOdersSymbol)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.AllOdersSymbol.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->symbol(), target);
  }

  // repeated .fantasybit.Order orders = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->orders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->orders(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 netqty = 30;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->netqty(), target);
  }

  // optional int32 netprice = 40;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->netprice(), target);
  }

  // optional double avg = 50;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(50, this->avg(), target);
  }

  // optional double pnl = 60;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(60, this->pnl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.AllOdersSymbol)
  return target;
}

size_t AllOdersSymbol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.AllOdersSymbol)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.Order orders = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->orders_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->orders(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string symbol = 10;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional int32 netqty = 30;
    if (has_netqty()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->netqty());
    }

    // optional int32 netprice = 40;
    if (has_netprice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->netprice());
    }

    // optional double avg = 50;
    if (has_avg()) {
      total_size += 2 + 8;
    }

    // optional double pnl = 60;
    if (has_pnl()) {
      total_size += 2 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllOdersSymbol::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.AllOdersSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  const AllOdersSymbol* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllOdersSymbol>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.AllOdersSymbol)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.AllOdersSymbol)
    MergeFrom(*source);
  }
}

void AllOdersSymbol::MergeFrom(const AllOdersSymbol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.AllOdersSymbol)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  orders_.MergeFrom(from.orders_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000002u) {
      netqty_ = from.netqty_;
    }
    if (cached_has_bits & 0x00000004u) {
      netprice_ = from.netprice_;
    }
    if (cached_has_bits & 0x00000008u) {
      avg_ = from.avg_;
    }
    if (cached_has_bits & 0x00000010u) {
      pnl_ = from.pnl_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AllOdersSymbol::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.AllOdersSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllOdersSymbol::CopyFrom(const AllOdersSymbol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.AllOdersSymbol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllOdersSymbol::IsInitialized() const {
  return true;
}

void AllOdersSymbol::Swap(AllOdersSymbol* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllOdersSymbol::InternalSwap(AllOdersSymbol* other) {
  using std::swap;
  orders_.InternalSwap(&other->orders_);
  symbol_.Swap(&other->symbol_);
  swap(netqty_, other->netqty_);
  swap(netprice_, other->netprice_);
  swap(avg_, other->avg_);
  swap(pnl_, other->pnl_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllOdersSymbol::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AllOdersFname::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllOdersFname::kFnameFieldNumber;
const int AllOdersFname::kPidordersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllOdersFname::AllOdersFname()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsAllOdersFname();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.AllOdersFname)
}
AllOdersFname::AllOdersFname(const AllOdersFname& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      pidorders_(from.pidorders_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fname()) {
    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.AllOdersFname)
}

void AllOdersFname::SharedCtor() {
  _cached_size_ = 0;
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AllOdersFname::~AllOdersFname() {
  // @@protoc_insertion_point(destructor:fantasybit.AllOdersFname)
  SharedDtor();
}

void AllOdersFname::SharedDtor() {
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllOdersFname::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllOdersFname::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllOdersFname& AllOdersFname::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsAllOdersFname();
  return *internal_default_instance();
}

AllOdersFname* AllOdersFname::New(::google::protobuf::Arena* arena) const {
  AllOdersFname* n = new AllOdersFname;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllOdersFname::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.AllOdersFname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pidorders_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!fname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*fname_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllOdersFname::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.AllOdersFname)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fname = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fname().data(), static_cast<int>(this->fname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.AllOdersFname.fname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.AllOdersSymbol pidorders = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_pidorders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.AllOdersFname)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.AllOdersFname)
  return false;
#undef DO_
}

void AllOdersFname::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.AllOdersFname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fname = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.AllOdersFname.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->fname(), output);
  }

  // repeated .fantasybit.AllOdersSymbol pidorders = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pidorders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->pidorders(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.AllOdersFname)
}

::google::protobuf::uint8* AllOdersFname::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.AllOdersFname)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fname = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.AllOdersFname.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->fname(), target);
  }

  // repeated .fantasybit.AllOdersSymbol pidorders = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pidorders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->pidorders(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.AllOdersFname)
  return target;
}

size_t AllOdersFname::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.AllOdersFname)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.AllOdersSymbol pidorders = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->pidorders_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pidorders(static_cast<int>(i)));
    }
  }

  // optional string fname = 10;
  if (has_fname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllOdersFname::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.AllOdersFname)
  GOOGLE_DCHECK_NE(&from, this);
  const AllOdersFname* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllOdersFname>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.AllOdersFname)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.AllOdersFname)
    MergeFrom(*source);
  }
}

void AllOdersFname::MergeFrom(const AllOdersFname& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.AllOdersFname)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pidorders_.MergeFrom(from.pidorders_);
  if (from.has_fname()) {
    set_has_fname();
    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
}

void AllOdersFname::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.AllOdersFname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllOdersFname::CopyFrom(const AllOdersFname& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.AllOdersFname)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllOdersFname::IsInitialized() const {
  return true;
}

void AllOdersFname::Swap(AllOdersFname* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllOdersFname::InternalSwap(AllOdersFname* other) {
  using std::swap;
  pidorders_.InternalSwap(&other->pidorders_);
  fname_.Swap(&other->fname_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllOdersFname::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOrdersRep::InitAsDefaultInstance() {
  ::fantasybit::_GetOrdersRep_default_instance_._instance.get_mutable()->req_ = const_cast< ::fantasybit::GetOrdersReq*>(
      ::fantasybit::GetOrdersReq::internal_default_instance());
  ::fantasybit::_GetOrdersRep_default_instance_._instance.get_mutable()->oorders_ = const_cast< ::fantasybit::AllOdersFname*>(
      ::fantasybit::AllOdersFname::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrdersRep::kReqFieldNumber;
const int GetOrdersRep::kOordersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrdersRep::GetOrdersRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetOrdersRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetOrdersRep)
}
GetOrdersRep::GetOrdersRep(const GetOrdersRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_req()) {
    req_ = new ::fantasybit::GetOrdersReq(*from.req_);
  } else {
    req_ = NULL;
  }
  if (from.has_oorders()) {
    oorders_ = new ::fantasybit::AllOdersFname(*from.oorders_);
  } else {
    oorders_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetOrdersRep)
}

void GetOrdersRep::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&req_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oorders_) -
      reinterpret_cast<char*>(&req_)) + sizeof(oorders_));
}

GetOrdersRep::~GetOrdersRep() {
  // @@protoc_insertion_point(destructor:fantasybit.GetOrdersRep)
  SharedDtor();
}

void GetOrdersRep::SharedDtor() {
  if (this != internal_default_instance()) delete req_;
  if (this != internal_default_instance()) delete oorders_;
}

void GetOrdersRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOrdersRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrdersRep& GetOrdersRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetOrdersRep();
  return *internal_default_instance();
}

GetOrdersRep* GetOrdersRep::New(::google::protobuf::Arena* arena) const {
  GetOrdersRep* n = new GetOrdersRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOrdersRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetOrdersRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(req_ != NULL);
      req_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(oorders_ != NULL);
      oorders_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetOrdersRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetOrdersRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.GetOrdersReq req = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_req()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.AllOdersFname oorders = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oorders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetOrdersRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetOrdersRep)
  return false;
#undef DO_
}

void GetOrdersRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetOrdersRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GetOrdersReq req = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->req_, output);
  }

  // optional .fantasybit.AllOdersFname oorders = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->oorders_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetOrdersRep)
}

::google::protobuf::uint8* GetOrdersRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetOrdersRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GetOrdersReq req = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->req_, deterministic, target);
  }

  // optional .fantasybit.AllOdersFname oorders = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->oorders_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetOrdersRep)
  return target;
}

size_t GetOrdersRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetOrdersRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .fantasybit.GetOrdersReq req = 10;
    if (has_req()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->req_);
    }

    // optional .fantasybit.AllOdersFname oorders = 20;
    if (has_oorders()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->oorders_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOrdersRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetOrdersRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrdersRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrdersRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetOrdersRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetOrdersRep)
    MergeFrom(*source);
  }
}

void GetOrdersRep::MergeFrom(const GetOrdersRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetOrdersRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_req()->::fantasybit::GetOrdersReq::MergeFrom(from.req());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_oorders()->::fantasybit::AllOdersFname::MergeFrom(from.oorders());
    }
  }
}

void GetOrdersRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetOrdersRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrdersRep::CopyFrom(const GetOrdersRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetOrdersRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrdersRep::IsInitialized() const {
  return true;
}

void GetOrdersRep::Swap(GetOrdersRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrdersRep::InternalSwap(GetOrdersRep* other) {
  using std::swap;
  swap(req_, other->req_);
  swap(oorders_, other->oorders_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOrdersRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetOrdersReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrdersReq::kSymbolFieldNumber;
const int GetOrdersReq::kFnameFieldNumber;
const int GetOrdersReq::kFchashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetOrdersReq::GetOrdersReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetOrdersReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetOrdersReq)
}
GetOrdersReq::GetOrdersReq(const GetOrdersReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fname()) {
    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  fchash_ = from.fchash_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetOrdersReq)
}

void GetOrdersReq::SharedCtor() {
  _cached_size_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fchash_ = GOOGLE_ULONGLONG(0);
}

GetOrdersReq::~GetOrdersReq() {
  // @@protoc_insertion_point(destructor:fantasybit.GetOrdersReq)
  SharedDtor();
}

void GetOrdersReq::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetOrdersReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetOrdersReq::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetOrdersReq& GetOrdersReq::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetOrdersReq();
  return *internal_default_instance();
}

GetOrdersReq* GetOrdersReq::New(::google::protobuf::Arena* arena) const {
  GetOrdersReq* n = new GetOrdersReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetOrdersReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetOrdersReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*symbol_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!fname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fname_.UnsafeRawStringPointer())->clear();
    }
  }
  fchash_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetOrdersReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetOrdersReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string symbol = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GetOrdersReq.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string fname = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fname().data(), static_cast<int>(this->fname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GetOrdersReq.fname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fchash = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_fchash();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fchash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetOrdersReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetOrdersReq)
  return false;
#undef DO_
}

void GetOrdersReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetOrdersReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetOrdersReq.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->symbol(), output);
  }

  // optional string fname = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetOrdersReq.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->fname(), output);
  }

  // optional uint64 fchash = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(30, this->fchash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetOrdersReq)
}

::google::protobuf::uint8* GetOrdersReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetOrdersReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetOrdersReq.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->symbol(), target);
  }

  // optional string fname = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetOrdersReq.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->fname(), target);
  }

  // optional uint64 fchash = 30;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(30, this->fchash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetOrdersReq)
  return target;
}

size_t GetOrdersReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetOrdersReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string symbol = 10;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional string fname = 20;
    if (has_fname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fname());
    }

    // optional uint64 fchash = 30;
    if (has_fchash()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->fchash());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetOrdersReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetOrdersReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetOrdersReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetOrdersReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetOrdersReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetOrdersReq)
    MergeFrom(*source);
  }
}

void GetOrdersReq::MergeFrom(const GetOrdersReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetOrdersReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_fname();
      fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
    }
    if (cached_has_bits & 0x00000004u) {
      fchash_ = from.fchash_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetOrdersReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetOrdersReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetOrdersReq::CopyFrom(const GetOrdersReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetOrdersReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetOrdersReq::IsInitialized() const {
  return true;
}

void GetOrdersReq::Swap(GetOrdersReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetOrdersReq::InternalSwap(GetOrdersReq* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_);
  fname_.Swap(&other->fname_);
  swap(fchash_, other->fchash_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetOrdersReq::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetProjectionReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProjectionReq::kFnameFieldNumber;
const int GetProjectionReq::kGetavgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProjectionReq::GetProjectionReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetProjectionReq();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetProjectionReq)
}
GetProjectionReq::GetProjectionReq(const GetProjectionReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fname()) {
    fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
  }
  getavg_ = from.getavg_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetProjectionReq)
}

void GetProjectionReq::SharedCtor() {
  _cached_size_ = 0;
  fname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  getavg_ = false;
}

GetProjectionReq::~GetProjectionReq() {
  // @@protoc_insertion_point(destructor:fantasybit.GetProjectionReq)
  SharedDtor();
}

void GetProjectionReq::SharedDtor() {
  fname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetProjectionReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProjectionReq::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProjectionReq& GetProjectionReq::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetProjectionReq();
  return *internal_default_instance();
}

GetProjectionReq* GetProjectionReq::New(::google::protobuf::Arena* arena) const {
  GetProjectionReq* n = new GetProjectionReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProjectionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetProjectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!fname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*fname_.UnsafeRawStringPointer())->clear();
  }
  getavg_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetProjectionReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetProjectionReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fname = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fname().data(), static_cast<int>(this->fname().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GetProjectionReq.fname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool getavg = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_getavg();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &getavg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetProjectionReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetProjectionReq)
  return false;
#undef DO_
}

void GetProjectionReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetProjectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fname = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetProjectionReq.fname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->fname(), output);
  }

  // optional bool getavg = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->getavg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetProjectionReq)
}

::google::protobuf::uint8* GetProjectionReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetProjectionReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fname = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fname().data(), static_cast<int>(this->fname().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GetProjectionReq.fname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->fname(), target);
  }

  // optional bool getavg = 30;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->getavg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetProjectionReq)
  return target;
}

size_t GetProjectionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetProjectionReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string fname = 20;
    if (has_fname()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fname());
    }

    // optional bool getavg = 30;
    if (has_getavg()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProjectionReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetProjectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProjectionReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProjectionReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetProjectionReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetProjectionReq)
    MergeFrom(*source);
  }
}

void GetProjectionReq::MergeFrom(const GetProjectionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetProjectionReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fname();
      fname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fname_);
    }
    if (cached_has_bits & 0x00000002u) {
      getavg_ = from.getavg_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GetProjectionReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetProjectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProjectionReq::CopyFrom(const GetProjectionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetProjectionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectionReq::IsInitialized() const {
  return true;
}

void GetProjectionReq::Swap(GetProjectionReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProjectionReq::InternalSwap(GetProjectionReq* other) {
  using std::swap;
  fname_.Swap(&other->fname_);
  swap(getavg_, other->getavg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProjectionReq::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerProj::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerProj::kPlayeridFieldNumber;
const int PlayerProj::kProjFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerProj::PlayerProj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsPlayerProj();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.PlayerProj)
}
PlayerProj::PlayerProj(const PlayerProj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  proj_ = from.proj_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.PlayerProj)
}

void PlayerProj::SharedCtor() {
  _cached_size_ = 0;
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proj_ = 0;
}

PlayerProj::~PlayerProj() {
  // @@protoc_insertion_point(destructor:fantasybit.PlayerProj)
  SharedDtor();
}

void PlayerProj::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerProj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerProj::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerProj& PlayerProj::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsPlayerProj();
  return *internal_default_instance();
}

PlayerProj* PlayerProj::New(::google::protobuf::Arena* arena) const {
  PlayerProj* n = new PlayerProj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerProj::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.PlayerProj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*playerid_.UnsafeRawStringPointer())->clear();
  }
  proj_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerProj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.PlayerProj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string playerid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PlayerProj.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 proj = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_proj();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &proj_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.PlayerProj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.PlayerProj)
  return false;
#undef DO_
}

void PlayerProj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.PlayerProj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerProj.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->playerid(), output);
  }

  // optional int32 proj = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->proj(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.PlayerProj)
}

::google::protobuf::uint8* PlayerProj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.PlayerProj)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerProj.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->playerid(), target);
  }

  // optional int32 proj = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->proj(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.PlayerProj)
  return target;
}

size_t PlayerProj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.PlayerProj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string playerid = 10;
    if (has_playerid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional int32 proj = 20;
    if (has_proj()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->proj());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerProj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.PlayerProj)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerProj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerProj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.PlayerProj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.PlayerProj)
    MergeFrom(*source);
  }
}

void PlayerProj::MergeFrom(const PlayerProj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.PlayerProj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000002u) {
      proj_ = from.proj_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerProj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.PlayerProj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerProj::CopyFrom(const PlayerProj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.PlayerProj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerProj::IsInitialized() const {
  return true;
}

void PlayerProj::Swap(PlayerProj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerProj::InternalSwap(PlayerProj* other) {
  using std::swap;
  playerid_.Swap(&other->playerid_);
  swap(proj_, other->proj_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerProj::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProjByName::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjByName::kNameFieldNumber;
const int ProjByName::kPlayerprojFieldNumber;
const int ProjByName::kCountFieldNumber;
const int ProjByName::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjByName::ProjByName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsProjByName();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.ProjByName)
}
ProjByName::ProjByName(const ProjByName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      playerproj_(from.playerproj_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&count_, &from.count_,
    static_cast<size_t>(reinterpret_cast<char*>(&block_) -
    reinterpret_cast<char*>(&count_)) + sizeof(block_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.ProjByName)
}

void ProjByName::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&block_) -
      reinterpret_cast<char*>(&count_)) + sizeof(block_));
}

ProjByName::~ProjByName() {
  // @@protoc_insertion_point(destructor:fantasybit.ProjByName)
  SharedDtor();
}

void ProjByName::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProjByName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjByName::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProjByName& ProjByName::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsProjByName();
  return *internal_default_instance();
}

ProjByName* ProjByName::New(::google::protobuf::Arena* arena) const {
  ProjByName* n = new ProjByName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjByName::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.ProjByName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerproj_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&block_) -
        reinterpret_cast<char*>(&count_)) + sizeof(block_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ProjByName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.ProjByName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.ProjByName.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.PlayerProj playerproj = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_playerproj()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 block = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_block();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &block_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.ProjByName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.ProjByName)
  return false;
#undef DO_
}

void ProjByName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.ProjByName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ProjByName.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->name(), output);
  }

  // repeated .fantasybit.PlayerProj playerproj = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerproj_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->playerproj(static_cast<int>(i)), output);
  }

  // optional int32 count = 40;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->count(), output);
  }

  // optional int32 block = 50;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->block(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.ProjByName)
}

::google::protobuf::uint8* ProjByName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.ProjByName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ProjByName.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->name(), target);
  }

  // repeated .fantasybit.PlayerProj playerproj = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->playerproj_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->playerproj(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 count = 40;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->count(), target);
  }

  // optional int32 block = 50;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->block(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.ProjByName)
  return target;
}

size_t ProjByName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.ProjByName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.PlayerProj playerproj = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->playerproj_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->playerproj(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 10;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int32 count = 40;
    if (has_count()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 block = 50;
    if (has_block()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->block());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjByName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.ProjByName)
  GOOGLE_DCHECK_NE(&from, this);
  const ProjByName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjByName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.ProjByName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.ProjByName)
    MergeFrom(*source);
  }
}

void ProjByName::MergeFrom(const ProjByName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.ProjByName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerproj_.MergeFrom(from.playerproj_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000004u) {
      block_ = from.block_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ProjByName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.ProjByName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjByName::CopyFrom(const ProjByName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.ProjByName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjByName::IsInitialized() const {
  return true;
}

void ProjByName::Swap(ProjByName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjByName::InternalSwap(ProjByName* other) {
  using std::swap;
  playerproj_.InternalSwap(&other->playerproj_);
  name_.Swap(&other->name_);
  swap(count_, other->count_);
  swap(block_, other->block_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjByName::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetProjectionRep::InitAsDefaultInstance() {
  ::fantasybit::_GetProjectionRep_default_instance_._instance.get_mutable()->projs_ = const_cast< ::fantasybit::ProjByName*>(
      ::fantasybit::ProjByName::internal_default_instance());
  ::fantasybit::_GetProjectionRep_default_instance_._instance.get_mutable()->avg_ = const_cast< ::fantasybit::ProjByName*>(
      ::fantasybit::ProjByName::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProjectionRep::kProjsFieldNumber;
const int GetProjectionRep::kAvgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetProjectionRep::GetProjectionRep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsGetProjectionRep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GetProjectionRep)
}
GetProjectionRep::GetProjectionRep(const GetProjectionRep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_projs()) {
    projs_ = new ::fantasybit::ProjByName(*from.projs_);
  } else {
    projs_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::fantasybit::ProjByName(*from.avg_);
  } else {
    avg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GetProjectionRep)
}

void GetProjectionRep::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&projs_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avg_) -
      reinterpret_cast<char*>(&projs_)) + sizeof(avg_));
}

GetProjectionRep::~GetProjectionRep() {
  // @@protoc_insertion_point(destructor:fantasybit.GetProjectionRep)
  SharedDtor();
}

void GetProjectionRep::SharedDtor() {
  if (this != internal_default_instance()) delete projs_;
  if (this != internal_default_instance()) delete avg_;
}

void GetProjectionRep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetProjectionRep::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetProjectionRep& GetProjectionRep::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsGetProjectionRep();
  return *internal_default_instance();
}

GetProjectionRep* GetProjectionRep::New(::google::protobuf::Arena* arena) const {
  GetProjectionRep* n = new GetProjectionRep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetProjectionRep::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GetProjectionRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(projs_ != NULL);
      projs_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(avg_ != NULL);
      avg_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GetProjectionRep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GetProjectionRep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.ProjByName projs = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_projs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.ProjByName avg = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GetProjectionRep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GetProjectionRep)
  return false;
#undef DO_
}

void GetProjectionRep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GetProjectionRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.ProjByName projs = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->projs_, output);
  }

  // optional .fantasybit.ProjByName avg = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->avg_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GetProjectionRep)
}

::google::protobuf::uint8* GetProjectionRep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GetProjectionRep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.ProjByName projs = 20;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->projs_, deterministic, target);
  }

  // optional .fantasybit.ProjByName avg = 30;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, *this->avg_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GetProjectionRep)
  return target;
}

size_t GetProjectionRep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GetProjectionRep)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .fantasybit.ProjByName projs = 20;
    if (has_projs()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->projs_);
    }

    // optional .fantasybit.ProjByName avg = 30;
    if (has_avg()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->avg_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetProjectionRep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GetProjectionRep)
  GOOGLE_DCHECK_NE(&from, this);
  const GetProjectionRep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetProjectionRep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GetProjectionRep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GetProjectionRep)
    MergeFrom(*source);
  }
}

void GetProjectionRep::MergeFrom(const GetProjectionRep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GetProjectionRep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_projs()->::fantasybit::ProjByName::MergeFrom(from.projs());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_avg()->::fantasybit::ProjByName::MergeFrom(from.avg());
    }
  }
}

void GetProjectionRep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GetProjectionRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetProjectionRep::CopyFrom(const GetProjectionRep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GetProjectionRep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectionRep::IsInitialized() const {
  return true;
}

void GetProjectionRep::Swap(GetProjectionRep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetProjectionRep::InternalSwap(GetProjectionRep* other) {
  using std::swap;
  swap(projs_, other->projs_);
  swap(avg_, other->avg_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetProjectionRep::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void KeyValue::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeyValue::kKeyFieldNumber;
const int KeyValue::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeyValue::KeyValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsKeyValue();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.KeyValue)
}
KeyValue::KeyValue(const KeyValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.KeyValue)
}

void KeyValue::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

KeyValue::~KeyValue() {
  // @@protoc_insertion_point(destructor:fantasybit.KeyValue)
  SharedDtor();
}

void KeyValue::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void KeyValue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeyValue::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeyValue& KeyValue::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsKeyValue();
  return *internal_default_instance();
}

KeyValue* KeyValue::New(::google::protobuf::Arena* arena) const {
  KeyValue* n = new KeyValue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeyValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.KeyValue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes key = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes value = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.KeyValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.KeyValue)
  return false;
#undef DO_
}

void KeyValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->key(), output);
  }

  // optional bytes value = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.KeyValue)
}

::google::protobuf::uint8* KeyValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.KeyValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes key = 10;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->key(), target);
  }

  // optional bytes value = 20;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.KeyValue)
  return target;
}

size_t KeyValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.KeyValue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes key = 10;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->key());
    }

    // optional bytes value = 20;
    if (has_value()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeyValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  const KeyValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeyValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.KeyValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.KeyValue)
    MergeFrom(*source);
  }
}

void KeyValue::MergeFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.KeyValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void KeyValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeyValue::CopyFrom(const KeyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.KeyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeyValue::IsInitialized() const {
  return true;
}

void KeyValue::Swap(KeyValue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeyValue::InternalSwap(KeyValue* other) {
  using std::swap;
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeyValue::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bootstrap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bootstrap::kKeyFieldNumber;
const int Bootstrap::kBlocknumFieldNumber;
const int Bootstrap::kWeekFieldNumber;
const int Bootstrap::kSeasonFieldNumber;
const int Bootstrap::kGamemetarootFieldNumber;
const int Bootstrap::kPlayermetarootFieldNumber;
const int Bootstrap::kFnamemetarootFieldNumber;
const int Bootstrap::kPrevidFieldNumber;
const int Bootstrap::kGameresultrootFieldNumber;
const int Bootstrap::kPosmetarootFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bootstrap::Bootstrap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StateData_2eproto::InitDefaultsBootstrap();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.Bootstrap)
}
Bootstrap::Bootstrap(const Bootstrap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  gamemetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamemetaroot()) {
    gamemetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemetaroot_);
  }
  playermetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playermetaroot()) {
    playermetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playermetaroot_);
  }
  fnamemetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fnamemetaroot()) {
    fnamemetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fnamemetaroot_);
  }
  previd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_previd()) {
    previd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previd_);
  }
  gameresultroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameresultroot()) {
    gameresultroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameresultroot_);
  }
  posmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_posmetaroot()) {
    posmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posmetaroot_);
  }
  ::memcpy(&blocknum_, &from.blocknum_,
    static_cast<size_t>(reinterpret_cast<char*>(&season_) -
    reinterpret_cast<char*>(&blocknum_)) + sizeof(season_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.Bootstrap)
}

void Bootstrap::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamemetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playermetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fnamemetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameresultroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posmetaroot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&blocknum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&season_) -
      reinterpret_cast<char*>(&blocknum_)) + sizeof(season_));
}

Bootstrap::~Bootstrap() {
  // @@protoc_insertion_point(destructor:fantasybit.Bootstrap)
  SharedDtor();
}

void Bootstrap::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gamemetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playermetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fnamemetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  previd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gameresultroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  posmetaroot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Bootstrap::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bootstrap::descriptor() {
  ::protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bootstrap& Bootstrap::default_instance() {
  ::protobuf_StateData_2eproto::InitDefaultsBootstrap();
  return *internal_default_instance();
}

Bootstrap* Bootstrap::New(::google::protobuf::Arena* arena) const {
  Bootstrap* n = new Bootstrap;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bootstrap::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.Bootstrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!gamemetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamemetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!playermetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playermetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!fnamemetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fnamemetaroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(!previd_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*previd_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(!gameresultroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gameresultroot_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(!posmetaroot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*posmetaroot_.UnsafeRawStringPointer())->clear();
    }
  }
  blocknum_ = 0;
  if (cached_has_bits & 768u) {
    ::memset(&week_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&season_) -
        reinterpret_cast<char*>(&week_)) + sizeof(season_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Bootstrap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.Bootstrap)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.Bootstrap.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 blocknum = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_blocknum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blocknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 week = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 season = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_season();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &season_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gamemetaroot = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gamemetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes playermetaroot = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playermetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes fnamemetaroot = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_fnamemetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes previd = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_previd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes gameresultroot = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gameresultroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes posmetaroot = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_posmetaroot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.Bootstrap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.Bootstrap)
  return false;
#undef DO_
}

void Bootstrap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.Bootstrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.Bootstrap.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional int32 blocknum = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->blocknum(), output);
  }

  // optional int32 week = 3;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->week(), output);
  }

  // optional int32 season = 4;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->season(), output);
  }

  // optional bytes gamemetaroot = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->gamemetaroot(), output);
  }

  // optional bytes playermetaroot = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      20, this->playermetaroot(), output);
  }

  // optional bytes fnamemetaroot = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      30, this->fnamemetaroot(), output);
  }

  // optional bytes previd = 40;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      40, this->previd(), output);
  }

  // optional bytes gameresultroot = 50;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      50, this->gameresultroot(), output);
  }

  // optional bytes posmetaroot = 60;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      60, this->posmetaroot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.Bootstrap)
}

::google::protobuf::uint8* Bootstrap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.Bootstrap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.Bootstrap.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional int32 blocknum = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->blocknum(), target);
  }

  // optional int32 week = 3;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->week(), target);
  }

  // optional int32 season = 4;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->season(), target);
  }

  // optional bytes gamemetaroot = 10;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->gamemetaroot(), target);
  }

  // optional bytes playermetaroot = 20;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        20, this->playermetaroot(), target);
  }

  // optional bytes fnamemetaroot = 30;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        30, this->fnamemetaroot(), target);
  }

  // optional bytes previd = 40;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        40, this->previd(), target);
  }

  // optional bytes gameresultroot = 50;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        50, this->gameresultroot(), target);
  }

  // optional bytes posmetaroot = 60;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        60, this->posmetaroot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.Bootstrap)
  return target;
}

size_t Bootstrap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.Bootstrap)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional bytes gamemetaroot = 10;
    if (has_gamemetaroot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gamemetaroot());
    }

    // optional bytes playermetaroot = 20;
    if (has_playermetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->playermetaroot());
    }

    // optional bytes fnamemetaroot = 30;
    if (has_fnamemetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->fnamemetaroot());
    }

    // optional bytes previd = 40;
    if (has_previd()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->previd());
    }

    // optional bytes gameresultroot = 50;
    if (has_gameresultroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->gameresultroot());
    }

    // optional bytes posmetaroot = 60;
    if (has_posmetaroot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->posmetaroot());
    }

    // optional int32 blocknum = 2;
    if (has_blocknum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blocknum());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 week = 3;
    if (has_week()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->week());
    }

    // optional int32 season = 4;
    if (has_season()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->season());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bootstrap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.Bootstrap)
  GOOGLE_DCHECK_NE(&from, this);
  const Bootstrap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bootstrap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.Bootstrap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.Bootstrap)
    MergeFrom(*source);
  }
}

void Bootstrap::MergeFrom(const Bootstrap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.Bootstrap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gamemetaroot();
      gamemetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamemetaroot_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_playermetaroot();
      playermetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playermetaroot_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_fnamemetaroot();
      fnamemetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fnamemetaroot_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_previd();
      previd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previd_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_gameresultroot();
      gameresultroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameresultroot_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_posmetaroot();
      posmetaroot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.posmetaroot_);
    }
    if (cached_has_bits & 0x00000080u) {
      blocknum_ = from.blocknum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      week_ = from.week_;
    }
    if (cached_has_bits & 0x00000200u) {
      season_ = from.season_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Bootstrap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.Bootstrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bootstrap::CopyFrom(const Bootstrap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.Bootstrap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bootstrap::IsInitialized() const {
  return true;
}

void Bootstrap::Swap(Bootstrap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bootstrap::InternalSwap(Bootstrap* other) {
  using std::swap;
  key_.Swap(&other->key_);
  gamemetaroot_.Swap(&other->gamemetaroot_);
  playermetaroot_.Swap(&other->playermetaroot_);
  fnamemetaroot_.Swap(&other->fnamemetaroot_);
  previd_.Swap(&other->previd_);
  gameresultroot_.Swap(&other->gameresultroot_);
  posmetaroot_.Swap(&other->posmetaroot_);
  swap(blocknum_, other->blocknum_);
  swap(week_, other->week_);
  swap(season_, other->season_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bootstrap::GetMetadata() const {
  protobuf_StateData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StateData_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetGlobalStateRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetGlobalStateRep >, 11, false >
  GetGlobalStateRep::rep(kRepFieldNumber, *::fantasybit::GetGlobalStateRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetScheduleRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetScheduleRep >, 11, false >
  GetScheduleRep::rep(kRepFieldNumber, *::fantasybit::GetScheduleRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckNameReq::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WsReq,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::CheckNameReq >, 11, false >
  CheckNameReq::req(kReqFieldNumber, *::fantasybit::CheckNameReq::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckNameRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::CheckNameRep >, 11, false >
  CheckNameRep::rep(kRepFieldNumber, *::fantasybit::CheckNameRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pk2FnameReq::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WsReq,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::Pk2FnameReq >, 11, false >
  Pk2FnameReq::req(kReqFieldNumber, *::fantasybit::Pk2FnameReq::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pk2FnameRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::Pk2FnameRep >, 11, false >
  Pk2FnameRep::rep(kRepFieldNumber, *::fantasybit::Pk2FnameRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeReq::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WsReq,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::SubscribeReq >, 11, false >
  SubscribeReq::req(kReqFieldNumber, *::fantasybit::SubscribeReq::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameStatusReq::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WsReq,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::NameStatusReq >, 11, false >
  NameStatusReq::req(kReqFieldNumber, *::fantasybit::NameStatusReq::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NameStatusRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::NameStatusRep >, 11, false >
  NameStatusRep::rep(kRepFieldNumber, *::fantasybit::NameStatusRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetAllNamesRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetAllNamesRep >, 11, false >
  GetAllNamesRep::rep(kRepFieldNumber, *::fantasybit::GetAllNamesRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetCurrRostersRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetCurrRostersRep >, 11, false >
  GetCurrRostersRep::rep(kRepFieldNumber, *::fantasybit::GetCurrRostersRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetROWMarketRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetROWMarketRep >, 11, false >
  GetROWMarketRep::rep(kRepFieldNumber, *::fantasybit::GetROWMarketRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDepthReq::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WsReq,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetDepthReq >, 11, false >
  GetDepthReq::req(kReqFieldNumber, *::fantasybit::GetDepthReq::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDepthRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetDepthRep >, 11, false >
  GetDepthRep::rep(kRepFieldNumber, *::fantasybit::GetDepthRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrdersRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetOrdersRep >, 11, false >
  GetOrdersRep::rep(kRepFieldNumber, *::fantasybit::GetOrdersRep::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetOrdersReq::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WsReq,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetOrdersReq >, 11, false >
  GetOrdersReq::req(kReqFieldNumber, *::fantasybit::GetOrdersReq::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProjectionReq::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WsReq,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetProjectionReq >, 11, false >
  GetProjectionReq::req(kReqFieldNumber, *::fantasybit::GetProjectionReq::internal_default_instance());
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetProjectionRep::kRepFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::fantasybit::WSReply,
    ::google::protobuf::internal::MessageTypeTraits< ::fantasybit::GetProjectionRep >, 11, false >
  GetProjectionRep::rep(kRepFieldNumber, *::fantasybit::GetProjectionRep::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace fantasybit

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExData.proto

#include "ExData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace fantasybit {
class SettlePosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SettlePos>
      _instance;
} _SettlePos_default_instance_;
class StorePosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StorePos>
      _instance;
} _StorePos_default_instance_;
class BookPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BookPos>
      _instance;
} _BookPos_default_instance_;
class GameSettlePosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameSettlePos>
      _instance;
} _GameSettlePos_default_instance_;
class OrderCoreDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderCore>
      _instance;
} _OrderCore_default_instance_;
class OrderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Order>
      _instance;
} _Order_default_instance_;
class OrderFillDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OrderFill>
      _instance;
} _OrderFill_default_instance_;
class MarketTickerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MarketTicker>
      _instance;
} _MarketTicker_default_instance_;
class TradeTicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TradeTic>
      _instance;
} _TradeTic_default_instance_;
class DepthFeedDeltaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DepthFeedDelta>
      _instance;
} _DepthFeedDelta_default_instance_;
class ContractOHLCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContractOHLC>
      _instance;
} _ContractOHLC_default_instance_;
class DepthItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DepthItem>
      _instance;
} _DepthItem_default_instance_;
class BookDeltaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BookDelta>
      _instance;
} _BookDelta_default_instance_;
class MarketQuoteDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MarketQuote>
      _instance;
} _MarketQuote_default_instance_;
class MarketSnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MarketSnapshot>
      _instance;
} _MarketSnapshot_default_instance_;
class FutContractDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FutContract>
      _instance;
} _FutContract_default_instance_;
}  // namespace fantasybit
namespace protobuf_ExData_2eproto {
void InitDefaultsSettlePosImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_SettlePos_default_instance_;
    new (ptr) ::fantasybit::SettlePos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::SettlePos::InitAsDefaultInstance();
}

void InitDefaultsSettlePos() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSettlePosImpl);
}

void InitDefaultsStorePosImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_StorePos_default_instance_;
    new (ptr) ::fantasybit::StorePos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::StorePos::InitAsDefaultInstance();
}

void InitDefaultsStorePos() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStorePosImpl);
}

void InitDefaultsBookPosImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ExData_2eproto::InitDefaultsSettlePos();
  {
    void* ptr = &::fantasybit::_BookPos_default_instance_;
    new (ptr) ::fantasybit::BookPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::BookPos::InitAsDefaultInstance();
}

void InitDefaultsBookPos() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBookPosImpl);
}

void InitDefaultsGameSettlePosImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ExData_2eproto::InitDefaultsBookPos();
  {
    void* ptr = &::fantasybit::_GameSettlePos_default_instance_;
    new (ptr) ::fantasybit::GameSettlePos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GameSettlePos::InitAsDefaultInstance();
}

void InitDefaultsGameSettlePos() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameSettlePosImpl);
}

void InitDefaultsOrderCoreImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_OrderCore_default_instance_;
    new (ptr) ::fantasybit::OrderCore();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::OrderCore::InitAsDefaultInstance();
}

void InitDefaultsOrderCore() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrderCoreImpl);
}

void InitDefaultsOrderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ExData_2eproto::InitDefaultsOrderCore();
  {
    void* ptr = &::fantasybit::_Order_default_instance_;
    new (ptr) ::fantasybit::Order();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::Order::InitAsDefaultInstance();
}

void InitDefaultsOrder() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrderImpl);
}

void InitDefaultsOrderFillImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ExData_2eproto::InitDefaultsOrder();
  {
    void* ptr = &::fantasybit::_OrderFill_default_instance_;
    new (ptr) ::fantasybit::OrderFill();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::OrderFill::InitAsDefaultInstance();
}

void InitDefaultsOrderFill() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOrderFillImpl);
}

void InitDefaultsMarketTickerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_MarketTicker_default_instance_;
    new (ptr) ::fantasybit::MarketTicker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::MarketTicker::InitAsDefaultInstance();
}

void InitDefaultsMarketTicker() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMarketTickerImpl);
}

void InitDefaultsTradeTicImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_TradeTic_default_instance_;
    new (ptr) ::fantasybit::TradeTic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::TradeTic::InitAsDefaultInstance();
}

void InitDefaultsTradeTic() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTradeTicImpl);
}

void InitDefaultsDepthFeedDeltaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_DepthFeedDelta_default_instance_;
    new (ptr) ::fantasybit::DepthFeedDelta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::DepthFeedDelta::InitAsDefaultInstance();
}

void InitDefaultsDepthFeedDelta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDepthFeedDeltaImpl);
}

void InitDefaultsContractOHLCImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_ContractOHLC_default_instance_;
    new (ptr) ::fantasybit::ContractOHLC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::ContractOHLC::InitAsDefaultInstance();
}

void InitDefaultsContractOHLC() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsContractOHLCImpl);
}

void InitDefaultsDepthItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_DepthItem_default_instance_;
    new (ptr) ::fantasybit::DepthItem();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::DepthItem::InitAsDefaultInstance();
}

void InitDefaultsDepthItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDepthItemImpl);
}

void InitDefaultsBookDeltaImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ExData_2eproto::InitDefaultsOrderCore();
  protobuf_ExData_2eproto::InitDefaultsContractOHLC();
  protobuf_ExData_2eproto::InitDefaultsOrder();
  protobuf_ExData_2eproto::InitDefaultsMarketTicker();
  {
    void* ptr = &::fantasybit::_BookDelta_default_instance_;
    new (ptr) ::fantasybit::BookDelta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::BookDelta::InitAsDefaultInstance();
}

void InitDefaultsBookDelta() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsBookDeltaImpl);
}

void InitDefaultsMarketQuoteImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_MarketQuote_default_instance_;
    new (ptr) ::fantasybit::MarketQuote();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::MarketQuote::InitAsDefaultInstance();
}

void InitDefaultsMarketQuote() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMarketQuoteImpl);
}

void InitDefaultsMarketSnapshotImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ExData_2eproto::InitDefaultsDepthItem();
  protobuf_ExData_2eproto::InitDefaultsContractOHLC();
  protobuf_ExData_2eproto::InitDefaultsMarketQuote();
  {
    void* ptr = &::fantasybit::_MarketSnapshot_default_instance_;
    new (ptr) ::fantasybit::MarketSnapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::MarketSnapshot::InitAsDefaultInstance();
}

void InitDefaultsMarketSnapshot() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMarketSnapshotImpl);
}

void InitDefaultsFutContractImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_FutContract_default_instance_;
    new (ptr) ::fantasybit::FutContract();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::FutContract::InitAsDefaultInstance();
}

void InitDefaultsFutContract() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFutContractImpl);
}

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::SettlePos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::SettlePos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::SettlePos, pk_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::SettlePos, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::SettlePos, price_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::StorePos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::StorePos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::StorePos, qty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::StorePos, price_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookPos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookPos, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookPos, positions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookPos, symbol_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameSettlePos, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameSettlePos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameSettlePos, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameSettlePos, home_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameSettlePos, away_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderCore, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderCore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderCore, buyside_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderCore, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderCore, price_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Order, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Order, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Order, refnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::Order, core_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFill, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFill, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFill, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFill, fillprice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFill, fillsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::OrderFill, timestamp_),
  0,
  2,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicker, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicker, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicker, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicker, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketTicker, price_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TradeTic, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TradeTic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TradeTic, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TradeTic, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TradeTic, price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TradeTic, ishigh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TradeTic, islow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TradeTic, change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TradeTic, tic_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthFeedDelta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthFeedDelta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthFeedDelta, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthFeedDelta, isbid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthFeedDelta, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthFeedDelta, price_),
  0,
  2,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ContractOHLC, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ContractOHLC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ContractOHLC, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ContractOHLC, open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ContractOHLC, high_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ContractOHLC, low_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ContractOHLC, close_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ContractOHLC, volume_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::ContractOHLC, change_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthItem, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthItem, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthItem, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthItem, bs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::DepthItem, as_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, fantasy_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, seqnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, newnew_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, ohlc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, removes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, level2tic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, level1tic_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, blocknum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::BookDelta, symbol_),
  0,
  5,
  1,
  3,
  4,
  ~0u,
  ~0u,
  ~0u,
  6,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketQuote, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketQuote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketQuote, bs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketQuote, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketQuote, a_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketQuote, as_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketQuote, l_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketQuote, ls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketQuote, udn_),
  1,
  2,
  3,
  4,
  5,
  6,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketSnapshot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketSnapshot, symbol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketSnapshot, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketSnapshot, depth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketSnapshot, ohlc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketSnapshot, quote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::MarketSnapshot, blocknum_),
  0,
  3,
  ~0u,
  1,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FutContract, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FutContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FutContract, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FutContract, season_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FutContract, week_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::FutContract, symbol_),
  3,
  1,
  2,
  0,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::fantasybit::SettlePos)},
  { 11, 18, sizeof(::fantasybit::StorePos)},
  { 20, 28, sizeof(::fantasybit::BookPos)},
  { 31, 39, sizeof(::fantasybit::GameSettlePos)},
  { 42, 50, sizeof(::fantasybit::OrderCore)},
  { 53, 60, sizeof(::fantasybit::Order)},
  { 62, 71, sizeof(::fantasybit::OrderFill)},
  { 75, 84, sizeof(::fantasybit::MarketTicker)},
  { 88, 100, sizeof(::fantasybit::TradeTic)},
  { 107, 116, sizeof(::fantasybit::DepthFeedDelta)},
  { 120, 132, sizeof(::fantasybit::ContractOHLC)},
  { 139, 149, sizeof(::fantasybit::DepthItem)},
  { 154, 169, sizeof(::fantasybit::BookDelta)},
  { 179, 191, sizeof(::fantasybit::MarketQuote)},
  { 198, 209, sizeof(::fantasybit::MarketSnapshot)},
  { 215, 224, sizeof(::fantasybit::FutContract)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_SettlePos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_StorePos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_BookPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GameSettlePos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_OrderCore_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_Order_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_OrderFill_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_MarketTicker_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_TradeTic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_DepthFeedDelta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_ContractOHLC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_DepthItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_BookDelta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_MarketQuote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_MarketSnapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_FutContract_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ExData.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014ExData.proto\022\nfantasybit\"3\n\tSettlePos\022"
      "\n\n\002pk\030\n \001(\t\022\013\n\003qty\030\024 \001(\005\022\r\n\005price\030\031 \001(\005\""
      "&\n\010StorePos\022\013\n\003qty\030\024 \001(\005\022\r\n\005price\030\031 \001(\005\""
      "U\n\007BookPos\022\020\n\010playerid\030\036 \001(\t\022(\n\tposition"
      "s\030( \003(\0132\025.fantasybit.SettlePos\022\016\n\006symbol"
      "\0302 \001(\t\"e\n\rGameSettlePos\022\016\n\006gameid\030\n \001(\t\022"
      "!\n\004home\030\024 \003(\0132\023.fantasybit.BookPos\022!\n\004aw"
      "ay\030\036 \003(\0132\023.fantasybit.BookPos\"9\n\tOrderCo"
      "re\022\017\n\007buyside\030\n \001(\010\022\014\n\004size\030\024 \001(\005\022\r\n\005pri"
      "ce\030\036 \001(\005\"<\n\005Order\022\016\n\006refnum\030\n \001(\005\022#\n\004cor"
      "e\030\024 \001(\0132\025.fantasybit.OrderCore\"d\n\tOrderF"
      "ill\022\037\n\004left\030\n \001(\0132\021.fantasybit.Order\022\021\n\t"
      "fillprice\030\024 \001(\005\022\020\n\010fillsize\030\036 \001(\005\022\021\n\ttim"
      "estamp\030( \001(\005\"\214\001\n\014MarketTicker\022+\n\004type\030\001 "
      "\001(\0162\035.fantasybit.MarketTicker.Type\022\016\n\006sy"
      "mbol\030\002 \001(\t\022\014\n\004size\030\024 \001(\005\022\r\n\005price\030\036 \001(\005\""
      "\"\n\004Type\022\007\n\003BID\020\001\022\007\n\003ASK\020\002\022\010\n\004LAST\020\003\"s\n\010T"
      "radeTic\022\016\n\006symbol\030\002 \001(\t\022\014\n\004size\030\024 \001(\005\022\r\n"
      "\005price\030\036 \001(\005\022\016\n\006ishigh\030( \001(\005\022\r\n\005islow\030- "
      "\001(\005\022\016\n\006change\0302 \001(\005\022\013\n\003tic\030< \001(\005\"L\n\016Dept"
      "hFeedDelta\022\016\n\006symbol\030\001 \001(\t\022\r\n\005isbid\030\n \001("
      "\010\022\014\n\004size\030\024 \001(\005\022\r\n\005price\030\036 \001(\005\"v\n\014Contra"
      "ctOHLC\022\016\n\006symbol\030\n \001(\t\022\014\n\004open\030\024 \001(\005\022\014\n\004"
      "high\030\036 \001(\005\022\013\n\003low\030( \001(\005\022\r\n\005close\0302 \001(\005\022\016"
      "\n\006volume\030< \001(\005\022\016\n\006change\030F \001(\005\"H\n\tDepthI"
      "tem\022\r\n\005level\030\n \001(\005\022\t\n\001b\030\036 \001(\005\022\t\n\001a\030( \001(\005"
      "\022\n\n\002bs\0302 \001(\005\022\n\n\002as\030< \001(\005\"\262\002\n\tBookDelta\022\024"
      "\n\014fantasy_name\030\n \001(\t\022\016\n\006seqnum\030\024 \001(\005\022\020\n\010"
      "playerid\030\036 \001(\t\022%\n\006newnew\030( \001(\0132\025.fantasy"
      "bit.OrderCore\022&\n\004ohlc\030) \001(\0132\030.fantasybit"
      ".ContractOHLC\022\"\n\007removes\0302 \003(\0132\021.fantasy"
      "bit.Order\022+\n\tlevel2tic\030< \003(\0132\030.fantasybi"
      "t.MarketTicker\022+\n\tlevel1tic\030F \003(\0132\030.fant"
      "asybit.MarketTicker\022\020\n\010blocknum\030P \001(\005\022\016\n"
      "\006symbol\030Z \001(\t\"_\n\013MarketQuote\022\n\n\002bs\030\n \001(\005"
      "\022\t\n\001b\030\024 \001(\005\022\t\n\001a\030\036 \001(\005\022\n\n\002as\030( \001(\005\022\t\n\001l\030"
      "2 \001(\005\022\n\n\002ls\030< \001(\005\022\013\n\003udn\030F \001(\005\"\266\001\n\016Marke"
      "tSnapshot\022\016\n\006symbol\030\n \001(\t\022\014\n\004week\030\013 \001(\005\022"
      "$\n\005depth\030F \003(\0132\025.fantasybit.DepthItem\022&\n"
      "\004ohlc\030\024 \001(\0132\030.fantasybit.ContractOHLC\022&\n"
      "\005quote\030\036 \001(\0132\027.fantasybit.MarketQuote\022\020\n"
      "\010blocknum\030( \001(\005\"\233\001\n\013FutContract\022*\n\004type\030"
      "\n \001(\0162\034.fantasybit.FutContract.Type\022\016\n\006s"
      "eason\030\024 \001(\005\022\014\n\004week\030\036 \001(\005\022\016\n\006symbol\030( \001("
      "\t\"2\n\004Type\022\n\n\006WEEKLY\020\001\022\n\n\006SEASON\020\002\022\007\n\003ROW"
      "\020\003\022\t\n\005OTHER\020\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1813);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ExData.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ExData_2eproto
namespace fantasybit {
const ::google::protobuf::EnumDescriptor* MarketTicker_Type_descriptor() {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ExData_2eproto::file_level_enum_descriptors[0];
}
bool MarketTicker_Type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MarketTicker_Type MarketTicker::BID;
const MarketTicker_Type MarketTicker::ASK;
const MarketTicker_Type MarketTicker::LAST;
const MarketTicker_Type MarketTicker::Type_MIN;
const MarketTicker_Type MarketTicker::Type_MAX;
const int MarketTicker::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* FutContract_Type_descriptor() {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ExData_2eproto::file_level_enum_descriptors[1];
}
bool FutContract_Type_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FutContract_Type FutContract::WEEKLY;
const FutContract_Type FutContract::SEASON;
const FutContract_Type FutContract::ROW;
const FutContract_Type FutContract::OTHER;
const FutContract_Type FutContract::Type_MIN;
const FutContract_Type FutContract::Type_MAX;
const int FutContract::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void SettlePos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SettlePos::kPkFieldNumber;
const int SettlePos::kQtyFieldNumber;
const int SettlePos::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SettlePos::SettlePos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsSettlePos();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.SettlePos)
}
SettlePos::SettlePos(const SettlePos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pk()) {
    pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
  }
  ::memcpy(&qty_, &from.qty_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&qty_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.SettlePos)
}

void SettlePos::SharedCtor() {
  _cached_size_ = 0;
  pk_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&qty_)) + sizeof(price_));
}

SettlePos::~SettlePos() {
  // @@protoc_insertion_point(destructor:fantasybit.SettlePos)
  SharedDtor();
}

void SettlePos::SharedDtor() {
  pk_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SettlePos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SettlePos::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SettlePos& SettlePos::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsSettlePos();
  return *internal_default_instance();
}

SettlePos* SettlePos::New(::google::protobuf::Arena* arena) const {
  SettlePos* n = new SettlePos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SettlePos::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.SettlePos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!pk_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*pk_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 6u) {
    ::memset(&qty_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_) -
        reinterpret_cast<char*>(&qty_)) + sizeof(price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SettlePos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.SettlePos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pk = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pk()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pk().data(), static_cast<int>(this->pk().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.SettlePos.pk");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 qty = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_qty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 price = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.SettlePos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.SettlePos)
  return false;
#undef DO_
}

void SettlePos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.SettlePos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pk = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.SettlePos.pk");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->pk(), output);
  }

  // optional int32 qty = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->qty(), output);
  }

  // optional int32 price = 25;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.SettlePos)
}

::google::protobuf::uint8* SettlePos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.SettlePos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string pk = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pk().data(), static_cast<int>(this->pk().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.SettlePos.pk");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->pk(), target);
  }

  // optional int32 qty = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->qty(), target);
  }

  // optional int32 price = 25;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.SettlePos)
  return target;
}

size_t SettlePos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.SettlePos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string pk = 10;
    if (has_pk()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pk());
    }

    // optional int32 qty = 20;
    if (has_qty()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qty());
    }

    // optional int32 price = 25;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SettlePos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.SettlePos)
  GOOGLE_DCHECK_NE(&from, this);
  const SettlePos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SettlePos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.SettlePos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.SettlePos)
    MergeFrom(*source);
  }
}

void SettlePos::MergeFrom(const SettlePos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.SettlePos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_pk();
      pk_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pk_);
    }
    if (cached_has_bits & 0x00000002u) {
      qty_ = from.qty_;
    }
    if (cached_has_bits & 0x00000004u) {
      price_ = from.price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SettlePos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.SettlePos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SettlePos::CopyFrom(const SettlePos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.SettlePos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SettlePos::IsInitialized() const {
  return true;
}

void SettlePos::Swap(SettlePos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SettlePos::InternalSwap(SettlePos* other) {
  using std::swap;
  pk_.Swap(&other->pk_);
  swap(qty_, other->qty_);
  swap(price_, other->price_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SettlePos::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StorePos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StorePos::kQtyFieldNumber;
const int StorePos::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StorePos::StorePos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsStorePos();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.StorePos)
}
StorePos::StorePos(const StorePos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&qty_, &from.qty_,
    static_cast<size_t>(reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&qty_)) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.StorePos)
}

void StorePos::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&qty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&qty_)) + sizeof(price_));
}

StorePos::~StorePos() {
  // @@protoc_insertion_point(destructor:fantasybit.StorePos)
  SharedDtor();
}

void StorePos::SharedDtor() {
}

void StorePos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StorePos::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StorePos& StorePos::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsStorePos();
  return *internal_default_instance();
}

StorePos* StorePos::New(::google::protobuf::Arena* arena) const {
  StorePos* n = new StorePos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StorePos::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.StorePos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&qty_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_) -
        reinterpret_cast<char*>(&qty_)) + sizeof(price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool StorePos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.StorePos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 qty = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_qty();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qty_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 price = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.StorePos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.StorePos)
  return false;
#undef DO_
}

void StorePos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.StorePos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 qty = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->qty(), output);
  }

  // optional int32 price = 25;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.StorePos)
}

::google::protobuf::uint8* StorePos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.StorePos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 qty = 20;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->qty(), target);
  }

  // optional int32 price = 25;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.StorePos)
  return target;
}

size_t StorePos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.StorePos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 qty = 20;
    if (has_qty()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->qty());
    }

    // optional int32 price = 25;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StorePos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.StorePos)
  GOOGLE_DCHECK_NE(&from, this);
  const StorePos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StorePos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.StorePos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.StorePos)
    MergeFrom(*source);
  }
}

void StorePos::MergeFrom(const StorePos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.StorePos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      qty_ = from.qty_;
    }
    if (cached_has_bits & 0x00000002u) {
      price_ = from.price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void StorePos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.StorePos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StorePos::CopyFrom(const StorePos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.StorePos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StorePos::IsInitialized() const {
  return true;
}

void StorePos::Swap(StorePos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StorePos::InternalSwap(StorePos* other) {
  using std::swap;
  swap(qty_, other->qty_);
  swap(price_, other->price_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StorePos::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BookPos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BookPos::kPlayeridFieldNumber;
const int BookPos::kPositionsFieldNumber;
const int BookPos::kSymbolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BookPos::BookPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsBookPos();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.BookPos)
}
BookPos::BookPos(const BookPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      positions_(from.positions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.BookPos)
}

void BookPos::SharedCtor() {
  _cached_size_ = 0;
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BookPos::~BookPos() {
  // @@protoc_insertion_point(destructor:fantasybit.BookPos)
  SharedDtor();
}

void BookPos::SharedDtor() {
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BookPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BookPos::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BookPos& BookPos::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsBookPos();
  return *internal_default_instance();
}

BookPos* BookPos::New(::google::protobuf::Arena* arena) const {
  BookPos* n = new BookPos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BookPos::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.BookPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positions_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*symbol_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BookPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.BookPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string playerid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.BookPos.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.SettlePos positions = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_positions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string symbol = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.BookPos.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.BookPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.BookPos)
  return false;
#undef DO_
}

void BookPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.BookPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 30;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookPos.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->playerid(), output);
  }

  // repeated .fantasybit.SettlePos positions = 40;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, this->positions(static_cast<int>(i)), output);
  }

  // optional string symbol = 50;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookPos.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->symbol(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.BookPos)
}

::google::protobuf::uint8* BookPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.BookPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string playerid = 30;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookPos.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->playerid(), target);
  }

  // repeated .fantasybit.SettlePos positions = 40;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->positions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, this->positions(static_cast<int>(i)), deterministic, target);
  }

  // optional string symbol = 50;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookPos.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->symbol(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.BookPos)
  return target;
}

size_t BookPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.BookPos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.SettlePos positions = 40;
  {
    unsigned int count = static_cast<unsigned int>(this->positions_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->positions(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string playerid = 30;
    if (has_playerid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional string symbol = 50;
    if (has_symbol()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BookPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.BookPos)
  GOOGLE_DCHECK_NE(&from, this);
  const BookPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BookPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.BookPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.BookPos)
    MergeFrom(*source);
  }
}

void BookPos::MergeFrom(const BookPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.BookPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positions_.MergeFrom(from.positions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
  }
}

void BookPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.BookPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BookPos::CopyFrom(const BookPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.BookPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BookPos::IsInitialized() const {
  return true;
}

void BookPos::Swap(BookPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BookPos::InternalSwap(BookPos* other) {
  using std::swap;
  positions_.InternalSwap(&other->positions_);
  playerid_.Swap(&other->playerid_);
  symbol_.Swap(&other->symbol_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BookPos::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameSettlePos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameSettlePos::kGameidFieldNumber;
const int GameSettlePos::kHomeFieldNumber;
const int GameSettlePos::kAwayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameSettlePos::GameSettlePos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsGameSettlePos();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GameSettlePos)
}
GameSettlePos::GameSettlePos(const GameSettlePos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      home_(from.home_),
      away_(from.away_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gameid()) {
    gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
  }
  // @@protoc_insertion_point(copy_constructor:fantasybit.GameSettlePos)
}

void GameSettlePos::SharedCtor() {
  _cached_size_ = 0;
  gameid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GameSettlePos::~GameSettlePos() {
  // @@protoc_insertion_point(destructor:fantasybit.GameSettlePos)
  SharedDtor();
}

void GameSettlePos::SharedDtor() {
  gameid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GameSettlePos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameSettlePos::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameSettlePos& GameSettlePos::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsGameSettlePos();
  return *internal_default_instance();
}

GameSettlePos* GameSettlePos::New(::google::protobuf::Arena* arena) const {
  GameSettlePos* n = new GameSettlePos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameSettlePos::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GameSettlePos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  home_.Clear();
  away_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!gameid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*gameid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameSettlePos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GameSettlePos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string gameid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gameid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gameid().data(), static_cast<int>(this->gameid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.GameSettlePos.gameid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.BookPos home = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_home()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.BookPos away = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_away()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GameSettlePos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GameSettlePos)
  return false;
#undef DO_
}

void GameSettlePos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GameSettlePos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GameSettlePos.gameid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->gameid(), output);
  }

  // repeated .fantasybit.BookPos home = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->home_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->home(static_cast<int>(i)), output);
  }

  // repeated .fantasybit.BookPos away = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->away_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->away(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GameSettlePos)
}

::google::protobuf::uint8* GameSettlePos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GameSettlePos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string gameid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gameid().data(), static_cast<int>(this->gameid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.GameSettlePos.gameid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->gameid(), target);
  }

  // repeated .fantasybit.BookPos home = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->home_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->home(static_cast<int>(i)), deterministic, target);
  }

  // repeated .fantasybit.BookPos away = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->away_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, this->away(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GameSettlePos)
  return target;
}

size_t GameSettlePos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GameSettlePos)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.BookPos home = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->home_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->home(static_cast<int>(i)));
    }
  }

  // repeated .fantasybit.BookPos away = 30;
  {
    unsigned int count = static_cast<unsigned int>(this->away_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->away(static_cast<int>(i)));
    }
  }

  // optional string gameid = 10;
  if (has_gameid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gameid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameSettlePos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GameSettlePos)
  GOOGLE_DCHECK_NE(&from, this);
  const GameSettlePos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameSettlePos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GameSettlePos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GameSettlePos)
    MergeFrom(*source);
  }
}

void GameSettlePos::MergeFrom(const GameSettlePos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GameSettlePos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  home_.MergeFrom(from.home_);
  away_.MergeFrom(from.away_);
  if (from.has_gameid()) {
    set_has_gameid();
    gameid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gameid_);
  }
}

void GameSettlePos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GameSettlePos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameSettlePos::CopyFrom(const GameSettlePos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GameSettlePos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameSettlePos::IsInitialized() const {
  return true;
}

void GameSettlePos::Swap(GameSettlePos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameSettlePos::InternalSwap(GameSettlePos* other) {
  using std::swap;
  home_.InternalSwap(&other->home_);
  away_.InternalSwap(&other->away_);
  gameid_.Swap(&other->gameid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameSettlePos::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderCore::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderCore::kBuysideFieldNumber;
const int OrderCore::kSizeFieldNumber;
const int OrderCore::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderCore::OrderCore()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsOrderCore();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.OrderCore)
}
OrderCore::OrderCore(const OrderCore& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&price_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.OrderCore)
}

void OrderCore::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&price_)) + sizeof(size_));
}

OrderCore::~OrderCore() {
  // @@protoc_insertion_point(destructor:fantasybit.OrderCore)
  SharedDtor();
}

void OrderCore::SharedDtor() {
}

void OrderCore::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderCore::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderCore& OrderCore::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsOrderCore();
  return *internal_default_instance();
}

OrderCore* OrderCore::New(::google::protobuf::Arena* arena) const {
  OrderCore* n = new OrderCore;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderCore::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.OrderCore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&price_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&price_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderCore::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.OrderCore)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool buyside = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_buyside();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &buyside_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 size = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 price = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.OrderCore)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.OrderCore)
  return false;
#undef DO_
}

void OrderCore::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.OrderCore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool buyside = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->buyside(), output);
  }

  // optional int32 size = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->size(), output);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.OrderCore)
}

::google::protobuf::uint8* OrderCore::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.OrderCore)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool buyside = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->buyside(), target);
  }

  // optional int32 size = 20;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->size(), target);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.OrderCore)
  return target;
}

size_t OrderCore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.OrderCore)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional int32 price = 30;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional bool buyside = 10;
    if (has_buyside()) {
      total_size += 1 + 1;
    }

    // optional int32 size = 20;
    if (has_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderCore::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.OrderCore)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderCore* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderCore>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.OrderCore)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.OrderCore)
    MergeFrom(*source);
  }
}

void OrderCore::MergeFrom(const OrderCore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.OrderCore)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000002u) {
      buyside_ = from.buyside_;
    }
    if (cached_has_bits & 0x00000004u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OrderCore::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.OrderCore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderCore::CopyFrom(const OrderCore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.OrderCore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderCore::IsInitialized() const {
  return true;
}

void OrderCore::Swap(OrderCore* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderCore::InternalSwap(OrderCore* other) {
  using std::swap;
  swap(price_, other->price_);
  swap(buyside_, other->buyside_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderCore::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Order::InitAsDefaultInstance() {
  ::fantasybit::_Order_default_instance_._instance.get_mutable()->core_ = const_cast< ::fantasybit::OrderCore*>(
      ::fantasybit::OrderCore::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Order::kRefnumFieldNumber;
const int Order::kCoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Order::Order()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsOrder();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.Order)
}
Order::Order(const Order& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_core()) {
    core_ = new ::fantasybit::OrderCore(*from.core_);
  } else {
    core_ = NULL;
  }
  refnum_ = from.refnum_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.Order)
}

void Order::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&core_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refnum_) -
      reinterpret_cast<char*>(&core_)) + sizeof(refnum_));
}

Order::~Order() {
  // @@protoc_insertion_point(destructor:fantasybit.Order)
  SharedDtor();
}

void Order::SharedDtor() {
  if (this != internal_default_instance()) delete core_;
}

void Order::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Order::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Order& Order::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsOrder();
  return *internal_default_instance();
}

Order* Order::New(::google::protobuf::Arena* arena) const {
  Order* n = new Order;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Order::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(core_ != NULL);
    core_->Clear();
  }
  refnum_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Order::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.Order)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 refnum = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_refnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.OrderCore core = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_core()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.Order)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.Order)
  return false;
#undef DO_
}

void Order::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 refnum = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->refnum(), output);
  }

  // optional .fantasybit.OrderCore core = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->core_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.Order)
}

::google::protobuf::uint8* Order::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.Order)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 refnum = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->refnum(), target);
  }

  // optional .fantasybit.OrderCore core = 20;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->core_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.Order)
  return target;
}

size_t Order::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.Order)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .fantasybit.OrderCore core = 20;
    if (has_core()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->core_);
    }

    // optional int32 refnum = 10;
    if (has_refnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->refnum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Order::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.Order)
  GOOGLE_DCHECK_NE(&from, this);
  const Order* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Order>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.Order)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.Order)
    MergeFrom(*source);
  }
}

void Order::MergeFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.Order)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_core()->::fantasybit::OrderCore::MergeFrom(from.core());
    }
    if (cached_has_bits & 0x00000002u) {
      refnum_ = from.refnum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Order::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Order::CopyFrom(const Order& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.Order)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Order::IsInitialized() const {
  return true;
}

void Order::Swap(Order* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Order::InternalSwap(Order* other) {
  using std::swap;
  swap(core_, other->core_);
  swap(refnum_, other->refnum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Order::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OrderFill::InitAsDefaultInstance() {
  ::fantasybit::_OrderFill_default_instance_._instance.get_mutable()->left_ = const_cast< ::fantasybit::Order*>(
      ::fantasybit::Order::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrderFill::kLeftFieldNumber;
const int OrderFill::kFillpriceFieldNumber;
const int OrderFill::kFillsizeFieldNumber;
const int OrderFill::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrderFill::OrderFill()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsOrderFill();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.OrderFill)
}
OrderFill::OrderFill(const OrderFill& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_left()) {
    left_ = new ::fantasybit::Order(*from.left_);
  } else {
    left_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&fillsize_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(fillsize_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.OrderFill)
}

void OrderFill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fillsize_) -
      reinterpret_cast<char*>(&left_)) + sizeof(fillsize_));
}

OrderFill::~OrderFill() {
  // @@protoc_insertion_point(destructor:fantasybit.OrderFill)
  SharedDtor();
}

void OrderFill::SharedDtor() {
  if (this != internal_default_instance()) delete left_;
}

void OrderFill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderFill::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrderFill& OrderFill::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsOrderFill();
  return *internal_default_instance();
}

OrderFill* OrderFill::New(::google::protobuf::Arena* arena) const {
  OrderFill* n = new OrderFill;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrderFill::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.OrderFill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(left_ != NULL);
    left_->Clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&timestamp_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&fillsize_) -
        reinterpret_cast<char*>(&timestamp_)) + sizeof(fillsize_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OrderFill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.OrderFill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.Order left = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fillprice = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_fillprice();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fillprice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 fillsize = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_fillsize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &fillsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 timestamp = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.OrderFill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.OrderFill)
  return false;
#undef DO_
}

void OrderFill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.OrderFill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.Order left = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->left_, output);
  }

  // optional int32 fillprice = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->fillprice(), output);
  }

  // optional int32 fillsize = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->fillsize(), output);
  }

  // optional int32 timestamp = 40;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->timestamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.OrderFill)
}

::google::protobuf::uint8* OrderFill::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.OrderFill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.Order left = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *this->left_, deterministic, target);
  }

  // optional int32 fillprice = 20;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->fillprice(), target);
  }

  // optional int32 fillsize = 30;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->fillsize(), target);
  }

  // optional int32 timestamp = 40;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->timestamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.OrderFill)
  return target;
}

size_t OrderFill::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.OrderFill)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .fantasybit.Order left = 10;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->left_);
    }

    // optional int32 timestamp = 40;
    if (has_timestamp()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->timestamp());
    }

    // optional int32 fillprice = 20;
    if (has_fillprice()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fillprice());
    }

    // optional int32 fillsize = 30;
    if (has_fillsize()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->fillsize());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderFill::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.OrderFill)
  GOOGLE_DCHECK_NE(&from, this);
  const OrderFill* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrderFill>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.OrderFill)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.OrderFill)
    MergeFrom(*source);
  }
}

void OrderFill::MergeFrom(const OrderFill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.OrderFill)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_left()->::fantasybit::Order::MergeFrom(from.left());
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000004u) {
      fillprice_ = from.fillprice_;
    }
    if (cached_has_bits & 0x00000008u) {
      fillsize_ = from.fillsize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void OrderFill::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.OrderFill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderFill::CopyFrom(const OrderFill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.OrderFill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderFill::IsInitialized() const {
  return true;
}

void OrderFill::Swap(OrderFill* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrderFill::InternalSwap(OrderFill* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(timestamp_, other->timestamp_);
  swap(fillprice_, other->fillprice_);
  swap(fillsize_, other->fillsize_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrderFill::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MarketTicker::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketTicker::kTypeFieldNumber;
const int MarketTicker::kSymbolFieldNumber;
const int MarketTicker::kSizeFieldNumber;
const int MarketTicker::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketTicker::MarketTicker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsMarketTicker();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.MarketTicker)
}
MarketTicker::MarketTicker(const MarketTicker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&size_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.MarketTicker)
}

void MarketTicker::SharedCtor() {
  _cached_size_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&size_)) + sizeof(price_));
  type_ = 1;
}

MarketTicker::~MarketTicker() {
  // @@protoc_insertion_point(destructor:fantasybit.MarketTicker)
  SharedDtor();
}

void MarketTicker::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MarketTicker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketTicker::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketTicker& MarketTicker::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsMarketTicker();
  return *internal_default_instance();
}

MarketTicker* MarketTicker::New(::google::protobuf::Arena* arena) const {
  MarketTicker* n = new MarketTicker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketTicker::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.MarketTicker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*symbol_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&price_) -
        reinterpret_cast<char*>(&size_)) + sizeof(price_));
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MarketTicker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.MarketTicker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.MarketTicker.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::MarketTicker_Type_IsValid(value)) {
            set_type(static_cast< ::fantasybit::MarketTicker_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.MarketTicker.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 size = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 price = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.MarketTicker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.MarketTicker)
  return false;
#undef DO_
}

void MarketTicker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.MarketTicker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.MarketTicker.Type type = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string symbol = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.MarketTicker.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // optional int32 size = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->size(), output);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.MarketTicker)
}

::google::protobuf::uint8* MarketTicker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.MarketTicker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.MarketTicker.Type type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string symbol = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.MarketTicker.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // optional int32 size = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->size(), target);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.MarketTicker)
  return target;
}

size_t MarketTicker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.MarketTicker)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string symbol = 2;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional int32 size = 20;
    if (has_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

    // optional int32 price = 30;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional .fantasybit.MarketTicker.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketTicker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.MarketTicker)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketTicker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketTicker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.MarketTicker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.MarketTicker)
    MergeFrom(*source);
  }
}

void MarketTicker::MergeFrom(const MarketTicker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.MarketTicker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MarketTicker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.MarketTicker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketTicker::CopyFrom(const MarketTicker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.MarketTicker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketTicker::IsInitialized() const {
  return true;
}

void MarketTicker::Swap(MarketTicker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketTicker::InternalSwap(MarketTicker* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_);
  swap(size_, other->size_);
  swap(price_, other->price_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketTicker::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TradeTic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TradeTic::kSymbolFieldNumber;
const int TradeTic::kSizeFieldNumber;
const int TradeTic::kPriceFieldNumber;
const int TradeTic::kIshighFieldNumber;
const int TradeTic::kIslowFieldNumber;
const int TradeTic::kChangeFieldNumber;
const int TradeTic::kTicFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TradeTic::TradeTic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsTradeTic();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.TradeTic)
}
TradeTic::TradeTic(const TradeTic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&tic_) -
    reinterpret_cast<char*>(&size_)) + sizeof(tic_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.TradeTic)
}

void TradeTic::SharedCtor() {
  _cached_size_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tic_) -
      reinterpret_cast<char*>(&size_)) + sizeof(tic_));
}

TradeTic::~TradeTic() {
  // @@protoc_insertion_point(destructor:fantasybit.TradeTic)
  SharedDtor();
}

void TradeTic::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TradeTic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TradeTic::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TradeTic& TradeTic::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsTradeTic();
  return *internal_default_instance();
}

TradeTic* TradeTic::New(::google::protobuf::Arena* arena) const {
  TradeTic* n = new TradeTic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TradeTic::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.TradeTic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*symbol_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 126u) {
    ::memset(&size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&tic_) -
        reinterpret_cast<char*>(&size_)) + sizeof(tic_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TradeTic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.TradeTic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string symbol = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TradeTic.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 size = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 price = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ishigh = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_ishigh();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ishigh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 islow = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          set_has_islow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &islow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 change = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_change();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tic = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {
          set_has_tic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.TradeTic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.TradeTic)
  return false;
#undef DO_
}

void TradeTic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.TradeTic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TradeTic.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->symbol(), output);
  }

  // optional int32 size = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->size(), output);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->price(), output);
  }

  // optional int32 ishigh = 40;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->ishigh(), output);
  }

  // optional int32 islow = 45;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(45, this->islow(), output);
  }

  // optional int32 change = 50;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->change(), output);
  }

  // optional int32 tic = 60;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(60, this->tic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.TradeTic)
}

::google::protobuf::uint8* TradeTic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.TradeTic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TradeTic.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->symbol(), target);
  }

  // optional int32 size = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->size(), target);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->price(), target);
  }

  // optional int32 ishigh = 40;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->ishigh(), target);
  }

  // optional int32 islow = 45;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(45, this->islow(), target);
  }

  // optional int32 change = 50;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->change(), target);
  }

  // optional int32 tic = 60;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(60, this->tic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.TradeTic)
  return target;
}

size_t TradeTic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.TradeTic)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string symbol = 2;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional int32 size = 20;
    if (has_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

    // optional int32 price = 30;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional int32 ishigh = 40;
    if (has_ishigh()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ishigh());
    }

    // optional int32 islow = 45;
    if (has_islow()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->islow());
    }

    // optional int32 change = 50;
    if (has_change()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change());
    }

    // optional int32 tic = 60;
    if (has_tic()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tic());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TradeTic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.TradeTic)
  GOOGLE_DCHECK_NE(&from, this);
  const TradeTic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TradeTic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.TradeTic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.TradeTic)
    MergeFrom(*source);
  }
}

void TradeTic::MergeFrom(const TradeTic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.TradeTic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000008u) {
      ishigh_ = from.ishigh_;
    }
    if (cached_has_bits & 0x00000010u) {
      islow_ = from.islow_;
    }
    if (cached_has_bits & 0x00000020u) {
      change_ = from.change_;
    }
    if (cached_has_bits & 0x00000040u) {
      tic_ = from.tic_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TradeTic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.TradeTic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TradeTic::CopyFrom(const TradeTic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.TradeTic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TradeTic::IsInitialized() const {
  return true;
}

void TradeTic::Swap(TradeTic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TradeTic::InternalSwap(TradeTic* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_);
  swap(size_, other->size_);
  swap(price_, other->price_);
  swap(ishigh_, other->ishigh_);
  swap(islow_, other->islow_);
  swap(change_, other->change_);
  swap(tic_, other->tic_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TradeTic::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DepthFeedDelta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DepthFeedDelta::kSymbolFieldNumber;
const int DepthFeedDelta::kIsbidFieldNumber;
const int DepthFeedDelta::kSizeFieldNumber;
const int DepthFeedDelta::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DepthFeedDelta::DepthFeedDelta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsDepthFeedDelta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.DepthFeedDelta)
}
DepthFeedDelta::DepthFeedDelta(const DepthFeedDelta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&price_, &from.price_,
    static_cast<size_t>(reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&price_)) + sizeof(size_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.DepthFeedDelta)
}

void DepthFeedDelta::SharedCtor() {
  _cached_size_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&price_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&price_)) + sizeof(size_));
}

DepthFeedDelta::~DepthFeedDelta() {
  // @@protoc_insertion_point(destructor:fantasybit.DepthFeedDelta)
  SharedDtor();
}

void DepthFeedDelta::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DepthFeedDelta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DepthFeedDelta::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DepthFeedDelta& DepthFeedDelta::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsDepthFeedDelta();
  return *internal_default_instance();
}

DepthFeedDelta* DepthFeedDelta::New(::google::protobuf::Arena* arena) const {
  DepthFeedDelta* n = new DepthFeedDelta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DepthFeedDelta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.DepthFeedDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*symbol_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&price_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&size_) -
        reinterpret_cast<char*>(&price_)) + sizeof(size_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DepthFeedDelta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.DepthFeedDelta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string symbol = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.DepthFeedDelta.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isbid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_isbid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isbid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 size = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 price = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.DepthFeedDelta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.DepthFeedDelta)
  return false;
#undef DO_
}

void DepthFeedDelta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.DepthFeedDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.DepthFeedDelta.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->symbol(), output);
  }

  // optional bool isbid = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->isbid(), output);
  }

  // optional int32 size = 20;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->size(), output);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.DepthFeedDelta)
}

::google::protobuf::uint8* DepthFeedDelta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.DepthFeedDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.DepthFeedDelta.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->symbol(), target);
  }

  // optional bool isbid = 10;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->isbid(), target);
  }

  // optional int32 size = 20;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->size(), target);
  }

  // optional int32 price = 30;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.DepthFeedDelta)
  return target;
}

size_t DepthFeedDelta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.DepthFeedDelta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string symbol = 1;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional int32 price = 30;
    if (has_price()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->price());
    }

    // optional bool isbid = 10;
    if (has_isbid()) {
      total_size += 1 + 1;
    }

    // optional int32 size = 20;
    if (has_size()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DepthFeedDelta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.DepthFeedDelta)
  GOOGLE_DCHECK_NE(&from, this);
  const DepthFeedDelta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DepthFeedDelta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.DepthFeedDelta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.DepthFeedDelta)
    MergeFrom(*source);
  }
}

void DepthFeedDelta::MergeFrom(const DepthFeedDelta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.DepthFeedDelta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000002u) {
      price_ = from.price_;
    }
    if (cached_has_bits & 0x00000004u) {
      isbid_ = from.isbid_;
    }
    if (cached_has_bits & 0x00000008u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DepthFeedDelta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.DepthFeedDelta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DepthFeedDelta::CopyFrom(const DepthFeedDelta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.DepthFeedDelta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DepthFeedDelta::IsInitialized() const {
  return true;
}

void DepthFeedDelta::Swap(DepthFeedDelta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DepthFeedDelta::InternalSwap(DepthFeedDelta* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_);
  swap(price_, other->price_);
  swap(isbid_, other->isbid_);
  swap(size_, other->size_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DepthFeedDelta::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContractOHLC::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContractOHLC::kSymbolFieldNumber;
const int ContractOHLC::kOpenFieldNumber;
const int ContractOHLC::kHighFieldNumber;
const int ContractOHLC::kLowFieldNumber;
const int ContractOHLC::kCloseFieldNumber;
const int ContractOHLC::kVolumeFieldNumber;
const int ContractOHLC::kChangeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContractOHLC::ContractOHLC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsContractOHLC();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.ContractOHLC)
}
ContractOHLC::ContractOHLC(const ContractOHLC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&open_, &from.open_,
    static_cast<size_t>(reinterpret_cast<char*>(&change_) -
    reinterpret_cast<char*>(&open_)) + sizeof(change_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.ContractOHLC)
}

void ContractOHLC::SharedCtor() {
  _cached_size_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&open_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&change_) -
      reinterpret_cast<char*>(&open_)) + sizeof(change_));
}

ContractOHLC::~ContractOHLC() {
  // @@protoc_insertion_point(destructor:fantasybit.ContractOHLC)
  SharedDtor();
}

void ContractOHLC::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContractOHLC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ContractOHLC::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContractOHLC& ContractOHLC::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsContractOHLC();
  return *internal_default_instance();
}

ContractOHLC* ContractOHLC::New(::google::protobuf::Arena* arena) const {
  ContractOHLC* n = new ContractOHLC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ContractOHLC::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.ContractOHLC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*symbol_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 126u) {
    ::memset(&open_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&change_) -
        reinterpret_cast<char*>(&open_)) + sizeof(change_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ContractOHLC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.ContractOHLC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string symbol = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.ContractOHLC.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 open = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_open();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 high = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_high();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &high_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 low = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_low();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &low_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 close = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_close();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &close_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 volume = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {
          set_has_volume();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &volume_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 change = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 560 & 0xFF */)) {
          set_has_change();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &change_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.ContractOHLC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.ContractOHLC)
  return false;
#undef DO_
}

void ContractOHLC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.ContractOHLC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ContractOHLC.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->symbol(), output);
  }

  // optional int32 open = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->open(), output);
  }

  // optional int32 high = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->high(), output);
  }

  // optional int32 low = 40;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->low(), output);
  }

  // optional int32 close = 50;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->close(), output);
  }

  // optional int32 volume = 60;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(60, this->volume(), output);
  }

  // optional int32 change = 70;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(70, this->change(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.ContractOHLC)
}

::google::protobuf::uint8* ContractOHLC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.ContractOHLC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.ContractOHLC.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->symbol(), target);
  }

  // optional int32 open = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->open(), target);
  }

  // optional int32 high = 30;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->high(), target);
  }

  // optional int32 low = 40;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->low(), target);
  }

  // optional int32 close = 50;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->close(), target);
  }

  // optional int32 volume = 60;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(60, this->volume(), target);
  }

  // optional int32 change = 70;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(70, this->change(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.ContractOHLC)
  return target;
}

size_t ContractOHLC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.ContractOHLC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string symbol = 10;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional int32 open = 20;
    if (has_open()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->open());
    }

    // optional int32 high = 30;
    if (has_high()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->high());
    }

    // optional int32 low = 40;
    if (has_low()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->low());
    }

    // optional int32 close = 50;
    if (has_close()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->close());
    }

    // optional int32 volume = 60;
    if (has_volume()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->volume());
    }

    // optional int32 change = 70;
    if (has_change()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->change());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ContractOHLC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.ContractOHLC)
  GOOGLE_DCHECK_NE(&from, this);
  const ContractOHLC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContractOHLC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.ContractOHLC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.ContractOHLC)
    MergeFrom(*source);
  }
}

void ContractOHLC::MergeFrom(const ContractOHLC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.ContractOHLC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000002u) {
      open_ = from.open_;
    }
    if (cached_has_bits & 0x00000004u) {
      high_ = from.high_;
    }
    if (cached_has_bits & 0x00000008u) {
      low_ = from.low_;
    }
    if (cached_has_bits & 0x00000010u) {
      close_ = from.close_;
    }
    if (cached_has_bits & 0x00000020u) {
      volume_ = from.volume_;
    }
    if (cached_has_bits & 0x00000040u) {
      change_ = from.change_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ContractOHLC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.ContractOHLC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContractOHLC::CopyFrom(const ContractOHLC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.ContractOHLC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContractOHLC::IsInitialized() const {
  return true;
}

void ContractOHLC::Swap(ContractOHLC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContractOHLC::InternalSwap(ContractOHLC* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_);
  swap(open_, other->open_);
  swap(high_, other->high_);
  swap(low_, other->low_);
  swap(close_, other->close_);
  swap(volume_, other->volume_);
  swap(change_, other->change_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ContractOHLC::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DepthItem::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DepthItem::kLevelFieldNumber;
const int DepthItem::kBFieldNumber;
const int DepthItem::kAFieldNumber;
const int DepthItem::kBsFieldNumber;
const int DepthItem::kAsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DepthItem::DepthItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsDepthItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.DepthItem)
}
DepthItem::DepthItem(const DepthItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&as_, &from.as_,
    static_cast<size_t>(reinterpret_cast<char*>(&bs_) -
    reinterpret_cast<char*>(&as_)) + sizeof(bs_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.DepthItem)
}

void DepthItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&as_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bs_) -
      reinterpret_cast<char*>(&as_)) + sizeof(bs_));
}

DepthItem::~DepthItem() {
  // @@protoc_insertion_point(destructor:fantasybit.DepthItem)
  SharedDtor();
}

void DepthItem::SharedDtor() {
}

void DepthItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DepthItem::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DepthItem& DepthItem::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsDepthItem();
  return *internal_default_instance();
}

DepthItem* DepthItem::New(::google::protobuf::Arena* arena) const {
  DepthItem* n = new DepthItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DepthItem::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.DepthItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    ::memset(&as_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&bs_) -
        reinterpret_cast<char*>(&as_)) + sizeof(bs_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DepthItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.DepthItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 level = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 b = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 a = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 bs = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_bs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 as = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {
          set_has_as();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &as_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.DepthItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.DepthItem)
  return false;
#undef DO_
}

void DepthItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.DepthItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 level = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->level(), output);
  }

  // optional int32 b = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->b(), output);
  }

  // optional int32 a = 40;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->a(), output);
  }

  // optional int32 bs = 50;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->bs(), output);
  }

  // optional int32 as = 60;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(60, this->as(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.DepthItem)
}

::google::protobuf::uint8* DepthItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.DepthItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 level = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->level(), target);
  }

  // optional int32 b = 30;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->b(), target);
  }

  // optional int32 a = 40;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->a(), target);
  }

  // optional int32 bs = 50;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->bs(), target);
  }

  // optional int32 as = 60;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(60, this->as(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.DepthItem)
  return target;
}

size_t DepthItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.DepthItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 as = 60;
    if (has_as()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->as());
    }

    // optional int32 level = 10;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // optional int32 b = 30;
    if (has_b()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

    // optional int32 a = 40;
    if (has_a()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional int32 bs = 50;
    if (has_bs()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bs());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DepthItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.DepthItem)
  GOOGLE_DCHECK_NE(&from, this);
  const DepthItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DepthItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.DepthItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.DepthItem)
    MergeFrom(*source);
  }
}

void DepthItem::MergeFrom(const DepthItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.DepthItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      as_ = from.as_;
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    if (cached_has_bits & 0x00000004u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000008u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000010u) {
      bs_ = from.bs_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DepthItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.DepthItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DepthItem::CopyFrom(const DepthItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.DepthItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DepthItem::IsInitialized() const {
  return true;
}

void DepthItem::Swap(DepthItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DepthItem::InternalSwap(DepthItem* other) {
  using std::swap;
  swap(as_, other->as_);
  swap(level_, other->level_);
  swap(b_, other->b_);
  swap(a_, other->a_);
  swap(bs_, other->bs_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DepthItem::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BookDelta::InitAsDefaultInstance() {
  ::fantasybit::_BookDelta_default_instance_._instance.get_mutable()->newnew_ = const_cast< ::fantasybit::OrderCore*>(
      ::fantasybit::OrderCore::internal_default_instance());
  ::fantasybit::_BookDelta_default_instance_._instance.get_mutable()->ohlc_ = const_cast< ::fantasybit::ContractOHLC*>(
      ::fantasybit::ContractOHLC::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BookDelta::kFantasyNameFieldNumber;
const int BookDelta::kSeqnumFieldNumber;
const int BookDelta::kPlayeridFieldNumber;
const int BookDelta::kNewnewFieldNumber;
const int BookDelta::kOhlcFieldNumber;
const int BookDelta::kRemovesFieldNumber;
const int BookDelta::kLevel2TicFieldNumber;
const int BookDelta::kLevel1TicFieldNumber;
const int BookDelta::kBlocknumFieldNumber;
const int BookDelta::kSymbolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BookDelta::BookDelta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsBookDelta();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.BookDelta)
}
BookDelta::BookDelta(const BookDelta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      removes_(from.removes_),
      level2tic_(from.level2tic_),
      level1tic_(from.level1tic_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fantasy_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fantasy_name()) {
    fantasy_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasy_name_);
  }
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_playerid()) {
    playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.has_newnew()) {
    newnew_ = new ::fantasybit::OrderCore(*from.newnew_);
  } else {
    newnew_ = NULL;
  }
  if (from.has_ohlc()) {
    ohlc_ = new ::fantasybit::ContractOHLC(*from.ohlc_);
  } else {
    ohlc_ = NULL;
  }
  ::memcpy(&seqnum_, &from.seqnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&blocknum_) -
    reinterpret_cast<char*>(&seqnum_)) + sizeof(blocknum_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.BookDelta)
}

void BookDelta::SharedCtor() {
  _cached_size_ = 0;
  fantasy_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&newnew_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blocknum_) -
      reinterpret_cast<char*>(&newnew_)) + sizeof(blocknum_));
}

BookDelta::~BookDelta() {
  // @@protoc_insertion_point(destructor:fantasybit.BookDelta)
  SharedDtor();
}

void BookDelta::SharedDtor() {
  fantasy_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete newnew_;
  if (this != internal_default_instance()) delete ohlc_;
}

void BookDelta::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BookDelta::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BookDelta& BookDelta::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsBookDelta();
  return *internal_default_instance();
}

BookDelta* BookDelta::New(::google::protobuf::Arena* arena) const {
  BookDelta* n = new BookDelta;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BookDelta::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.BookDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  removes_.Clear();
  level2tic_.Clear();
  level1tic_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!fantasy_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fantasy_name_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!playerid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*playerid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*symbol_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(newnew_ != NULL);
      newnew_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(ohlc_ != NULL);
      ohlc_->Clear();
    }
  }
  if (cached_has_bits & 96u) {
    ::memset(&seqnum_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&blocknum_) -
        reinterpret_cast<char*>(&seqnum_)) + sizeof(blocknum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BookDelta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.BookDelta)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string fantasy_name = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fantasy_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fantasy_name().data(), static_cast<int>(this->fantasy_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.BookDelta.fantasy_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 seqnum = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_seqnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seqnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string playerid = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_playerid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->playerid().data(), static_cast<int>(this->playerid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.BookDelta.playerid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.OrderCore newnew = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_newnew()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.ContractOHLC ohlc = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ohlc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.Order removes = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_removes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.MarketTicker level2tic = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_level2tic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.MarketTicker level1tic = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_level1tic()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 blocknum = 80;
      case 80: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 640 & 0xFF */)) {
          set_has_blocknum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blocknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string symbol = 90;
      case 90: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.BookDelta.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.BookDelta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.BookDelta)
  return false;
#undef DO_
}

void BookDelta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.BookDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fantasy_name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fantasy_name().data(), static_cast<int>(this->fantasy_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookDelta.fantasy_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->fantasy_name(), output);
  }

  // optional int32 seqnum = 20;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->seqnum(), output);
  }

  // optional string playerid = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookDelta.playerid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      30, this->playerid(), output);
  }

  // optional .fantasybit.OrderCore newnew = 40;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->newnew_, output);
  }

  // optional .fantasybit.ContractOHLC ohlc = 41;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, *this->ohlc_, output);
  }

  // repeated .fantasybit.Order removes = 50;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->removes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->removes(static_cast<int>(i)), output);
  }

  // repeated .fantasybit.MarketTicker level2tic = 60;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->level2tic_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60, this->level2tic(static_cast<int>(i)), output);
  }

  // repeated .fantasybit.MarketTicker level1tic = 70;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->level1tic_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, this->level1tic(static_cast<int>(i)), output);
  }

  // optional int32 blocknum = 80;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(80, this->blocknum(), output);
  }

  // optional string symbol = 90;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookDelta.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      90, this->symbol(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.BookDelta)
}

::google::protobuf::uint8* BookDelta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.BookDelta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string fantasy_name = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fantasy_name().data(), static_cast<int>(this->fantasy_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookDelta.fantasy_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->fantasy_name(), target);
  }

  // optional int32 seqnum = 20;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->seqnum(), target);
  }

  // optional string playerid = 30;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->playerid().data(), static_cast<int>(this->playerid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookDelta.playerid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        30, this->playerid(), target);
  }

  // optional .fantasybit.OrderCore newnew = 40;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, *this->newnew_, deterministic, target);
  }

  // optional .fantasybit.ContractOHLC ohlc = 41;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, *this->ohlc_, deterministic, target);
  }

  // repeated .fantasybit.Order removes = 50;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->removes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50, this->removes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .fantasybit.MarketTicker level2tic = 60;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->level2tic_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60, this->level2tic(static_cast<int>(i)), deterministic, target);
  }

  // repeated .fantasybit.MarketTicker level1tic = 70;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->level1tic_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        70, this->level1tic(static_cast<int>(i)), deterministic, target);
  }

  // optional int32 blocknum = 80;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(80, this->blocknum(), target);
  }

  // optional string symbol = 90;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.BookDelta.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        90, this->symbol(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.BookDelta)
  return target;
}

size_t BookDelta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.BookDelta)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.Order removes = 50;
  {
    unsigned int count = static_cast<unsigned int>(this->removes_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->removes(static_cast<int>(i)));
    }
  }

  // repeated .fantasybit.MarketTicker level2tic = 60;
  {
    unsigned int count = static_cast<unsigned int>(this->level2tic_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->level2tic(static_cast<int>(i)));
    }
  }

  // repeated .fantasybit.MarketTicker level1tic = 70;
  {
    unsigned int count = static_cast<unsigned int>(this->level1tic_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->level1tic(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 127u) {
    // optional string fantasy_name = 10;
    if (has_fantasy_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fantasy_name());
    }

    // optional string playerid = 30;
    if (has_playerid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->playerid());
    }

    // optional string symbol = 90;
    if (has_symbol()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional .fantasybit.OrderCore newnew = 40;
    if (has_newnew()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->newnew_);
    }

    // optional .fantasybit.ContractOHLC ohlc = 41;
    if (has_ohlc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->ohlc_);
    }

    // optional int32 seqnum = 20;
    if (has_seqnum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->seqnum());
    }

    // optional int32 blocknum = 80;
    if (has_blocknum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blocknum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BookDelta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.BookDelta)
  GOOGLE_DCHECK_NE(&from, this);
  const BookDelta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BookDelta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.BookDelta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.BookDelta)
    MergeFrom(*source);
  }
}

void BookDelta::MergeFrom(const BookDelta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.BookDelta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  removes_.MergeFrom(from.removes_);
  level2tic_.MergeFrom(from.level2tic_);
  level1tic_.MergeFrom(from.level1tic_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_fantasy_name();
      fantasy_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fantasy_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_playerid();
      playerid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playerid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_newnew()->::fantasybit::OrderCore::MergeFrom(from.newnew());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_ohlc()->::fantasybit::ContractOHLC::MergeFrom(from.ohlc());
    }
    if (cached_has_bits & 0x00000020u) {
      seqnum_ = from.seqnum_;
    }
    if (cached_has_bits & 0x00000040u) {
      blocknum_ = from.blocknum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BookDelta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.BookDelta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BookDelta::CopyFrom(const BookDelta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.BookDelta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BookDelta::IsInitialized() const {
  return true;
}

void BookDelta::Swap(BookDelta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BookDelta::InternalSwap(BookDelta* other) {
  using std::swap;
  removes_.InternalSwap(&other->removes_);
  level2tic_.InternalSwap(&other->level2tic_);
  level1tic_.InternalSwap(&other->level1tic_);
  fantasy_name_.Swap(&other->fantasy_name_);
  playerid_.Swap(&other->playerid_);
  symbol_.Swap(&other->symbol_);
  swap(newnew_, other->newnew_);
  swap(ohlc_, other->ohlc_);
  swap(seqnum_, other->seqnum_);
  swap(blocknum_, other->blocknum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BookDelta::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MarketQuote::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketQuote::kBsFieldNumber;
const int MarketQuote::kBFieldNumber;
const int MarketQuote::kAFieldNumber;
const int MarketQuote::kAsFieldNumber;
const int MarketQuote::kLFieldNumber;
const int MarketQuote::kLsFieldNumber;
const int MarketQuote::kUdnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketQuote::MarketQuote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsMarketQuote();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.MarketQuote)
}
MarketQuote::MarketQuote(const MarketQuote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&udn_, &from.udn_,
    static_cast<size_t>(reinterpret_cast<char*>(&ls_) -
    reinterpret_cast<char*>(&udn_)) + sizeof(ls_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.MarketQuote)
}

void MarketQuote::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&udn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ls_) -
      reinterpret_cast<char*>(&udn_)) + sizeof(ls_));
}

MarketQuote::~MarketQuote() {
  // @@protoc_insertion_point(destructor:fantasybit.MarketQuote)
  SharedDtor();
}

void MarketQuote::SharedDtor() {
}

void MarketQuote::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketQuote::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketQuote& MarketQuote::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsMarketQuote();
  return *internal_default_instance();
}

MarketQuote* MarketQuote::New(::google::protobuf::Arena* arena) const {
  MarketQuote* n = new MarketQuote;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketQuote::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.MarketQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 127u) {
    ::memset(&udn_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ls_) -
        reinterpret_cast<char*>(&udn_)) + sizeof(ls_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MarketQuote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.MarketQuote)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bs = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_bs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 b = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_b();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &b_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 a = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_a();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &a_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 as = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_as();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &as_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 l = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 400 & 0xFF */)) {
          set_has_l();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &l_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ls = 60;
      case 60: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 480 & 0xFF */)) {
          set_has_ls();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 udn = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 560 & 0xFF */)) {
          set_has_udn();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &udn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.MarketQuote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.MarketQuote)
  return false;
#undef DO_
}

void MarketQuote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.MarketQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bs = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->bs(), output);
  }

  // optional int32 b = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->b(), output);
  }

  // optional int32 a = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->a(), output);
  }

  // optional int32 as = 40;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->as(), output);
  }

  // optional int32 l = 50;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(50, this->l(), output);
  }

  // optional int32 ls = 60;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(60, this->ls(), output);
  }

  // optional int32 udn = 70;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(70, this->udn(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.MarketQuote)
}

::google::protobuf::uint8* MarketQuote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.MarketQuote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 bs = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->bs(), target);
  }

  // optional int32 b = 20;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->b(), target);
  }

  // optional int32 a = 30;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->a(), target);
  }

  // optional int32 as = 40;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->as(), target);
  }

  // optional int32 l = 50;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(50, this->l(), target);
  }

  // optional int32 ls = 60;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(60, this->ls(), target);
  }

  // optional int32 udn = 70;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(70, this->udn(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.MarketQuote)
  return target;
}

size_t MarketQuote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.MarketQuote)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional int32 udn = 70;
    if (has_udn()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->udn());
    }

    // optional int32 bs = 10;
    if (has_bs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bs());
    }

    // optional int32 b = 20;
    if (has_b()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->b());
    }

    // optional int32 a = 30;
    if (has_a()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->a());
    }

    // optional int32 as = 40;
    if (has_as()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->as());
    }

    // optional int32 l = 50;
    if (has_l()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->l());
    }

    // optional int32 ls = 60;
    if (has_ls()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ls());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketQuote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.MarketQuote)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketQuote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketQuote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.MarketQuote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.MarketQuote)
    MergeFrom(*source);
  }
}

void MarketQuote::MergeFrom(const MarketQuote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.MarketQuote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      udn_ = from.udn_;
    }
    if (cached_has_bits & 0x00000002u) {
      bs_ = from.bs_;
    }
    if (cached_has_bits & 0x00000004u) {
      b_ = from.b_;
    }
    if (cached_has_bits & 0x00000008u) {
      a_ = from.a_;
    }
    if (cached_has_bits & 0x00000010u) {
      as_ = from.as_;
    }
    if (cached_has_bits & 0x00000020u) {
      l_ = from.l_;
    }
    if (cached_has_bits & 0x00000040u) {
      ls_ = from.ls_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MarketQuote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.MarketQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketQuote::CopyFrom(const MarketQuote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.MarketQuote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketQuote::IsInitialized() const {
  return true;
}

void MarketQuote::Swap(MarketQuote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketQuote::InternalSwap(MarketQuote* other) {
  using std::swap;
  swap(udn_, other->udn_);
  swap(bs_, other->bs_);
  swap(b_, other->b_);
  swap(a_, other->a_);
  swap(as_, other->as_);
  swap(l_, other->l_);
  swap(ls_, other->ls_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketQuote::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MarketSnapshot::InitAsDefaultInstance() {
  ::fantasybit::_MarketSnapshot_default_instance_._instance.get_mutable()->ohlc_ = const_cast< ::fantasybit::ContractOHLC*>(
      ::fantasybit::ContractOHLC::internal_default_instance());
  ::fantasybit::_MarketSnapshot_default_instance_._instance.get_mutable()->quote_ = const_cast< ::fantasybit::MarketQuote*>(
      ::fantasybit::MarketQuote::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MarketSnapshot::kSymbolFieldNumber;
const int MarketSnapshot::kWeekFieldNumber;
const int MarketSnapshot::kDepthFieldNumber;
const int MarketSnapshot::kOhlcFieldNumber;
const int MarketSnapshot::kQuoteFieldNumber;
const int MarketSnapshot::kBlocknumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MarketSnapshot::MarketSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsMarketSnapshot();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.MarketSnapshot)
}
MarketSnapshot::MarketSnapshot(const MarketSnapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      depth_(from.depth_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.has_ohlc()) {
    ohlc_ = new ::fantasybit::ContractOHLC(*from.ohlc_);
  } else {
    ohlc_ = NULL;
  }
  if (from.has_quote()) {
    quote_ = new ::fantasybit::MarketQuote(*from.quote_);
  } else {
    quote_ = NULL;
  }
  ::memcpy(&week_, &from.week_,
    static_cast<size_t>(reinterpret_cast<char*>(&blocknum_) -
    reinterpret_cast<char*>(&week_)) + sizeof(blocknum_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.MarketSnapshot)
}

void MarketSnapshot::SharedCtor() {
  _cached_size_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ohlc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blocknum_) -
      reinterpret_cast<char*>(&ohlc_)) + sizeof(blocknum_));
}

MarketSnapshot::~MarketSnapshot() {
  // @@protoc_insertion_point(destructor:fantasybit.MarketSnapshot)
  SharedDtor();
}

void MarketSnapshot::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ohlc_;
  if (this != internal_default_instance()) delete quote_;
}

void MarketSnapshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MarketSnapshot::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MarketSnapshot& MarketSnapshot::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsMarketSnapshot();
  return *internal_default_instance();
}

MarketSnapshot* MarketSnapshot::New(::google::protobuf::Arena* arena) const {
  MarketSnapshot* n = new MarketSnapshot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MarketSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.MarketSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  depth_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*symbol_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ohlc_ != NULL);
      ohlc_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(quote_ != NULL);
      quote_->Clear();
    }
  }
  if (cached_has_bits & 24u) {
    ::memset(&week_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&blocknum_) -
        reinterpret_cast<char*>(&week_)) + sizeof(blocknum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MarketSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.MarketSnapshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string symbol = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.MarketSnapshot.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 week = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.ContractOHLC ohlc = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ohlc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.MarketQuote quote = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quote()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 blocknum = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 320 & 0xFF */)) {
          set_has_blocknum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &blocknum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .fantasybit.DepthItem depth = 70;
      case 70: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_depth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.MarketSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.MarketSnapshot)
  return false;
#undef DO_
}

void MarketSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.MarketSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.MarketSnapshot.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->symbol(), output);
  }

  // optional int32 week = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->week(), output);
  }

  // optional .fantasybit.ContractOHLC ohlc = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->ohlc_, output);
  }

  // optional .fantasybit.MarketQuote quote = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, *this->quote_, output);
  }

  // optional int32 blocknum = 40;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(40, this->blocknum(), output);
  }

  // repeated .fantasybit.DepthItem depth = 70;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->depth_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      70, this->depth(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.MarketSnapshot)
}

::google::protobuf::uint8* MarketSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.MarketSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string symbol = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.MarketSnapshot.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->symbol(), target);
  }

  // optional int32 week = 11;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->week(), target);
  }

  // optional .fantasybit.ContractOHLC ohlc = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, *this->ohlc_, deterministic, target);
  }

  // optional .fantasybit.MarketQuote quote = 30;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        30, *this->quote_, deterministic, target);
  }

  // optional int32 blocknum = 40;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(40, this->blocknum(), target);
  }

  // repeated .fantasybit.DepthItem depth = 70;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->depth_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        70, this->depth(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.MarketSnapshot)
  return target;
}

size_t MarketSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.MarketSnapshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .fantasybit.DepthItem depth = 70;
  {
    unsigned int count = static_cast<unsigned int>(this->depth_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->depth(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string symbol = 10;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional .fantasybit.ContractOHLC ohlc = 20;
    if (has_ohlc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->ohlc_);
    }

    // optional .fantasybit.MarketQuote quote = 30;
    if (has_quote()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->quote_);
    }

    // optional int32 week = 11;
    if (has_week()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->week());
    }

    // optional int32 blocknum = 40;
    if (has_blocknum()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->blocknum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MarketSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.MarketSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const MarketSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MarketSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.MarketSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.MarketSnapshot)
    MergeFrom(*source);
  }
}

void MarketSnapshot::MergeFrom(const MarketSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.MarketSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  depth_.MergeFrom(from.depth_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_ohlc()->::fantasybit::ContractOHLC::MergeFrom(from.ohlc());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_quote()->::fantasybit::MarketQuote::MergeFrom(from.quote());
    }
    if (cached_has_bits & 0x00000008u) {
      week_ = from.week_;
    }
    if (cached_has_bits & 0x00000010u) {
      blocknum_ = from.blocknum_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MarketSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.MarketSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MarketSnapshot::CopyFrom(const MarketSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.MarketSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MarketSnapshot::IsInitialized() const {
  return true;
}

void MarketSnapshot::Swap(MarketSnapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MarketSnapshot::InternalSwap(MarketSnapshot* other) {
  using std::swap;
  depth_.InternalSwap(&other->depth_);
  symbol_.Swap(&other->symbol_);
  swap(ohlc_, other->ohlc_);
  swap(quote_, other->quote_);
  swap(week_, other->week_);
  swap(blocknum_, other->blocknum_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MarketSnapshot::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FutContract::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FutContract::kTypeFieldNumber;
const int FutContract::kSeasonFieldNumber;
const int FutContract::kWeekFieldNumber;
const int FutContract::kSymbolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FutContract::FutContract()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ExData_2eproto::InitDefaultsFutContract();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.FutContract)
}
FutContract::FutContract(const FutContract& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  ::memcpy(&season_, &from.season_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&season_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.FutContract)
}

void FutContract::SharedCtor() {
  _cached_size_ = 0;
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&season_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&week_) -
      reinterpret_cast<char*>(&season_)) + sizeof(week_));
  type_ = 1;
}

FutContract::~FutContract() {
  // @@protoc_insertion_point(destructor:fantasybit.FutContract)
  SharedDtor();
}

void FutContract::SharedDtor() {
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FutContract::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FutContract::descriptor() {
  ::protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FutContract& FutContract::default_instance() {
  ::protobuf_ExData_2eproto::InitDefaultsFutContract();
  return *internal_default_instance();
}

FutContract* FutContract::New(::google::protobuf::Arena* arena) const {
  FutContract* n = new FutContract;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FutContract::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.FutContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*symbol_.UnsafeRawStringPointer())->clear();
  }
  if (cached_has_bits & 14u) {
    ::memset(&season_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&week_) -
        reinterpret_cast<char*>(&season_)) + sizeof(week_));
    type_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FutContract::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.FutContract)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.FutContract.Type type = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::FutContract_Type_IsValid(value)) {
            set_type(static_cast< ::fantasybit::FutContract_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 season = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_season();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &season_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 week = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string symbol = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.FutContract.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.FutContract)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.FutContract)
  return false;
#undef DO_
}

void FutContract::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.FutContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.FutContract.Type type = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->type(), output);
  }

  // optional int32 season = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(20, this->season(), output);
  }

  // optional int32 week = 30;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(30, this->week(), output);
  }

  // optional string symbol = 40;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.FutContract.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      40, this->symbol(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.FutContract)
}

::google::protobuf::uint8* FutContract::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.FutContract)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.FutContract.Type type = 10;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->type(), target);
  }

  // optional int32 season = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(20, this->season(), target);
  }

  // optional int32 week = 30;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(30, this->week(), target);
  }

  // optional string symbol = 40;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.FutContract.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        40, this->symbol(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.FutContract)
  return target;
}

size_t FutContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.FutContract)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string symbol = 40;
    if (has_symbol()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional int32 season = 20;
    if (has_season()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->season());
    }

    // optional int32 week = 30;
    if (has_week()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->week());
    }

    // optional .fantasybit.FutContract.Type type = 10;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FutContract::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.FutContract)
  GOOGLE_DCHECK_NE(&from, this);
  const FutContract* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FutContract>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.FutContract)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.FutContract)
    MergeFrom(*source);
  }
}

void FutContract::MergeFrom(const FutContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.FutContract)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000002u) {
      season_ = from.season_;
    }
    if (cached_has_bits & 0x00000004u) {
      week_ = from.week_;
    }
    if (cached_has_bits & 0x00000008u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FutContract::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.FutContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FutContract::CopyFrom(const FutContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.FutContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FutContract::IsInitialized() const {
  return true;
}

void FutContract::Swap(FutContract* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FutContract::InternalSwap(FutContract* other) {
  using std::swap;
  symbol_.Swap(&other->symbol_);
  swap(season_, other->season_);
  swap(week_, other->week_);
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FutContract::GetMetadata() const {
  protobuf_ExData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ExData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fantasybit

// @@protoc_insertion_point(global_scope)

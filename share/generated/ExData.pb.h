// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ExData.proto

#ifndef PROTOBUF_ExData_2eproto__INCLUDED
#define PROTOBUF_ExData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_ExData_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[16];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSettlePosImpl();
void InitDefaultsSettlePos();
void InitDefaultsStorePosImpl();
void InitDefaultsStorePos();
void InitDefaultsBookPosImpl();
void InitDefaultsBookPos();
void InitDefaultsGameSettlePosImpl();
void InitDefaultsGameSettlePos();
void InitDefaultsOrderCoreImpl();
void InitDefaultsOrderCore();
void InitDefaultsOrderImpl();
void InitDefaultsOrder();
void InitDefaultsOrderFillImpl();
void InitDefaultsOrderFill();
void InitDefaultsMarketTickerImpl();
void InitDefaultsMarketTicker();
void InitDefaultsTradeTicImpl();
void InitDefaultsTradeTic();
void InitDefaultsDepthFeedDeltaImpl();
void InitDefaultsDepthFeedDelta();
void InitDefaultsContractOHLCImpl();
void InitDefaultsContractOHLC();
void InitDefaultsDepthItemImpl();
void InitDefaultsDepthItem();
void InitDefaultsBookDeltaImpl();
void InitDefaultsBookDelta();
void InitDefaultsMarketQuoteImpl();
void InitDefaultsMarketQuote();
void InitDefaultsMarketSnapshotImpl();
void InitDefaultsMarketSnapshot();
void InitDefaultsFutContractImpl();
void InitDefaultsFutContract();
inline void InitDefaults() {
  InitDefaultsSettlePos();
  InitDefaultsStorePos();
  InitDefaultsBookPos();
  InitDefaultsGameSettlePos();
  InitDefaultsOrderCore();
  InitDefaultsOrder();
  InitDefaultsOrderFill();
  InitDefaultsMarketTicker();
  InitDefaultsTradeTic();
  InitDefaultsDepthFeedDelta();
  InitDefaultsContractOHLC();
  InitDefaultsDepthItem();
  InitDefaultsBookDelta();
  InitDefaultsMarketQuote();
  InitDefaultsMarketSnapshot();
  InitDefaultsFutContract();
}
}  // namespace protobuf_ExData_2eproto
namespace fantasybit {
class BookDelta;
class BookDeltaDefaultTypeInternal;
extern BookDeltaDefaultTypeInternal _BookDelta_default_instance_;
class BookPos;
class BookPosDefaultTypeInternal;
extern BookPosDefaultTypeInternal _BookPos_default_instance_;
class ContractOHLC;
class ContractOHLCDefaultTypeInternal;
extern ContractOHLCDefaultTypeInternal _ContractOHLC_default_instance_;
class DepthFeedDelta;
class DepthFeedDeltaDefaultTypeInternal;
extern DepthFeedDeltaDefaultTypeInternal _DepthFeedDelta_default_instance_;
class DepthItem;
class DepthItemDefaultTypeInternal;
extern DepthItemDefaultTypeInternal _DepthItem_default_instance_;
class FutContract;
class FutContractDefaultTypeInternal;
extern FutContractDefaultTypeInternal _FutContract_default_instance_;
class GameSettlePos;
class GameSettlePosDefaultTypeInternal;
extern GameSettlePosDefaultTypeInternal _GameSettlePos_default_instance_;
class MarketQuote;
class MarketQuoteDefaultTypeInternal;
extern MarketQuoteDefaultTypeInternal _MarketQuote_default_instance_;
class MarketSnapshot;
class MarketSnapshotDefaultTypeInternal;
extern MarketSnapshotDefaultTypeInternal _MarketSnapshot_default_instance_;
class MarketTicker;
class MarketTickerDefaultTypeInternal;
extern MarketTickerDefaultTypeInternal _MarketTicker_default_instance_;
class Order;
class OrderDefaultTypeInternal;
extern OrderDefaultTypeInternal _Order_default_instance_;
class OrderCore;
class OrderCoreDefaultTypeInternal;
extern OrderCoreDefaultTypeInternal _OrderCore_default_instance_;
class OrderFill;
class OrderFillDefaultTypeInternal;
extern OrderFillDefaultTypeInternal _OrderFill_default_instance_;
class SettlePos;
class SettlePosDefaultTypeInternal;
extern SettlePosDefaultTypeInternal _SettlePos_default_instance_;
class StorePos;
class StorePosDefaultTypeInternal;
extern StorePosDefaultTypeInternal _StorePos_default_instance_;
class TradeTic;
class TradeTicDefaultTypeInternal;
extern TradeTicDefaultTypeInternal _TradeTic_default_instance_;
}  // namespace fantasybit
namespace fantasybit {

enum MarketTicker_Type {
  MarketTicker_Type_BID = 1,
  MarketTicker_Type_ASK = 2,
  MarketTicker_Type_LAST = 3
};
bool MarketTicker_Type_IsValid(int value);
const MarketTicker_Type MarketTicker_Type_Type_MIN = MarketTicker_Type_BID;
const MarketTicker_Type MarketTicker_Type_Type_MAX = MarketTicker_Type_LAST;
const int MarketTicker_Type_Type_ARRAYSIZE = MarketTicker_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* MarketTicker_Type_descriptor();
inline const ::std::string& MarketTicker_Type_Name(MarketTicker_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    MarketTicker_Type_descriptor(), value);
}
inline bool MarketTicker_Type_Parse(
    const ::std::string& name, MarketTicker_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarketTicker_Type>(
    MarketTicker_Type_descriptor(), name, value);
}
enum FutContract_Type {
  FutContract_Type_WEEKLY = 1,
  FutContract_Type_SEASON = 2,
  FutContract_Type_ROW = 3,
  FutContract_Type_OTHER = 4
};
bool FutContract_Type_IsValid(int value);
const FutContract_Type FutContract_Type_Type_MIN = FutContract_Type_WEEKLY;
const FutContract_Type FutContract_Type_Type_MAX = FutContract_Type_OTHER;
const int FutContract_Type_Type_ARRAYSIZE = FutContract_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* FutContract_Type_descriptor();
inline const ::std::string& FutContract_Type_Name(FutContract_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    FutContract_Type_descriptor(), value);
}
inline bool FutContract_Type_Parse(
    const ::std::string& name, FutContract_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FutContract_Type>(
    FutContract_Type_descriptor(), name, value);
}
// ===================================================================

class SettlePos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.SettlePos) */ {
 public:
  SettlePos();
  virtual ~SettlePos();

  SettlePos(const SettlePos& from);

  inline SettlePos& operator=(const SettlePos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SettlePos(SettlePos&& from) noexcept
    : SettlePos() {
    *this = ::std::move(from);
  }

  inline SettlePos& operator=(SettlePos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SettlePos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SettlePos* internal_default_instance() {
    return reinterpret_cast<const SettlePos*>(
               &_SettlePos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SettlePos* other);
  friend void swap(SettlePos& a, SettlePos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SettlePos* New() const PROTOBUF_FINAL { return New(NULL); }

  SettlePos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SettlePos& from);
  void MergeFrom(const SettlePos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SettlePos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pk = 10;
  bool has_pk() const;
  void clear_pk();
  static const int kPkFieldNumber = 10;
  const ::std::string& pk() const;
  void set_pk(const ::std::string& value);
  #if LANG_CXX11
  void set_pk(::std::string&& value);
  #endif
  void set_pk(const char* value);
  void set_pk(const char* value, size_t size);
  ::std::string* mutable_pk();
  ::std::string* release_pk();
  void set_allocated_pk(::std::string* pk);

  // optional int32 qty = 20;
  bool has_qty() const;
  void clear_qty();
  static const int kQtyFieldNumber = 20;
  ::google::protobuf::int32 qty() const;
  void set_qty(::google::protobuf::int32 value);

  // optional int32 price = 25;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 25;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.SettlePos)
 private:
  void set_has_pk();
  void clear_has_pk();
  void set_has_qty();
  void clear_has_qty();
  void set_has_price();
  void clear_has_price();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr pk_;
  ::google::protobuf::int32 qty_;
  ::google::protobuf::int32 price_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsSettlePosImpl();
};
// -------------------------------------------------------------------

class StorePos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.StorePos) */ {
 public:
  StorePos();
  virtual ~StorePos();

  StorePos(const StorePos& from);

  inline StorePos& operator=(const StorePos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StorePos(StorePos&& from) noexcept
    : StorePos() {
    *this = ::std::move(from);
  }

  inline StorePos& operator=(StorePos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StorePos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StorePos* internal_default_instance() {
    return reinterpret_cast<const StorePos*>(
               &_StorePos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(StorePos* other);
  friend void swap(StorePos& a, StorePos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StorePos* New() const PROTOBUF_FINAL { return New(NULL); }

  StorePos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StorePos& from);
  void MergeFrom(const StorePos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StorePos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 qty = 20;
  bool has_qty() const;
  void clear_qty();
  static const int kQtyFieldNumber = 20;
  ::google::protobuf::int32 qty() const;
  void set_qty(::google::protobuf::int32 value);

  // optional int32 price = 25;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 25;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.StorePos)
 private:
  void set_has_qty();
  void clear_has_qty();
  void set_has_price();
  void clear_has_price();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 qty_;
  ::google::protobuf::int32 price_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsStorePosImpl();
};
// -------------------------------------------------------------------

class BookPos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.BookPos) */ {
 public:
  BookPos();
  virtual ~BookPos();

  BookPos(const BookPos& from);

  inline BookPos& operator=(const BookPos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BookPos(BookPos&& from) noexcept
    : BookPos() {
    *this = ::std::move(from);
  }

  inline BookPos& operator=(BookPos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BookPos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BookPos* internal_default_instance() {
    return reinterpret_cast<const BookPos*>(
               &_BookPos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(BookPos* other);
  friend void swap(BookPos& a, BookPos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BookPos* New() const PROTOBUF_FINAL { return New(NULL); }

  BookPos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BookPos& from);
  void MergeFrom(const BookPos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BookPos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fantasybit.SettlePos positions = 40;
  int positions_size() const;
  void clear_positions();
  static const int kPositionsFieldNumber = 40;
  const ::fantasybit::SettlePos& positions(int index) const;
  ::fantasybit::SettlePos* mutable_positions(int index);
  ::fantasybit::SettlePos* add_positions();
  ::google::protobuf::RepeatedPtrField< ::fantasybit::SettlePos >*
      mutable_positions();
  const ::google::protobuf::RepeatedPtrField< ::fantasybit::SettlePos >&
      positions() const;

  // optional string playerid = 30;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 30;
  const ::std::string& playerid() const;
  void set_playerid(const ::std::string& value);
  #if LANG_CXX11
  void set_playerid(::std::string&& value);
  #endif
  void set_playerid(const char* value);
  void set_playerid(const char* value, size_t size);
  ::std::string* mutable_playerid();
  ::std::string* release_playerid();
  void set_allocated_playerid(::std::string* playerid);

  // optional string symbol = 50;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 50;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // @@protoc_insertion_point(class_scope:fantasybit.BookPos)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_symbol();
  void clear_has_symbol();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::fantasybit::SettlePos > positions_;
  ::google::protobuf::internal::ArenaStringPtr playerid_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsBookPosImpl();
};
// -------------------------------------------------------------------

class GameSettlePos : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.GameSettlePos) */ {
 public:
  GameSettlePos();
  virtual ~GameSettlePos();

  GameSettlePos(const GameSettlePos& from);

  inline GameSettlePos& operator=(const GameSettlePos& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameSettlePos(GameSettlePos&& from) noexcept
    : GameSettlePos() {
    *this = ::std::move(from);
  }

  inline GameSettlePos& operator=(GameSettlePos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameSettlePos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameSettlePos* internal_default_instance() {
    return reinterpret_cast<const GameSettlePos*>(
               &_GameSettlePos_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GameSettlePos* other);
  friend void swap(GameSettlePos& a, GameSettlePos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameSettlePos* New() const PROTOBUF_FINAL { return New(NULL); }

  GameSettlePos* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameSettlePos& from);
  void MergeFrom(const GameSettlePos& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameSettlePos* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fantasybit.BookPos home = 20;
  int home_size() const;
  void clear_home();
  static const int kHomeFieldNumber = 20;
  const ::fantasybit::BookPos& home(int index) const;
  ::fantasybit::BookPos* mutable_home(int index);
  ::fantasybit::BookPos* add_home();
  ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos >*
      mutable_home();
  const ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos >&
      home() const;

  // repeated .fantasybit.BookPos away = 30;
  int away_size() const;
  void clear_away();
  static const int kAwayFieldNumber = 30;
  const ::fantasybit::BookPos& away(int index) const;
  ::fantasybit::BookPos* mutable_away(int index);
  ::fantasybit::BookPos* add_away();
  ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos >*
      mutable_away();
  const ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos >&
      away() const;

  // optional string gameid = 10;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 10;
  const ::std::string& gameid() const;
  void set_gameid(const ::std::string& value);
  #if LANG_CXX11
  void set_gameid(::std::string&& value);
  #endif
  void set_gameid(const char* value);
  void set_gameid(const char* value, size_t size);
  ::std::string* mutable_gameid();
  ::std::string* release_gameid();
  void set_allocated_gameid(::std::string* gameid);

  // @@protoc_insertion_point(class_scope:fantasybit.GameSettlePos)
 private:
  void set_has_gameid();
  void clear_has_gameid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos > home_;
  ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos > away_;
  ::google::protobuf::internal::ArenaStringPtr gameid_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsGameSettlePosImpl();
};
// -------------------------------------------------------------------

class OrderCore : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.OrderCore) */ {
 public:
  OrderCore();
  virtual ~OrderCore();

  OrderCore(const OrderCore& from);

  inline OrderCore& operator=(const OrderCore& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderCore(OrderCore&& from) noexcept
    : OrderCore() {
    *this = ::std::move(from);
  }

  inline OrderCore& operator=(OrderCore&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderCore& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderCore* internal_default_instance() {
    return reinterpret_cast<const OrderCore*>(
               &_OrderCore_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(OrderCore* other);
  friend void swap(OrderCore& a, OrderCore& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderCore* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderCore* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderCore& from);
  void MergeFrom(const OrderCore& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderCore* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 price = 30;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 30;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // optional bool buyside = 10;
  bool has_buyside() const;
  void clear_buyside();
  static const int kBuysideFieldNumber = 10;
  bool buyside() const;
  void set_buyside(bool value);

  // optional int32 size = 20;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 20;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.OrderCore)
 private:
  void set_has_buyside();
  void clear_has_buyside();
  void set_has_size();
  void clear_has_size();
  void set_has_price();
  void clear_has_price();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 price_;
  bool buyside_;
  ::google::protobuf::int32 size_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsOrderCoreImpl();
};
// -------------------------------------------------------------------

class Order : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.Order) */ {
 public:
  Order();
  virtual ~Order();

  Order(const Order& from);

  inline Order& operator=(const Order& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Order(Order&& from) noexcept
    : Order() {
    *this = ::std::move(from);
  }

  inline Order& operator=(Order&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Order& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Order* internal_default_instance() {
    return reinterpret_cast<const Order*>(
               &_Order_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Order* other);
  friend void swap(Order& a, Order& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Order* New() const PROTOBUF_FINAL { return New(NULL); }

  Order* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Order& from);
  void MergeFrom(const Order& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Order* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .fantasybit.OrderCore core = 20;
  bool has_core() const;
  void clear_core();
  static const int kCoreFieldNumber = 20;
  const ::fantasybit::OrderCore& core() const;
  ::fantasybit::OrderCore* release_core();
  ::fantasybit::OrderCore* mutable_core();
  void set_allocated_core(::fantasybit::OrderCore* core);

  // optional int32 refnum = 10;
  bool has_refnum() const;
  void clear_refnum();
  static const int kRefnumFieldNumber = 10;
  ::google::protobuf::int32 refnum() const;
  void set_refnum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.Order)
 private:
  void set_has_refnum();
  void clear_has_refnum();
  void set_has_core();
  void clear_has_core();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::fantasybit::OrderCore* core_;
  ::google::protobuf::int32 refnum_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsOrderImpl();
};
// -------------------------------------------------------------------

class OrderFill : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.OrderFill) */ {
 public:
  OrderFill();
  virtual ~OrderFill();

  OrderFill(const OrderFill& from);

  inline OrderFill& operator=(const OrderFill& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrderFill(OrderFill&& from) noexcept
    : OrderFill() {
    *this = ::std::move(from);
  }

  inline OrderFill& operator=(OrderFill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderFill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OrderFill* internal_default_instance() {
    return reinterpret_cast<const OrderFill*>(
               &_OrderFill_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(OrderFill* other);
  friend void swap(OrderFill& a, OrderFill& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrderFill* New() const PROTOBUF_FINAL { return New(NULL); }

  OrderFill* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrderFill& from);
  void MergeFrom(const OrderFill& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrderFill* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .fantasybit.Order left = 10;
  bool has_left() const;
  void clear_left();
  static const int kLeftFieldNumber = 10;
  const ::fantasybit::Order& left() const;
  ::fantasybit::Order* release_left();
  ::fantasybit::Order* mutable_left();
  void set_allocated_left(::fantasybit::Order* left);

  // optional int32 timestamp = 40;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 40;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // optional int32 fillprice = 20;
  bool has_fillprice() const;
  void clear_fillprice();
  static const int kFillpriceFieldNumber = 20;
  ::google::protobuf::int32 fillprice() const;
  void set_fillprice(::google::protobuf::int32 value);

  // optional int32 fillsize = 30;
  bool has_fillsize() const;
  void clear_fillsize();
  static const int kFillsizeFieldNumber = 30;
  ::google::protobuf::int32 fillsize() const;
  void set_fillsize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.OrderFill)
 private:
  void set_has_left();
  void clear_has_left();
  void set_has_fillprice();
  void clear_has_fillprice();
  void set_has_fillsize();
  void clear_has_fillsize();
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::fantasybit::Order* left_;
  ::google::protobuf::int32 timestamp_;
  ::google::protobuf::int32 fillprice_;
  ::google::protobuf::int32 fillsize_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsOrderFillImpl();
};
// -------------------------------------------------------------------

class MarketTicker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.MarketTicker) */ {
 public:
  MarketTicker();
  virtual ~MarketTicker();

  MarketTicker(const MarketTicker& from);

  inline MarketTicker& operator=(const MarketTicker& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketTicker(MarketTicker&& from) noexcept
    : MarketTicker() {
    *this = ::std::move(from);
  }

  inline MarketTicker& operator=(MarketTicker&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketTicker& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MarketTicker* internal_default_instance() {
    return reinterpret_cast<const MarketTicker*>(
               &_MarketTicker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(MarketTicker* other);
  friend void swap(MarketTicker& a, MarketTicker& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketTicker* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketTicker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketTicker& from);
  void MergeFrom(const MarketTicker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketTicker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MarketTicker_Type Type;
  static const Type BID =
    MarketTicker_Type_BID;
  static const Type ASK =
    MarketTicker_Type_ASK;
  static const Type LAST =
    MarketTicker_Type_LAST;
  static inline bool Type_IsValid(int value) {
    return MarketTicker_Type_IsValid(value);
  }
  static const Type Type_MIN =
    MarketTicker_Type_Type_MIN;
  static const Type Type_MAX =
    MarketTicker_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    MarketTicker_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return MarketTicker_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return MarketTicker_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return MarketTicker_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string symbol = 2;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 2;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // optional int32 size = 20;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 20;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // optional int32 price = 30;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 30;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // optional .fantasybit.MarketTicker.Type type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::fantasybit::MarketTicker_Type type() const;
  void set_type(::fantasybit::MarketTicker_Type value);

  // @@protoc_insertion_point(class_scope:fantasybit.MarketTicker)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_symbol();
  void clear_has_symbol();
  void set_has_size();
  void clear_has_size();
  void set_has_price();
  void clear_has_price();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 price_;
  int type_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsMarketTickerImpl();
};
// -------------------------------------------------------------------

class TradeTic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.TradeTic) */ {
 public:
  TradeTic();
  virtual ~TradeTic();

  TradeTic(const TradeTic& from);

  inline TradeTic& operator=(const TradeTic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TradeTic(TradeTic&& from) noexcept
    : TradeTic() {
    *this = ::std::move(from);
  }

  inline TradeTic& operator=(TradeTic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TradeTic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TradeTic* internal_default_instance() {
    return reinterpret_cast<const TradeTic*>(
               &_TradeTic_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(TradeTic* other);
  friend void swap(TradeTic& a, TradeTic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TradeTic* New() const PROTOBUF_FINAL { return New(NULL); }

  TradeTic* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TradeTic& from);
  void MergeFrom(const TradeTic& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TradeTic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string symbol = 2;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 2;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // optional int32 size = 20;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 20;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // optional int32 price = 30;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 30;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // optional int32 ishigh = 40;
  bool has_ishigh() const;
  void clear_ishigh();
  static const int kIshighFieldNumber = 40;
  ::google::protobuf::int32 ishigh() const;
  void set_ishigh(::google::protobuf::int32 value);

  // optional int32 islow = 45;
  bool has_islow() const;
  void clear_islow();
  static const int kIslowFieldNumber = 45;
  ::google::protobuf::int32 islow() const;
  void set_islow(::google::protobuf::int32 value);

  // optional int32 change = 50;
  bool has_change() const;
  void clear_change();
  static const int kChangeFieldNumber = 50;
  ::google::protobuf::int32 change() const;
  void set_change(::google::protobuf::int32 value);

  // optional int32 tic = 60;
  bool has_tic() const;
  void clear_tic();
  static const int kTicFieldNumber = 60;
  ::google::protobuf::int32 tic() const;
  void set_tic(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.TradeTic)
 private:
  void set_has_symbol();
  void clear_has_symbol();
  void set_has_size();
  void clear_has_size();
  void set_has_price();
  void clear_has_price();
  void set_has_ishigh();
  void clear_has_ishigh();
  void set_has_islow();
  void clear_has_islow();
  void set_has_change();
  void clear_has_change();
  void set_has_tic();
  void clear_has_tic();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 ishigh_;
  ::google::protobuf::int32 islow_;
  ::google::protobuf::int32 change_;
  ::google::protobuf::int32 tic_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsTradeTicImpl();
};
// -------------------------------------------------------------------

class DepthFeedDelta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.DepthFeedDelta) */ {
 public:
  DepthFeedDelta();
  virtual ~DepthFeedDelta();

  DepthFeedDelta(const DepthFeedDelta& from);

  inline DepthFeedDelta& operator=(const DepthFeedDelta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DepthFeedDelta(DepthFeedDelta&& from) noexcept
    : DepthFeedDelta() {
    *this = ::std::move(from);
  }

  inline DepthFeedDelta& operator=(DepthFeedDelta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DepthFeedDelta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DepthFeedDelta* internal_default_instance() {
    return reinterpret_cast<const DepthFeedDelta*>(
               &_DepthFeedDelta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(DepthFeedDelta* other);
  friend void swap(DepthFeedDelta& a, DepthFeedDelta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DepthFeedDelta* New() const PROTOBUF_FINAL { return New(NULL); }

  DepthFeedDelta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DepthFeedDelta& from);
  void MergeFrom(const DepthFeedDelta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DepthFeedDelta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string symbol = 1;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 1;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // optional int32 price = 30;
  bool has_price() const;
  void clear_price();
  static const int kPriceFieldNumber = 30;
  ::google::protobuf::int32 price() const;
  void set_price(::google::protobuf::int32 value);

  // optional bool isbid = 10;
  bool has_isbid() const;
  void clear_isbid();
  static const int kIsbidFieldNumber = 10;
  bool isbid() const;
  void set_isbid(bool value);

  // optional int32 size = 20;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 20;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.DepthFeedDelta)
 private:
  void set_has_symbol();
  void clear_has_symbol();
  void set_has_isbid();
  void clear_has_isbid();
  void set_has_size();
  void clear_has_size();
  void set_has_price();
  void clear_has_price();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int32 price_;
  bool isbid_;
  ::google::protobuf::int32 size_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsDepthFeedDeltaImpl();
};
// -------------------------------------------------------------------

class ContractOHLC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.ContractOHLC) */ {
 public:
  ContractOHLC();
  virtual ~ContractOHLC();

  ContractOHLC(const ContractOHLC& from);

  inline ContractOHLC& operator=(const ContractOHLC& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ContractOHLC(ContractOHLC&& from) noexcept
    : ContractOHLC() {
    *this = ::std::move(from);
  }

  inline ContractOHLC& operator=(ContractOHLC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContractOHLC& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContractOHLC* internal_default_instance() {
    return reinterpret_cast<const ContractOHLC*>(
               &_ContractOHLC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(ContractOHLC* other);
  friend void swap(ContractOHLC& a, ContractOHLC& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ContractOHLC* New() const PROTOBUF_FINAL { return New(NULL); }

  ContractOHLC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContractOHLC& from);
  void MergeFrom(const ContractOHLC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContractOHLC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string symbol = 10;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 10;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // optional int32 open = 20;
  bool has_open() const;
  void clear_open();
  static const int kOpenFieldNumber = 20;
  ::google::protobuf::int32 open() const;
  void set_open(::google::protobuf::int32 value);

  // optional int32 high = 30;
  bool has_high() const;
  void clear_high();
  static const int kHighFieldNumber = 30;
  ::google::protobuf::int32 high() const;
  void set_high(::google::protobuf::int32 value);

  // optional int32 low = 40;
  bool has_low() const;
  void clear_low();
  static const int kLowFieldNumber = 40;
  ::google::protobuf::int32 low() const;
  void set_low(::google::protobuf::int32 value);

  // optional int32 close = 50;
  bool has_close() const;
  void clear_close();
  static const int kCloseFieldNumber = 50;
  ::google::protobuf::int32 close() const;
  void set_close(::google::protobuf::int32 value);

  // optional int32 volume = 60;
  bool has_volume() const;
  void clear_volume();
  static const int kVolumeFieldNumber = 60;
  ::google::protobuf::int32 volume() const;
  void set_volume(::google::protobuf::int32 value);

  // optional int32 change = 70;
  bool has_change() const;
  void clear_change();
  static const int kChangeFieldNumber = 70;
  ::google::protobuf::int32 change() const;
  void set_change(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.ContractOHLC)
 private:
  void set_has_symbol();
  void clear_has_symbol();
  void set_has_open();
  void clear_has_open();
  void set_has_high();
  void clear_has_high();
  void set_has_low();
  void clear_has_low();
  void set_has_close();
  void clear_has_close();
  void set_has_volume();
  void clear_has_volume();
  void set_has_change();
  void clear_has_change();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int32 open_;
  ::google::protobuf::int32 high_;
  ::google::protobuf::int32 low_;
  ::google::protobuf::int32 close_;
  ::google::protobuf::int32 volume_;
  ::google::protobuf::int32 change_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsContractOHLCImpl();
};
// -------------------------------------------------------------------

class DepthItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.DepthItem) */ {
 public:
  DepthItem();
  virtual ~DepthItem();

  DepthItem(const DepthItem& from);

  inline DepthItem& operator=(const DepthItem& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DepthItem(DepthItem&& from) noexcept
    : DepthItem() {
    *this = ::std::move(from);
  }

  inline DepthItem& operator=(DepthItem&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DepthItem& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DepthItem* internal_default_instance() {
    return reinterpret_cast<const DepthItem*>(
               &_DepthItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(DepthItem* other);
  friend void swap(DepthItem& a, DepthItem& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DepthItem* New() const PROTOBUF_FINAL { return New(NULL); }

  DepthItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DepthItem& from);
  void MergeFrom(const DepthItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DepthItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 as = 60;
  bool has_as() const;
  void clear_as();
  static const int kAsFieldNumber = 60;
  ::google::protobuf::int32 as() const;
  void set_as(::google::protobuf::int32 value);

  // optional int32 level = 10;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 10;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional int32 b = 30;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 30;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // optional int32 a = 40;
  bool has_a() const;
  void clear_a();
  static const int kAFieldNumber = 40;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // optional int32 bs = 50;
  bool has_bs() const;
  void clear_bs();
  static const int kBsFieldNumber = 50;
  ::google::protobuf::int32 bs() const;
  void set_bs(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.DepthItem)
 private:
  void set_has_level();
  void clear_has_level();
  void set_has_b();
  void clear_has_b();
  void set_has_a();
  void clear_has_a();
  void set_has_bs();
  void clear_has_bs();
  void set_has_as();
  void clear_has_as();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 as_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 b_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 bs_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsDepthItemImpl();
};
// -------------------------------------------------------------------

class BookDelta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.BookDelta) */ {
 public:
  BookDelta();
  virtual ~BookDelta();

  BookDelta(const BookDelta& from);

  inline BookDelta& operator=(const BookDelta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BookDelta(BookDelta&& from) noexcept
    : BookDelta() {
    *this = ::std::move(from);
  }

  inline BookDelta& operator=(BookDelta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BookDelta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BookDelta* internal_default_instance() {
    return reinterpret_cast<const BookDelta*>(
               &_BookDelta_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(BookDelta* other);
  friend void swap(BookDelta& a, BookDelta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BookDelta* New() const PROTOBUF_FINAL { return New(NULL); }

  BookDelta* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BookDelta& from);
  void MergeFrom(const BookDelta& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BookDelta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fantasybit.Order removes = 50;
  int removes_size() const;
  void clear_removes();
  static const int kRemovesFieldNumber = 50;
  const ::fantasybit::Order& removes(int index) const;
  ::fantasybit::Order* mutable_removes(int index);
  ::fantasybit::Order* add_removes();
  ::google::protobuf::RepeatedPtrField< ::fantasybit::Order >*
      mutable_removes();
  const ::google::protobuf::RepeatedPtrField< ::fantasybit::Order >&
      removes() const;

  // repeated .fantasybit.MarketTicker level2tic = 60;
  int level2tic_size() const;
  void clear_level2tic();
  static const int kLevel2TicFieldNumber = 60;
  const ::fantasybit::MarketTicker& level2tic(int index) const;
  ::fantasybit::MarketTicker* mutable_level2tic(int index);
  ::fantasybit::MarketTicker* add_level2tic();
  ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker >*
      mutable_level2tic();
  const ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker >&
      level2tic() const;

  // repeated .fantasybit.MarketTicker level1tic = 70;
  int level1tic_size() const;
  void clear_level1tic();
  static const int kLevel1TicFieldNumber = 70;
  const ::fantasybit::MarketTicker& level1tic(int index) const;
  ::fantasybit::MarketTicker* mutable_level1tic(int index);
  ::fantasybit::MarketTicker* add_level1tic();
  ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker >*
      mutable_level1tic();
  const ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker >&
      level1tic() const;

  // optional string fantasy_name = 10;
  bool has_fantasy_name() const;
  void clear_fantasy_name();
  static const int kFantasyNameFieldNumber = 10;
  const ::std::string& fantasy_name() const;
  void set_fantasy_name(const ::std::string& value);
  #if LANG_CXX11
  void set_fantasy_name(::std::string&& value);
  #endif
  void set_fantasy_name(const char* value);
  void set_fantasy_name(const char* value, size_t size);
  ::std::string* mutable_fantasy_name();
  ::std::string* release_fantasy_name();
  void set_allocated_fantasy_name(::std::string* fantasy_name);

  // optional string playerid = 30;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 30;
  const ::std::string& playerid() const;
  void set_playerid(const ::std::string& value);
  #if LANG_CXX11
  void set_playerid(::std::string&& value);
  #endif
  void set_playerid(const char* value);
  void set_playerid(const char* value, size_t size);
  ::std::string* mutable_playerid();
  ::std::string* release_playerid();
  void set_allocated_playerid(::std::string* playerid);

  // optional string symbol = 90;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 90;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // optional .fantasybit.OrderCore newnew = 40;
  bool has_newnew() const;
  void clear_newnew();
  static const int kNewnewFieldNumber = 40;
  const ::fantasybit::OrderCore& newnew() const;
  ::fantasybit::OrderCore* release_newnew();
  ::fantasybit::OrderCore* mutable_newnew();
  void set_allocated_newnew(::fantasybit::OrderCore* newnew);

  // optional .fantasybit.ContractOHLC ohlc = 41;
  bool has_ohlc() const;
  void clear_ohlc();
  static const int kOhlcFieldNumber = 41;
  const ::fantasybit::ContractOHLC& ohlc() const;
  ::fantasybit::ContractOHLC* release_ohlc();
  ::fantasybit::ContractOHLC* mutable_ohlc();
  void set_allocated_ohlc(::fantasybit::ContractOHLC* ohlc);

  // optional int32 seqnum = 20;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 20;
  ::google::protobuf::int32 seqnum() const;
  void set_seqnum(::google::protobuf::int32 value);

  // optional int32 blocknum = 80;
  bool has_blocknum() const;
  void clear_blocknum();
  static const int kBlocknumFieldNumber = 80;
  ::google::protobuf::int32 blocknum() const;
  void set_blocknum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.BookDelta)
 private:
  void set_has_fantasy_name();
  void clear_has_fantasy_name();
  void set_has_seqnum();
  void clear_has_seqnum();
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_newnew();
  void clear_has_newnew();
  void set_has_ohlc();
  void clear_has_ohlc();
  void set_has_blocknum();
  void clear_has_blocknum();
  void set_has_symbol();
  void clear_has_symbol();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::fantasybit::Order > removes_;
  ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker > level2tic_;
  ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker > level1tic_;
  ::google::protobuf::internal::ArenaStringPtr fantasy_name_;
  ::google::protobuf::internal::ArenaStringPtr playerid_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::fantasybit::OrderCore* newnew_;
  ::fantasybit::ContractOHLC* ohlc_;
  ::google::protobuf::int32 seqnum_;
  ::google::protobuf::int32 blocknum_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsBookDeltaImpl();
};
// -------------------------------------------------------------------

class MarketQuote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.MarketQuote) */ {
 public:
  MarketQuote();
  virtual ~MarketQuote();

  MarketQuote(const MarketQuote& from);

  inline MarketQuote& operator=(const MarketQuote& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketQuote(MarketQuote&& from) noexcept
    : MarketQuote() {
    *this = ::std::move(from);
  }

  inline MarketQuote& operator=(MarketQuote&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketQuote& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MarketQuote* internal_default_instance() {
    return reinterpret_cast<const MarketQuote*>(
               &_MarketQuote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(MarketQuote* other);
  friend void swap(MarketQuote& a, MarketQuote& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketQuote* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketQuote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketQuote& from);
  void MergeFrom(const MarketQuote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketQuote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 udn = 70;
  bool has_udn() const;
  void clear_udn();
  static const int kUdnFieldNumber = 70;
  ::google::protobuf::int32 udn() const;
  void set_udn(::google::protobuf::int32 value);

  // optional int32 bs = 10;
  bool has_bs() const;
  void clear_bs();
  static const int kBsFieldNumber = 10;
  ::google::protobuf::int32 bs() const;
  void set_bs(::google::protobuf::int32 value);

  // optional int32 b = 20;
  bool has_b() const;
  void clear_b();
  static const int kBFieldNumber = 20;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // optional int32 a = 30;
  bool has_a() const;
  void clear_a();
  static const int kAFieldNumber = 30;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // optional int32 as = 40;
  bool has_as() const;
  void clear_as();
  static const int kAsFieldNumber = 40;
  ::google::protobuf::int32 as() const;
  void set_as(::google::protobuf::int32 value);

  // optional int32 l = 50;
  bool has_l() const;
  void clear_l();
  static const int kLFieldNumber = 50;
  ::google::protobuf::int32 l() const;
  void set_l(::google::protobuf::int32 value);

  // optional int32 ls = 60;
  bool has_ls() const;
  void clear_ls();
  static const int kLsFieldNumber = 60;
  ::google::protobuf::int32 ls() const;
  void set_ls(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.MarketQuote)
 private:
  void set_has_bs();
  void clear_has_bs();
  void set_has_b();
  void clear_has_b();
  void set_has_a();
  void clear_has_a();
  void set_has_as();
  void clear_has_as();
  void set_has_l();
  void clear_has_l();
  void set_has_ls();
  void clear_has_ls();
  void set_has_udn();
  void clear_has_udn();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 udn_;
  ::google::protobuf::int32 bs_;
  ::google::protobuf::int32 b_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 as_;
  ::google::protobuf::int32 l_;
  ::google::protobuf::int32 ls_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsMarketQuoteImpl();
};
// -------------------------------------------------------------------

class MarketSnapshot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.MarketSnapshot) */ {
 public:
  MarketSnapshot();
  virtual ~MarketSnapshot();

  MarketSnapshot(const MarketSnapshot& from);

  inline MarketSnapshot& operator=(const MarketSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MarketSnapshot(MarketSnapshot&& from) noexcept
    : MarketSnapshot() {
    *this = ::std::move(from);
  }

  inline MarketSnapshot& operator=(MarketSnapshot&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MarketSnapshot& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MarketSnapshot* internal_default_instance() {
    return reinterpret_cast<const MarketSnapshot*>(
               &_MarketSnapshot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(MarketSnapshot* other);
  friend void swap(MarketSnapshot& a, MarketSnapshot& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MarketSnapshot* New() const PROTOBUF_FINAL { return New(NULL); }

  MarketSnapshot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MarketSnapshot& from);
  void MergeFrom(const MarketSnapshot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MarketSnapshot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .fantasybit.DepthItem depth = 70;
  int depth_size() const;
  void clear_depth();
  static const int kDepthFieldNumber = 70;
  const ::fantasybit::DepthItem& depth(int index) const;
  ::fantasybit::DepthItem* mutable_depth(int index);
  ::fantasybit::DepthItem* add_depth();
  ::google::protobuf::RepeatedPtrField< ::fantasybit::DepthItem >*
      mutable_depth();
  const ::google::protobuf::RepeatedPtrField< ::fantasybit::DepthItem >&
      depth() const;

  // optional string symbol = 10;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 10;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // optional .fantasybit.ContractOHLC ohlc = 20;
  bool has_ohlc() const;
  void clear_ohlc();
  static const int kOhlcFieldNumber = 20;
  const ::fantasybit::ContractOHLC& ohlc() const;
  ::fantasybit::ContractOHLC* release_ohlc();
  ::fantasybit::ContractOHLC* mutable_ohlc();
  void set_allocated_ohlc(::fantasybit::ContractOHLC* ohlc);

  // optional .fantasybit.MarketQuote quote = 30;
  bool has_quote() const;
  void clear_quote();
  static const int kQuoteFieldNumber = 30;
  const ::fantasybit::MarketQuote& quote() const;
  ::fantasybit::MarketQuote* release_quote();
  ::fantasybit::MarketQuote* mutable_quote();
  void set_allocated_quote(::fantasybit::MarketQuote* quote);

  // optional int32 week = 11;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 11;
  ::google::protobuf::int32 week() const;
  void set_week(::google::protobuf::int32 value);

  // optional int32 blocknum = 40;
  bool has_blocknum() const;
  void clear_blocknum();
  static const int kBlocknumFieldNumber = 40;
  ::google::protobuf::int32 blocknum() const;
  void set_blocknum(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:fantasybit.MarketSnapshot)
 private:
  void set_has_symbol();
  void clear_has_symbol();
  void set_has_week();
  void clear_has_week();
  void set_has_ohlc();
  void clear_has_ohlc();
  void set_has_quote();
  void clear_has_quote();
  void set_has_blocknum();
  void clear_has_blocknum();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::fantasybit::DepthItem > depth_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::fantasybit::ContractOHLC* ohlc_;
  ::fantasybit::MarketQuote* quote_;
  ::google::protobuf::int32 week_;
  ::google::protobuf::int32 blocknum_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsMarketSnapshotImpl();
};
// -------------------------------------------------------------------

class FutContract : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:fantasybit.FutContract) */ {
 public:
  FutContract();
  virtual ~FutContract();

  FutContract(const FutContract& from);

  inline FutContract& operator=(const FutContract& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FutContract(FutContract&& from) noexcept
    : FutContract() {
    *this = ::std::move(from);
  }

  inline FutContract& operator=(FutContract&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FutContract& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FutContract* internal_default_instance() {
    return reinterpret_cast<const FutContract*>(
               &_FutContract_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(FutContract* other);
  friend void swap(FutContract& a, FutContract& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FutContract* New() const PROTOBUF_FINAL { return New(NULL); }

  FutContract* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FutContract& from);
  void MergeFrom(const FutContract& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FutContract* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FutContract_Type Type;
  static const Type WEEKLY =
    FutContract_Type_WEEKLY;
  static const Type SEASON =
    FutContract_Type_SEASON;
  static const Type ROW =
    FutContract_Type_ROW;
  static const Type OTHER =
    FutContract_Type_OTHER;
  static inline bool Type_IsValid(int value) {
    return FutContract_Type_IsValid(value);
  }
  static const Type Type_MIN =
    FutContract_Type_Type_MIN;
  static const Type Type_MAX =
    FutContract_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    FutContract_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return FutContract_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return FutContract_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return FutContract_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string symbol = 40;
  bool has_symbol() const;
  void clear_symbol();
  static const int kSymbolFieldNumber = 40;
  const ::std::string& symbol() const;
  void set_symbol(const ::std::string& value);
  #if LANG_CXX11
  void set_symbol(::std::string&& value);
  #endif
  void set_symbol(const char* value);
  void set_symbol(const char* value, size_t size);
  ::std::string* mutable_symbol();
  ::std::string* release_symbol();
  void set_allocated_symbol(::std::string* symbol);

  // optional int32 season = 20;
  bool has_season() const;
  void clear_season();
  static const int kSeasonFieldNumber = 20;
  ::google::protobuf::int32 season() const;
  void set_season(::google::protobuf::int32 value);

  // optional int32 week = 30;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 30;
  ::google::protobuf::int32 week() const;
  void set_week(::google::protobuf::int32 value);

  // optional .fantasybit.FutContract.Type type = 10;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 10;
  ::fantasybit::FutContract_Type type() const;
  void set_type(::fantasybit::FutContract_Type value);

  // @@protoc_insertion_point(class_scope:fantasybit.FutContract)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_season();
  void clear_has_season();
  void set_has_week();
  void clear_has_week();
  void set_has_symbol();
  void clear_has_symbol();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr symbol_;
  ::google::protobuf::int32 season_;
  ::google::protobuf::int32 week_;
  int type_;
  friend struct ::protobuf_ExData_2eproto::TableStruct;
  friend void ::protobuf_ExData_2eproto::InitDefaultsFutContractImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SettlePos

// optional string pk = 10;
inline bool SettlePos::has_pk() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SettlePos::set_has_pk() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SettlePos::clear_has_pk() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SettlePos::clear_pk() {
  pk_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pk();
}
inline const ::std::string& SettlePos::pk() const {
  // @@protoc_insertion_point(field_get:fantasybit.SettlePos.pk)
  return pk_.GetNoArena();
}
inline void SettlePos::set_pk(const ::std::string& value) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.SettlePos.pk)
}
#if LANG_CXX11
inline void SettlePos::set_pk(::std::string&& value) {
  set_has_pk();
  pk_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.SettlePos.pk)
}
#endif
inline void SettlePos::set_pk(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.SettlePos.pk)
}
inline void SettlePos::set_pk(const char* value, size_t size) {
  set_has_pk();
  pk_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.SettlePos.pk)
}
inline ::std::string* SettlePos::mutable_pk() {
  set_has_pk();
  // @@protoc_insertion_point(field_mutable:fantasybit.SettlePos.pk)
  return pk_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SettlePos::release_pk() {
  // @@protoc_insertion_point(field_release:fantasybit.SettlePos.pk)
  clear_has_pk();
  return pk_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SettlePos::set_allocated_pk(::std::string* pk) {
  if (pk != NULL) {
    set_has_pk();
  } else {
    clear_has_pk();
  }
  pk_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pk);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.SettlePos.pk)
}

// optional int32 qty = 20;
inline bool SettlePos::has_qty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SettlePos::set_has_qty() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SettlePos::clear_has_qty() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SettlePos::clear_qty() {
  qty_ = 0;
  clear_has_qty();
}
inline ::google::protobuf::int32 SettlePos::qty() const {
  // @@protoc_insertion_point(field_get:fantasybit.SettlePos.qty)
  return qty_;
}
inline void SettlePos::set_qty(::google::protobuf::int32 value) {
  set_has_qty();
  qty_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.SettlePos.qty)
}

// optional int32 price = 25;
inline bool SettlePos::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SettlePos::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SettlePos::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SettlePos::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 SettlePos::price() const {
  // @@protoc_insertion_point(field_get:fantasybit.SettlePos.price)
  return price_;
}
inline void SettlePos::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.SettlePos.price)
}

// -------------------------------------------------------------------

// StorePos

// optional int32 qty = 20;
inline bool StorePos::has_qty() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StorePos::set_has_qty() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StorePos::clear_has_qty() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StorePos::clear_qty() {
  qty_ = 0;
  clear_has_qty();
}
inline ::google::protobuf::int32 StorePos::qty() const {
  // @@protoc_insertion_point(field_get:fantasybit.StorePos.qty)
  return qty_;
}
inline void StorePos::set_qty(::google::protobuf::int32 value) {
  set_has_qty();
  qty_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.StorePos.qty)
}

// optional int32 price = 25;
inline bool StorePos::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StorePos::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StorePos::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StorePos::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 StorePos::price() const {
  // @@protoc_insertion_point(field_get:fantasybit.StorePos.price)
  return price_;
}
inline void StorePos::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.StorePos.price)
}

// -------------------------------------------------------------------

// BookPos

// optional string playerid = 30;
inline bool BookPos::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BookPos::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BookPos::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BookPos::clear_playerid() {
  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playerid();
}
inline const ::std::string& BookPos::playerid() const {
  // @@protoc_insertion_point(field_get:fantasybit.BookPos.playerid)
  return playerid_.GetNoArena();
}
inline void BookPos::set_playerid(const ::std::string& value) {
  set_has_playerid();
  playerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.BookPos.playerid)
}
#if LANG_CXX11
inline void BookPos::set_playerid(::std::string&& value) {
  set_has_playerid();
  playerid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.BookPos.playerid)
}
#endif
inline void BookPos::set_playerid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_playerid();
  playerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.BookPos.playerid)
}
inline void BookPos::set_playerid(const char* value, size_t size) {
  set_has_playerid();
  playerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.BookPos.playerid)
}
inline ::std::string* BookPos::mutable_playerid() {
  set_has_playerid();
  // @@protoc_insertion_point(field_mutable:fantasybit.BookPos.playerid)
  return playerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BookPos::release_playerid() {
  // @@protoc_insertion_point(field_release:fantasybit.BookPos.playerid)
  clear_has_playerid();
  return playerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BookPos::set_allocated_playerid(::std::string* playerid) {
  if (playerid != NULL) {
    set_has_playerid();
  } else {
    clear_has_playerid();
  }
  playerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playerid);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.BookPos.playerid)
}

// repeated .fantasybit.SettlePos positions = 40;
inline int BookPos::positions_size() const {
  return positions_.size();
}
inline void BookPos::clear_positions() {
  positions_.Clear();
}
inline const ::fantasybit::SettlePos& BookPos::positions(int index) const {
  // @@protoc_insertion_point(field_get:fantasybit.BookPos.positions)
  return positions_.Get(index);
}
inline ::fantasybit::SettlePos* BookPos::mutable_positions(int index) {
  // @@protoc_insertion_point(field_mutable:fantasybit.BookPos.positions)
  return positions_.Mutable(index);
}
inline ::fantasybit::SettlePos* BookPos::add_positions() {
  // @@protoc_insertion_point(field_add:fantasybit.BookPos.positions)
  return positions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::fantasybit::SettlePos >*
BookPos::mutable_positions() {
  // @@protoc_insertion_point(field_mutable_list:fantasybit.BookPos.positions)
  return &positions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::fantasybit::SettlePos >&
BookPos::positions() const {
  // @@protoc_insertion_point(field_list:fantasybit.BookPos.positions)
  return positions_;
}

// optional string symbol = 50;
inline bool BookPos::has_symbol() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BookPos::set_has_symbol() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BookPos::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BookPos::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_symbol();
}
inline const ::std::string& BookPos::symbol() const {
  // @@protoc_insertion_point(field_get:fantasybit.BookPos.symbol)
  return symbol_.GetNoArena();
}
inline void BookPos::set_symbol(const ::std::string& value) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.BookPos.symbol)
}
#if LANG_CXX11
inline void BookPos::set_symbol(::std::string&& value) {
  set_has_symbol();
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.BookPos.symbol)
}
#endif
inline void BookPos::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.BookPos.symbol)
}
inline void BookPos::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.BookPos.symbol)
}
inline ::std::string* BookPos::mutable_symbol() {
  set_has_symbol();
  // @@protoc_insertion_point(field_mutable:fantasybit.BookPos.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BookPos::release_symbol() {
  // @@protoc_insertion_point(field_release:fantasybit.BookPos.symbol)
  clear_has_symbol();
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BookPos::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.BookPos.symbol)
}

// -------------------------------------------------------------------

// GameSettlePos

// optional string gameid = 10;
inline bool GameSettlePos::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GameSettlePos::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GameSettlePos::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GameSettlePos::clear_gameid() {
  gameid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gameid();
}
inline const ::std::string& GameSettlePos::gameid() const {
  // @@protoc_insertion_point(field_get:fantasybit.GameSettlePos.gameid)
  return gameid_.GetNoArena();
}
inline void GameSettlePos::set_gameid(const ::std::string& value) {
  set_has_gameid();
  gameid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.GameSettlePos.gameid)
}
#if LANG_CXX11
inline void GameSettlePos::set_gameid(::std::string&& value) {
  set_has_gameid();
  gameid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.GameSettlePos.gameid)
}
#endif
inline void GameSettlePos::set_gameid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gameid();
  gameid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.GameSettlePos.gameid)
}
inline void GameSettlePos::set_gameid(const char* value, size_t size) {
  set_has_gameid();
  gameid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.GameSettlePos.gameid)
}
inline ::std::string* GameSettlePos::mutable_gameid() {
  set_has_gameid();
  // @@protoc_insertion_point(field_mutable:fantasybit.GameSettlePos.gameid)
  return gameid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameSettlePos::release_gameid() {
  // @@protoc_insertion_point(field_release:fantasybit.GameSettlePos.gameid)
  clear_has_gameid();
  return gameid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameSettlePos::set_allocated_gameid(::std::string* gameid) {
  if (gameid != NULL) {
    set_has_gameid();
  } else {
    clear_has_gameid();
  }
  gameid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gameid);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.GameSettlePos.gameid)
}

// repeated .fantasybit.BookPos home = 20;
inline int GameSettlePos::home_size() const {
  return home_.size();
}
inline void GameSettlePos::clear_home() {
  home_.Clear();
}
inline const ::fantasybit::BookPos& GameSettlePos::home(int index) const {
  // @@protoc_insertion_point(field_get:fantasybit.GameSettlePos.home)
  return home_.Get(index);
}
inline ::fantasybit::BookPos* GameSettlePos::mutable_home(int index) {
  // @@protoc_insertion_point(field_mutable:fantasybit.GameSettlePos.home)
  return home_.Mutable(index);
}
inline ::fantasybit::BookPos* GameSettlePos::add_home() {
  // @@protoc_insertion_point(field_add:fantasybit.GameSettlePos.home)
  return home_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos >*
GameSettlePos::mutable_home() {
  // @@protoc_insertion_point(field_mutable_list:fantasybit.GameSettlePos.home)
  return &home_;
}
inline const ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos >&
GameSettlePos::home() const {
  // @@protoc_insertion_point(field_list:fantasybit.GameSettlePos.home)
  return home_;
}

// repeated .fantasybit.BookPos away = 30;
inline int GameSettlePos::away_size() const {
  return away_.size();
}
inline void GameSettlePos::clear_away() {
  away_.Clear();
}
inline const ::fantasybit::BookPos& GameSettlePos::away(int index) const {
  // @@protoc_insertion_point(field_get:fantasybit.GameSettlePos.away)
  return away_.Get(index);
}
inline ::fantasybit::BookPos* GameSettlePos::mutable_away(int index) {
  // @@protoc_insertion_point(field_mutable:fantasybit.GameSettlePos.away)
  return away_.Mutable(index);
}
inline ::fantasybit::BookPos* GameSettlePos::add_away() {
  // @@protoc_insertion_point(field_add:fantasybit.GameSettlePos.away)
  return away_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos >*
GameSettlePos::mutable_away() {
  // @@protoc_insertion_point(field_mutable_list:fantasybit.GameSettlePos.away)
  return &away_;
}
inline const ::google::protobuf::RepeatedPtrField< ::fantasybit::BookPos >&
GameSettlePos::away() const {
  // @@protoc_insertion_point(field_list:fantasybit.GameSettlePos.away)
  return away_;
}

// -------------------------------------------------------------------

// OrderCore

// optional bool buyside = 10;
inline bool OrderCore::has_buyside() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderCore::set_has_buyside() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderCore::clear_has_buyside() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderCore::clear_buyside() {
  buyside_ = false;
  clear_has_buyside();
}
inline bool OrderCore::buyside() const {
  // @@protoc_insertion_point(field_get:fantasybit.OrderCore.buyside)
  return buyside_;
}
inline void OrderCore::set_buyside(bool value) {
  set_has_buyside();
  buyside_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.OrderCore.buyside)
}

// optional int32 size = 20;
inline bool OrderCore::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderCore::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderCore::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderCore::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 OrderCore::size() const {
  // @@protoc_insertion_point(field_get:fantasybit.OrderCore.size)
  return size_;
}
inline void OrderCore::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.OrderCore.size)
}

// optional int32 price = 30;
inline bool OrderCore::has_price() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderCore::set_has_price() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderCore::clear_has_price() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderCore::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 OrderCore::price() const {
  // @@protoc_insertion_point(field_get:fantasybit.OrderCore.price)
  return price_;
}
inline void OrderCore::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.OrderCore.price)
}

// -------------------------------------------------------------------

// Order

// optional int32 refnum = 10;
inline bool Order::has_refnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Order::set_has_refnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Order::clear_has_refnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Order::clear_refnum() {
  refnum_ = 0;
  clear_has_refnum();
}
inline ::google::protobuf::int32 Order::refnum() const {
  // @@protoc_insertion_point(field_get:fantasybit.Order.refnum)
  return refnum_;
}
inline void Order::set_refnum(::google::protobuf::int32 value) {
  set_has_refnum();
  refnum_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.Order.refnum)
}

// optional .fantasybit.OrderCore core = 20;
inline bool Order::has_core() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Order::set_has_core() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Order::clear_has_core() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Order::clear_core() {
  if (core_ != NULL) core_->Clear();
  clear_has_core();
}
inline const ::fantasybit::OrderCore& Order::core() const {
  const ::fantasybit::OrderCore* p = core_;
  // @@protoc_insertion_point(field_get:fantasybit.Order.core)
  return p != NULL ? *p : *reinterpret_cast<const ::fantasybit::OrderCore*>(
      &::fantasybit::_OrderCore_default_instance_);
}
inline ::fantasybit::OrderCore* Order::release_core() {
  // @@protoc_insertion_point(field_release:fantasybit.Order.core)
  clear_has_core();
  ::fantasybit::OrderCore* temp = core_;
  core_ = NULL;
  return temp;
}
inline ::fantasybit::OrderCore* Order::mutable_core() {
  set_has_core();
  if (core_ == NULL) {
    core_ = new ::fantasybit::OrderCore;
  }
  // @@protoc_insertion_point(field_mutable:fantasybit.Order.core)
  return core_;
}
inline void Order::set_allocated_core(::fantasybit::OrderCore* core) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete core_;
  }
  if (core) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      core = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, core, submessage_arena);
    }
    set_has_core();
  } else {
    clear_has_core();
  }
  core_ = core;
  // @@protoc_insertion_point(field_set_allocated:fantasybit.Order.core)
}

// -------------------------------------------------------------------

// OrderFill

// optional .fantasybit.Order left = 10;
inline bool OrderFill::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderFill::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderFill::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderFill::clear_left() {
  if (left_ != NULL) left_->Clear();
  clear_has_left();
}
inline const ::fantasybit::Order& OrderFill::left() const {
  const ::fantasybit::Order* p = left_;
  // @@protoc_insertion_point(field_get:fantasybit.OrderFill.left)
  return p != NULL ? *p : *reinterpret_cast<const ::fantasybit::Order*>(
      &::fantasybit::_Order_default_instance_);
}
inline ::fantasybit::Order* OrderFill::release_left() {
  // @@protoc_insertion_point(field_release:fantasybit.OrderFill.left)
  clear_has_left();
  ::fantasybit::Order* temp = left_;
  left_ = NULL;
  return temp;
}
inline ::fantasybit::Order* OrderFill::mutable_left() {
  set_has_left();
  if (left_ == NULL) {
    left_ = new ::fantasybit::Order;
  }
  // @@protoc_insertion_point(field_mutable:fantasybit.OrderFill.left)
  return left_;
}
inline void OrderFill::set_allocated_left(::fantasybit::Order* left) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete left_;
  }
  if (left) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      left = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, left, submessage_arena);
    }
    set_has_left();
  } else {
    clear_has_left();
  }
  left_ = left;
  // @@protoc_insertion_point(field_set_allocated:fantasybit.OrderFill.left)
}

// optional int32 fillprice = 20;
inline bool OrderFill::has_fillprice() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderFill::set_has_fillprice() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderFill::clear_has_fillprice() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderFill::clear_fillprice() {
  fillprice_ = 0;
  clear_has_fillprice();
}
inline ::google::protobuf::int32 OrderFill::fillprice() const {
  // @@protoc_insertion_point(field_get:fantasybit.OrderFill.fillprice)
  return fillprice_;
}
inline void OrderFill::set_fillprice(::google::protobuf::int32 value) {
  set_has_fillprice();
  fillprice_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.OrderFill.fillprice)
}

// optional int32 fillsize = 30;
inline bool OrderFill::has_fillsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderFill::set_has_fillsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderFill::clear_has_fillsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderFill::clear_fillsize() {
  fillsize_ = 0;
  clear_has_fillsize();
}
inline ::google::protobuf::int32 OrderFill::fillsize() const {
  // @@protoc_insertion_point(field_get:fantasybit.OrderFill.fillsize)
  return fillsize_;
}
inline void OrderFill::set_fillsize(::google::protobuf::int32 value) {
  set_has_fillsize();
  fillsize_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.OrderFill.fillsize)
}

// optional int32 timestamp = 40;
inline bool OrderFill::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderFill::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderFill::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderFill::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 OrderFill::timestamp() const {
  // @@protoc_insertion_point(field_get:fantasybit.OrderFill.timestamp)
  return timestamp_;
}
inline void OrderFill::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.OrderFill.timestamp)
}

// -------------------------------------------------------------------

// MarketTicker

// optional .fantasybit.MarketTicker.Type type = 1;
inline bool MarketTicker::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketTicker::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketTicker::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketTicker::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::fantasybit::MarketTicker_Type MarketTicker::type() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketTicker.type)
  return static_cast< ::fantasybit::MarketTicker_Type >(type_);
}
inline void MarketTicker::set_type(::fantasybit::MarketTicker_Type value) {
  assert(::fantasybit::MarketTicker_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketTicker.type)
}

// optional string symbol = 2;
inline bool MarketTicker::has_symbol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketTicker::set_has_symbol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketTicker::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketTicker::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_symbol();
}
inline const ::std::string& MarketTicker::symbol() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketTicker.symbol)
  return symbol_.GetNoArena();
}
inline void MarketTicker::set_symbol(const ::std::string& value) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.MarketTicker.symbol)
}
#if LANG_CXX11
inline void MarketTicker::set_symbol(::std::string&& value) {
  set_has_symbol();
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.MarketTicker.symbol)
}
#endif
inline void MarketTicker::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.MarketTicker.symbol)
}
inline void MarketTicker::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.MarketTicker.symbol)
}
inline ::std::string* MarketTicker::mutable_symbol() {
  set_has_symbol();
  // @@protoc_insertion_point(field_mutable:fantasybit.MarketTicker.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MarketTicker::release_symbol() {
  // @@protoc_insertion_point(field_release:fantasybit.MarketTicker.symbol)
  clear_has_symbol();
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MarketTicker::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.MarketTicker.symbol)
}

// optional int32 size = 20;
inline bool MarketTicker::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketTicker::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketTicker::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketTicker::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 MarketTicker::size() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketTicker.size)
  return size_;
}
inline void MarketTicker::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketTicker.size)
}

// optional int32 price = 30;
inline bool MarketTicker::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketTicker::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketTicker::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketTicker::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 MarketTicker::price() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketTicker.price)
  return price_;
}
inline void MarketTicker::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketTicker.price)
}

// -------------------------------------------------------------------

// TradeTic

// optional string symbol = 2;
inline bool TradeTic::has_symbol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TradeTic::set_has_symbol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TradeTic::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TradeTic::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_symbol();
}
inline const ::std::string& TradeTic::symbol() const {
  // @@protoc_insertion_point(field_get:fantasybit.TradeTic.symbol)
  return symbol_.GetNoArena();
}
inline void TradeTic::set_symbol(const ::std::string& value) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.TradeTic.symbol)
}
#if LANG_CXX11
inline void TradeTic::set_symbol(::std::string&& value) {
  set_has_symbol();
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.TradeTic.symbol)
}
#endif
inline void TradeTic::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.TradeTic.symbol)
}
inline void TradeTic::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.TradeTic.symbol)
}
inline ::std::string* TradeTic::mutable_symbol() {
  set_has_symbol();
  // @@protoc_insertion_point(field_mutable:fantasybit.TradeTic.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TradeTic::release_symbol() {
  // @@protoc_insertion_point(field_release:fantasybit.TradeTic.symbol)
  clear_has_symbol();
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TradeTic::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.TradeTic.symbol)
}

// optional int32 size = 20;
inline bool TradeTic::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TradeTic::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TradeTic::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TradeTic::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 TradeTic::size() const {
  // @@protoc_insertion_point(field_get:fantasybit.TradeTic.size)
  return size_;
}
inline void TradeTic::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.TradeTic.size)
}

// optional int32 price = 30;
inline bool TradeTic::has_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TradeTic::set_has_price() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TradeTic::clear_has_price() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TradeTic::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 TradeTic::price() const {
  // @@protoc_insertion_point(field_get:fantasybit.TradeTic.price)
  return price_;
}
inline void TradeTic::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.TradeTic.price)
}

// optional int32 ishigh = 40;
inline bool TradeTic::has_ishigh() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TradeTic::set_has_ishigh() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TradeTic::clear_has_ishigh() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TradeTic::clear_ishigh() {
  ishigh_ = 0;
  clear_has_ishigh();
}
inline ::google::protobuf::int32 TradeTic::ishigh() const {
  // @@protoc_insertion_point(field_get:fantasybit.TradeTic.ishigh)
  return ishigh_;
}
inline void TradeTic::set_ishigh(::google::protobuf::int32 value) {
  set_has_ishigh();
  ishigh_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.TradeTic.ishigh)
}

// optional int32 islow = 45;
inline bool TradeTic::has_islow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void TradeTic::set_has_islow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void TradeTic::clear_has_islow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void TradeTic::clear_islow() {
  islow_ = 0;
  clear_has_islow();
}
inline ::google::protobuf::int32 TradeTic::islow() const {
  // @@protoc_insertion_point(field_get:fantasybit.TradeTic.islow)
  return islow_;
}
inline void TradeTic::set_islow(::google::protobuf::int32 value) {
  set_has_islow();
  islow_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.TradeTic.islow)
}

// optional int32 change = 50;
inline bool TradeTic::has_change() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void TradeTic::set_has_change() {
  _has_bits_[0] |= 0x00000020u;
}
inline void TradeTic::clear_has_change() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void TradeTic::clear_change() {
  change_ = 0;
  clear_has_change();
}
inline ::google::protobuf::int32 TradeTic::change() const {
  // @@protoc_insertion_point(field_get:fantasybit.TradeTic.change)
  return change_;
}
inline void TradeTic::set_change(::google::protobuf::int32 value) {
  set_has_change();
  change_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.TradeTic.change)
}

// optional int32 tic = 60;
inline bool TradeTic::has_tic() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void TradeTic::set_has_tic() {
  _has_bits_[0] |= 0x00000040u;
}
inline void TradeTic::clear_has_tic() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void TradeTic::clear_tic() {
  tic_ = 0;
  clear_has_tic();
}
inline ::google::protobuf::int32 TradeTic::tic() const {
  // @@protoc_insertion_point(field_get:fantasybit.TradeTic.tic)
  return tic_;
}
inline void TradeTic::set_tic(::google::protobuf::int32 value) {
  set_has_tic();
  tic_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.TradeTic.tic)
}

// -------------------------------------------------------------------

// DepthFeedDelta

// optional string symbol = 1;
inline bool DepthFeedDelta::has_symbol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepthFeedDelta::set_has_symbol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DepthFeedDelta::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DepthFeedDelta::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_symbol();
}
inline const ::std::string& DepthFeedDelta::symbol() const {
  // @@protoc_insertion_point(field_get:fantasybit.DepthFeedDelta.symbol)
  return symbol_.GetNoArena();
}
inline void DepthFeedDelta::set_symbol(const ::std::string& value) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.DepthFeedDelta.symbol)
}
#if LANG_CXX11
inline void DepthFeedDelta::set_symbol(::std::string&& value) {
  set_has_symbol();
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.DepthFeedDelta.symbol)
}
#endif
inline void DepthFeedDelta::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.DepthFeedDelta.symbol)
}
inline void DepthFeedDelta::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.DepthFeedDelta.symbol)
}
inline ::std::string* DepthFeedDelta::mutable_symbol() {
  set_has_symbol();
  // @@protoc_insertion_point(field_mutable:fantasybit.DepthFeedDelta.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DepthFeedDelta::release_symbol() {
  // @@protoc_insertion_point(field_release:fantasybit.DepthFeedDelta.symbol)
  clear_has_symbol();
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DepthFeedDelta::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.DepthFeedDelta.symbol)
}

// optional bool isbid = 10;
inline bool DepthFeedDelta::has_isbid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DepthFeedDelta::set_has_isbid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DepthFeedDelta::clear_has_isbid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DepthFeedDelta::clear_isbid() {
  isbid_ = false;
  clear_has_isbid();
}
inline bool DepthFeedDelta::isbid() const {
  // @@protoc_insertion_point(field_get:fantasybit.DepthFeedDelta.isbid)
  return isbid_;
}
inline void DepthFeedDelta::set_isbid(bool value) {
  set_has_isbid();
  isbid_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.DepthFeedDelta.isbid)
}

// optional int32 size = 20;
inline bool DepthFeedDelta::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DepthFeedDelta::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DepthFeedDelta::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DepthFeedDelta::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 DepthFeedDelta::size() const {
  // @@protoc_insertion_point(field_get:fantasybit.DepthFeedDelta.size)
  return size_;
}
inline void DepthFeedDelta::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.DepthFeedDelta.size)
}

// optional int32 price = 30;
inline bool DepthFeedDelta::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepthFeedDelta::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DepthFeedDelta::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DepthFeedDelta::clear_price() {
  price_ = 0;
  clear_has_price();
}
inline ::google::protobuf::int32 DepthFeedDelta::price() const {
  // @@protoc_insertion_point(field_get:fantasybit.DepthFeedDelta.price)
  return price_;
}
inline void DepthFeedDelta::set_price(::google::protobuf::int32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.DepthFeedDelta.price)
}

// -------------------------------------------------------------------

// ContractOHLC

// optional string symbol = 10;
inline bool ContractOHLC::has_symbol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ContractOHLC::set_has_symbol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ContractOHLC::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ContractOHLC::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_symbol();
}
inline const ::std::string& ContractOHLC::symbol() const {
  // @@protoc_insertion_point(field_get:fantasybit.ContractOHLC.symbol)
  return symbol_.GetNoArena();
}
inline void ContractOHLC::set_symbol(const ::std::string& value) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.ContractOHLC.symbol)
}
#if LANG_CXX11
inline void ContractOHLC::set_symbol(::std::string&& value) {
  set_has_symbol();
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.ContractOHLC.symbol)
}
#endif
inline void ContractOHLC::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.ContractOHLC.symbol)
}
inline void ContractOHLC::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.ContractOHLC.symbol)
}
inline ::std::string* ContractOHLC::mutable_symbol() {
  set_has_symbol();
  // @@protoc_insertion_point(field_mutable:fantasybit.ContractOHLC.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContractOHLC::release_symbol() {
  // @@protoc_insertion_point(field_release:fantasybit.ContractOHLC.symbol)
  clear_has_symbol();
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContractOHLC::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.ContractOHLC.symbol)
}

// optional int32 open = 20;
inline bool ContractOHLC::has_open() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ContractOHLC::set_has_open() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ContractOHLC::clear_has_open() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ContractOHLC::clear_open() {
  open_ = 0;
  clear_has_open();
}
inline ::google::protobuf::int32 ContractOHLC::open() const {
  // @@protoc_insertion_point(field_get:fantasybit.ContractOHLC.open)
  return open_;
}
inline void ContractOHLC::set_open(::google::protobuf::int32 value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.ContractOHLC.open)
}

// optional int32 high = 30;
inline bool ContractOHLC::has_high() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ContractOHLC::set_has_high() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ContractOHLC::clear_has_high() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ContractOHLC::clear_high() {
  high_ = 0;
  clear_has_high();
}
inline ::google::protobuf::int32 ContractOHLC::high() const {
  // @@protoc_insertion_point(field_get:fantasybit.ContractOHLC.high)
  return high_;
}
inline void ContractOHLC::set_high(::google::protobuf::int32 value) {
  set_has_high();
  high_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.ContractOHLC.high)
}

// optional int32 low = 40;
inline bool ContractOHLC::has_low() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ContractOHLC::set_has_low() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ContractOHLC::clear_has_low() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ContractOHLC::clear_low() {
  low_ = 0;
  clear_has_low();
}
inline ::google::protobuf::int32 ContractOHLC::low() const {
  // @@protoc_insertion_point(field_get:fantasybit.ContractOHLC.low)
  return low_;
}
inline void ContractOHLC::set_low(::google::protobuf::int32 value) {
  set_has_low();
  low_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.ContractOHLC.low)
}

// optional int32 close = 50;
inline bool ContractOHLC::has_close() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ContractOHLC::set_has_close() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ContractOHLC::clear_has_close() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ContractOHLC::clear_close() {
  close_ = 0;
  clear_has_close();
}
inline ::google::protobuf::int32 ContractOHLC::close() const {
  // @@protoc_insertion_point(field_get:fantasybit.ContractOHLC.close)
  return close_;
}
inline void ContractOHLC::set_close(::google::protobuf::int32 value) {
  set_has_close();
  close_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.ContractOHLC.close)
}

// optional int32 volume = 60;
inline bool ContractOHLC::has_volume() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ContractOHLC::set_has_volume() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ContractOHLC::clear_has_volume() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ContractOHLC::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
inline ::google::protobuf::int32 ContractOHLC::volume() const {
  // @@protoc_insertion_point(field_get:fantasybit.ContractOHLC.volume)
  return volume_;
}
inline void ContractOHLC::set_volume(::google::protobuf::int32 value) {
  set_has_volume();
  volume_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.ContractOHLC.volume)
}

// optional int32 change = 70;
inline bool ContractOHLC::has_change() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ContractOHLC::set_has_change() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ContractOHLC::clear_has_change() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ContractOHLC::clear_change() {
  change_ = 0;
  clear_has_change();
}
inline ::google::protobuf::int32 ContractOHLC::change() const {
  // @@protoc_insertion_point(field_get:fantasybit.ContractOHLC.change)
  return change_;
}
inline void ContractOHLC::set_change(::google::protobuf::int32 value) {
  set_has_change();
  change_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.ContractOHLC.change)
}

// -------------------------------------------------------------------

// DepthItem

// optional int32 level = 10;
inline bool DepthItem::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DepthItem::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DepthItem::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DepthItem::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 DepthItem::level() const {
  // @@protoc_insertion_point(field_get:fantasybit.DepthItem.level)
  return level_;
}
inline void DepthItem::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.DepthItem.level)
}

// optional int32 b = 30;
inline bool DepthItem::has_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DepthItem::set_has_b() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DepthItem::clear_has_b() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DepthItem::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline ::google::protobuf::int32 DepthItem::b() const {
  // @@protoc_insertion_point(field_get:fantasybit.DepthItem.b)
  return b_;
}
inline void DepthItem::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.DepthItem.b)
}

// optional int32 a = 40;
inline bool DepthItem::has_a() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DepthItem::set_has_a() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DepthItem::clear_has_a() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DepthItem::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline ::google::protobuf::int32 DepthItem::a() const {
  // @@protoc_insertion_point(field_get:fantasybit.DepthItem.a)
  return a_;
}
inline void DepthItem::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.DepthItem.a)
}

// optional int32 bs = 50;
inline bool DepthItem::has_bs() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void DepthItem::set_has_bs() {
  _has_bits_[0] |= 0x00000010u;
}
inline void DepthItem::clear_has_bs() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void DepthItem::clear_bs() {
  bs_ = 0;
  clear_has_bs();
}
inline ::google::protobuf::int32 DepthItem::bs() const {
  // @@protoc_insertion_point(field_get:fantasybit.DepthItem.bs)
  return bs_;
}
inline void DepthItem::set_bs(::google::protobuf::int32 value) {
  set_has_bs();
  bs_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.DepthItem.bs)
}

// optional int32 as = 60;
inline bool DepthItem::has_as() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DepthItem::set_has_as() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DepthItem::clear_has_as() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DepthItem::clear_as() {
  as_ = 0;
  clear_has_as();
}
inline ::google::protobuf::int32 DepthItem::as() const {
  // @@protoc_insertion_point(field_get:fantasybit.DepthItem.as)
  return as_;
}
inline void DepthItem::set_as(::google::protobuf::int32 value) {
  set_has_as();
  as_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.DepthItem.as)
}

// -------------------------------------------------------------------

// BookDelta

// optional string fantasy_name = 10;
inline bool BookDelta::has_fantasy_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BookDelta::set_has_fantasy_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BookDelta::clear_has_fantasy_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BookDelta::clear_fantasy_name() {
  fantasy_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fantasy_name();
}
inline const ::std::string& BookDelta::fantasy_name() const {
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.fantasy_name)
  return fantasy_name_.GetNoArena();
}
inline void BookDelta::set_fantasy_name(const ::std::string& value) {
  set_has_fantasy_name();
  fantasy_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.BookDelta.fantasy_name)
}
#if LANG_CXX11
inline void BookDelta::set_fantasy_name(::std::string&& value) {
  set_has_fantasy_name();
  fantasy_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.BookDelta.fantasy_name)
}
#endif
inline void BookDelta::set_fantasy_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fantasy_name();
  fantasy_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.BookDelta.fantasy_name)
}
inline void BookDelta::set_fantasy_name(const char* value, size_t size) {
  set_has_fantasy_name();
  fantasy_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.BookDelta.fantasy_name)
}
inline ::std::string* BookDelta::mutable_fantasy_name() {
  set_has_fantasy_name();
  // @@protoc_insertion_point(field_mutable:fantasybit.BookDelta.fantasy_name)
  return fantasy_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BookDelta::release_fantasy_name() {
  // @@protoc_insertion_point(field_release:fantasybit.BookDelta.fantasy_name)
  clear_has_fantasy_name();
  return fantasy_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BookDelta::set_allocated_fantasy_name(::std::string* fantasy_name) {
  if (fantasy_name != NULL) {
    set_has_fantasy_name();
  } else {
    clear_has_fantasy_name();
  }
  fantasy_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fantasy_name);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.BookDelta.fantasy_name)
}

// optional int32 seqnum = 20;
inline bool BookDelta::has_seqnum() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BookDelta::set_has_seqnum() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BookDelta::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BookDelta::clear_seqnum() {
  seqnum_ = 0;
  clear_has_seqnum();
}
inline ::google::protobuf::int32 BookDelta::seqnum() const {
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.seqnum)
  return seqnum_;
}
inline void BookDelta::set_seqnum(::google::protobuf::int32 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.BookDelta.seqnum)
}

// optional string playerid = 30;
inline bool BookDelta::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BookDelta::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BookDelta::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BookDelta::clear_playerid() {
  playerid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playerid();
}
inline const ::std::string& BookDelta::playerid() const {
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.playerid)
  return playerid_.GetNoArena();
}
inline void BookDelta::set_playerid(const ::std::string& value) {
  set_has_playerid();
  playerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.BookDelta.playerid)
}
#if LANG_CXX11
inline void BookDelta::set_playerid(::std::string&& value) {
  set_has_playerid();
  playerid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.BookDelta.playerid)
}
#endif
inline void BookDelta::set_playerid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_playerid();
  playerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.BookDelta.playerid)
}
inline void BookDelta::set_playerid(const char* value, size_t size) {
  set_has_playerid();
  playerid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.BookDelta.playerid)
}
inline ::std::string* BookDelta::mutable_playerid() {
  set_has_playerid();
  // @@protoc_insertion_point(field_mutable:fantasybit.BookDelta.playerid)
  return playerid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BookDelta::release_playerid() {
  // @@protoc_insertion_point(field_release:fantasybit.BookDelta.playerid)
  clear_has_playerid();
  return playerid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BookDelta::set_allocated_playerid(::std::string* playerid) {
  if (playerid != NULL) {
    set_has_playerid();
  } else {
    clear_has_playerid();
  }
  playerid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playerid);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.BookDelta.playerid)
}

// optional .fantasybit.OrderCore newnew = 40;
inline bool BookDelta::has_newnew() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BookDelta::set_has_newnew() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BookDelta::clear_has_newnew() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BookDelta::clear_newnew() {
  if (newnew_ != NULL) newnew_->Clear();
  clear_has_newnew();
}
inline const ::fantasybit::OrderCore& BookDelta::newnew() const {
  const ::fantasybit::OrderCore* p = newnew_;
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.newnew)
  return p != NULL ? *p : *reinterpret_cast<const ::fantasybit::OrderCore*>(
      &::fantasybit::_OrderCore_default_instance_);
}
inline ::fantasybit::OrderCore* BookDelta::release_newnew() {
  // @@protoc_insertion_point(field_release:fantasybit.BookDelta.newnew)
  clear_has_newnew();
  ::fantasybit::OrderCore* temp = newnew_;
  newnew_ = NULL;
  return temp;
}
inline ::fantasybit::OrderCore* BookDelta::mutable_newnew() {
  set_has_newnew();
  if (newnew_ == NULL) {
    newnew_ = new ::fantasybit::OrderCore;
  }
  // @@protoc_insertion_point(field_mutable:fantasybit.BookDelta.newnew)
  return newnew_;
}
inline void BookDelta::set_allocated_newnew(::fantasybit::OrderCore* newnew) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete newnew_;
  }
  if (newnew) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      newnew = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, newnew, submessage_arena);
    }
    set_has_newnew();
  } else {
    clear_has_newnew();
  }
  newnew_ = newnew;
  // @@protoc_insertion_point(field_set_allocated:fantasybit.BookDelta.newnew)
}

// optional .fantasybit.ContractOHLC ohlc = 41;
inline bool BookDelta::has_ohlc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BookDelta::set_has_ohlc() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BookDelta::clear_has_ohlc() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BookDelta::clear_ohlc() {
  if (ohlc_ != NULL) ohlc_->Clear();
  clear_has_ohlc();
}
inline const ::fantasybit::ContractOHLC& BookDelta::ohlc() const {
  const ::fantasybit::ContractOHLC* p = ohlc_;
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.ohlc)
  return p != NULL ? *p : *reinterpret_cast<const ::fantasybit::ContractOHLC*>(
      &::fantasybit::_ContractOHLC_default_instance_);
}
inline ::fantasybit::ContractOHLC* BookDelta::release_ohlc() {
  // @@protoc_insertion_point(field_release:fantasybit.BookDelta.ohlc)
  clear_has_ohlc();
  ::fantasybit::ContractOHLC* temp = ohlc_;
  ohlc_ = NULL;
  return temp;
}
inline ::fantasybit::ContractOHLC* BookDelta::mutable_ohlc() {
  set_has_ohlc();
  if (ohlc_ == NULL) {
    ohlc_ = new ::fantasybit::ContractOHLC;
  }
  // @@protoc_insertion_point(field_mutable:fantasybit.BookDelta.ohlc)
  return ohlc_;
}
inline void BookDelta::set_allocated_ohlc(::fantasybit::ContractOHLC* ohlc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ohlc_;
  }
  if (ohlc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ohlc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ohlc, submessage_arena);
    }
    set_has_ohlc();
  } else {
    clear_has_ohlc();
  }
  ohlc_ = ohlc;
  // @@protoc_insertion_point(field_set_allocated:fantasybit.BookDelta.ohlc)
}

// repeated .fantasybit.Order removes = 50;
inline int BookDelta::removes_size() const {
  return removes_.size();
}
inline void BookDelta::clear_removes() {
  removes_.Clear();
}
inline const ::fantasybit::Order& BookDelta::removes(int index) const {
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.removes)
  return removes_.Get(index);
}
inline ::fantasybit::Order* BookDelta::mutable_removes(int index) {
  // @@protoc_insertion_point(field_mutable:fantasybit.BookDelta.removes)
  return removes_.Mutable(index);
}
inline ::fantasybit::Order* BookDelta::add_removes() {
  // @@protoc_insertion_point(field_add:fantasybit.BookDelta.removes)
  return removes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::fantasybit::Order >*
BookDelta::mutable_removes() {
  // @@protoc_insertion_point(field_mutable_list:fantasybit.BookDelta.removes)
  return &removes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::fantasybit::Order >&
BookDelta::removes() const {
  // @@protoc_insertion_point(field_list:fantasybit.BookDelta.removes)
  return removes_;
}

// repeated .fantasybit.MarketTicker level2tic = 60;
inline int BookDelta::level2tic_size() const {
  return level2tic_.size();
}
inline void BookDelta::clear_level2tic() {
  level2tic_.Clear();
}
inline const ::fantasybit::MarketTicker& BookDelta::level2tic(int index) const {
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.level2tic)
  return level2tic_.Get(index);
}
inline ::fantasybit::MarketTicker* BookDelta::mutable_level2tic(int index) {
  // @@protoc_insertion_point(field_mutable:fantasybit.BookDelta.level2tic)
  return level2tic_.Mutable(index);
}
inline ::fantasybit::MarketTicker* BookDelta::add_level2tic() {
  // @@protoc_insertion_point(field_add:fantasybit.BookDelta.level2tic)
  return level2tic_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker >*
BookDelta::mutable_level2tic() {
  // @@protoc_insertion_point(field_mutable_list:fantasybit.BookDelta.level2tic)
  return &level2tic_;
}
inline const ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker >&
BookDelta::level2tic() const {
  // @@protoc_insertion_point(field_list:fantasybit.BookDelta.level2tic)
  return level2tic_;
}

// repeated .fantasybit.MarketTicker level1tic = 70;
inline int BookDelta::level1tic_size() const {
  return level1tic_.size();
}
inline void BookDelta::clear_level1tic() {
  level1tic_.Clear();
}
inline const ::fantasybit::MarketTicker& BookDelta::level1tic(int index) const {
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.level1tic)
  return level1tic_.Get(index);
}
inline ::fantasybit::MarketTicker* BookDelta::mutable_level1tic(int index) {
  // @@protoc_insertion_point(field_mutable:fantasybit.BookDelta.level1tic)
  return level1tic_.Mutable(index);
}
inline ::fantasybit::MarketTicker* BookDelta::add_level1tic() {
  // @@protoc_insertion_point(field_add:fantasybit.BookDelta.level1tic)
  return level1tic_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker >*
BookDelta::mutable_level1tic() {
  // @@protoc_insertion_point(field_mutable_list:fantasybit.BookDelta.level1tic)
  return &level1tic_;
}
inline const ::google::protobuf::RepeatedPtrField< ::fantasybit::MarketTicker >&
BookDelta::level1tic() const {
  // @@protoc_insertion_point(field_list:fantasybit.BookDelta.level1tic)
  return level1tic_;
}

// optional int32 blocknum = 80;
inline bool BookDelta::has_blocknum() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BookDelta::set_has_blocknum() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BookDelta::clear_has_blocknum() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BookDelta::clear_blocknum() {
  blocknum_ = 0;
  clear_has_blocknum();
}
inline ::google::protobuf::int32 BookDelta::blocknum() const {
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.blocknum)
  return blocknum_;
}
inline void BookDelta::set_blocknum(::google::protobuf::int32 value) {
  set_has_blocknum();
  blocknum_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.BookDelta.blocknum)
}

// optional string symbol = 90;
inline bool BookDelta::has_symbol() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BookDelta::set_has_symbol() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BookDelta::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BookDelta::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_symbol();
}
inline const ::std::string& BookDelta::symbol() const {
  // @@protoc_insertion_point(field_get:fantasybit.BookDelta.symbol)
  return symbol_.GetNoArena();
}
inline void BookDelta::set_symbol(const ::std::string& value) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.BookDelta.symbol)
}
#if LANG_CXX11
inline void BookDelta::set_symbol(::std::string&& value) {
  set_has_symbol();
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.BookDelta.symbol)
}
#endif
inline void BookDelta::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.BookDelta.symbol)
}
inline void BookDelta::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.BookDelta.symbol)
}
inline ::std::string* BookDelta::mutable_symbol() {
  set_has_symbol();
  // @@protoc_insertion_point(field_mutable:fantasybit.BookDelta.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BookDelta::release_symbol() {
  // @@protoc_insertion_point(field_release:fantasybit.BookDelta.symbol)
  clear_has_symbol();
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BookDelta::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.BookDelta.symbol)
}

// -------------------------------------------------------------------

// MarketQuote

// optional int32 bs = 10;
inline bool MarketQuote::has_bs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketQuote::set_has_bs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketQuote::clear_has_bs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketQuote::clear_bs() {
  bs_ = 0;
  clear_has_bs();
}
inline ::google::protobuf::int32 MarketQuote::bs() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketQuote.bs)
  return bs_;
}
inline void MarketQuote::set_bs(::google::protobuf::int32 value) {
  set_has_bs();
  bs_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketQuote.bs)
}

// optional int32 b = 20;
inline bool MarketQuote::has_b() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketQuote::set_has_b() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketQuote::clear_has_b() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketQuote::clear_b() {
  b_ = 0;
  clear_has_b();
}
inline ::google::protobuf::int32 MarketQuote::b() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketQuote.b)
  return b_;
}
inline void MarketQuote::set_b(::google::protobuf::int32 value) {
  set_has_b();
  b_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketQuote.b)
}

// optional int32 a = 30;
inline bool MarketQuote::has_a() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketQuote::set_has_a() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketQuote::clear_has_a() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketQuote::clear_a() {
  a_ = 0;
  clear_has_a();
}
inline ::google::protobuf::int32 MarketQuote::a() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketQuote.a)
  return a_;
}
inline void MarketQuote::set_a(::google::protobuf::int32 value) {
  set_has_a();
  a_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketQuote.a)
}

// optional int32 as = 40;
inline bool MarketQuote::has_as() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MarketQuote::set_has_as() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MarketQuote::clear_has_as() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MarketQuote::clear_as() {
  as_ = 0;
  clear_has_as();
}
inline ::google::protobuf::int32 MarketQuote::as() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketQuote.as)
  return as_;
}
inline void MarketQuote::set_as(::google::protobuf::int32 value) {
  set_has_as();
  as_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketQuote.as)
}

// optional int32 l = 50;
inline bool MarketQuote::has_l() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MarketQuote::set_has_l() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MarketQuote::clear_has_l() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MarketQuote::clear_l() {
  l_ = 0;
  clear_has_l();
}
inline ::google::protobuf::int32 MarketQuote::l() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketQuote.l)
  return l_;
}
inline void MarketQuote::set_l(::google::protobuf::int32 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketQuote.l)
}

// optional int32 ls = 60;
inline bool MarketQuote::has_ls() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MarketQuote::set_has_ls() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MarketQuote::clear_has_ls() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MarketQuote::clear_ls() {
  ls_ = 0;
  clear_has_ls();
}
inline ::google::protobuf::int32 MarketQuote::ls() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketQuote.ls)
  return ls_;
}
inline void MarketQuote::set_ls(::google::protobuf::int32 value) {
  set_has_ls();
  ls_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketQuote.ls)
}

// optional int32 udn = 70;
inline bool MarketQuote::has_udn() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketQuote::set_has_udn() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketQuote::clear_has_udn() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketQuote::clear_udn() {
  udn_ = 0;
  clear_has_udn();
}
inline ::google::protobuf::int32 MarketQuote::udn() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketQuote.udn)
  return udn_;
}
inline void MarketQuote::set_udn(::google::protobuf::int32 value) {
  set_has_udn();
  udn_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketQuote.udn)
}

// -------------------------------------------------------------------

// MarketSnapshot

// optional string symbol = 10;
inline bool MarketSnapshot::has_symbol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MarketSnapshot::set_has_symbol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MarketSnapshot::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MarketSnapshot::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_symbol();
}
inline const ::std::string& MarketSnapshot::symbol() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketSnapshot.symbol)
  return symbol_.GetNoArena();
}
inline void MarketSnapshot::set_symbol(const ::std::string& value) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.MarketSnapshot.symbol)
}
#if LANG_CXX11
inline void MarketSnapshot::set_symbol(::std::string&& value) {
  set_has_symbol();
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.MarketSnapshot.symbol)
}
#endif
inline void MarketSnapshot::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.MarketSnapshot.symbol)
}
inline void MarketSnapshot::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.MarketSnapshot.symbol)
}
inline ::std::string* MarketSnapshot::mutable_symbol() {
  set_has_symbol();
  // @@protoc_insertion_point(field_mutable:fantasybit.MarketSnapshot.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MarketSnapshot::release_symbol() {
  // @@protoc_insertion_point(field_release:fantasybit.MarketSnapshot.symbol)
  clear_has_symbol();
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MarketSnapshot::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.MarketSnapshot.symbol)
}

// optional int32 week = 11;
inline bool MarketSnapshot::has_week() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MarketSnapshot::set_has_week() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MarketSnapshot::clear_has_week() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MarketSnapshot::clear_week() {
  week_ = 0;
  clear_has_week();
}
inline ::google::protobuf::int32 MarketSnapshot::week() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketSnapshot.week)
  return week_;
}
inline void MarketSnapshot::set_week(::google::protobuf::int32 value) {
  set_has_week();
  week_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketSnapshot.week)
}

// repeated .fantasybit.DepthItem depth = 70;
inline int MarketSnapshot::depth_size() const {
  return depth_.size();
}
inline void MarketSnapshot::clear_depth() {
  depth_.Clear();
}
inline const ::fantasybit::DepthItem& MarketSnapshot::depth(int index) const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketSnapshot.depth)
  return depth_.Get(index);
}
inline ::fantasybit::DepthItem* MarketSnapshot::mutable_depth(int index) {
  // @@protoc_insertion_point(field_mutable:fantasybit.MarketSnapshot.depth)
  return depth_.Mutable(index);
}
inline ::fantasybit::DepthItem* MarketSnapshot::add_depth() {
  // @@protoc_insertion_point(field_add:fantasybit.MarketSnapshot.depth)
  return depth_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::fantasybit::DepthItem >*
MarketSnapshot::mutable_depth() {
  // @@protoc_insertion_point(field_mutable_list:fantasybit.MarketSnapshot.depth)
  return &depth_;
}
inline const ::google::protobuf::RepeatedPtrField< ::fantasybit::DepthItem >&
MarketSnapshot::depth() const {
  // @@protoc_insertion_point(field_list:fantasybit.MarketSnapshot.depth)
  return depth_;
}

// optional .fantasybit.ContractOHLC ohlc = 20;
inline bool MarketSnapshot::has_ohlc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MarketSnapshot::set_has_ohlc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MarketSnapshot::clear_has_ohlc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MarketSnapshot::clear_ohlc() {
  if (ohlc_ != NULL) ohlc_->Clear();
  clear_has_ohlc();
}
inline const ::fantasybit::ContractOHLC& MarketSnapshot::ohlc() const {
  const ::fantasybit::ContractOHLC* p = ohlc_;
  // @@protoc_insertion_point(field_get:fantasybit.MarketSnapshot.ohlc)
  return p != NULL ? *p : *reinterpret_cast<const ::fantasybit::ContractOHLC*>(
      &::fantasybit::_ContractOHLC_default_instance_);
}
inline ::fantasybit::ContractOHLC* MarketSnapshot::release_ohlc() {
  // @@protoc_insertion_point(field_release:fantasybit.MarketSnapshot.ohlc)
  clear_has_ohlc();
  ::fantasybit::ContractOHLC* temp = ohlc_;
  ohlc_ = NULL;
  return temp;
}
inline ::fantasybit::ContractOHLC* MarketSnapshot::mutable_ohlc() {
  set_has_ohlc();
  if (ohlc_ == NULL) {
    ohlc_ = new ::fantasybit::ContractOHLC;
  }
  // @@protoc_insertion_point(field_mutable:fantasybit.MarketSnapshot.ohlc)
  return ohlc_;
}
inline void MarketSnapshot::set_allocated_ohlc(::fantasybit::ContractOHLC* ohlc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ohlc_;
  }
  if (ohlc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ohlc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ohlc, submessage_arena);
    }
    set_has_ohlc();
  } else {
    clear_has_ohlc();
  }
  ohlc_ = ohlc;
  // @@protoc_insertion_point(field_set_allocated:fantasybit.MarketSnapshot.ohlc)
}

// optional .fantasybit.MarketQuote quote = 30;
inline bool MarketSnapshot::has_quote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MarketSnapshot::set_has_quote() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MarketSnapshot::clear_has_quote() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MarketSnapshot::clear_quote() {
  if (quote_ != NULL) quote_->Clear();
  clear_has_quote();
}
inline const ::fantasybit::MarketQuote& MarketSnapshot::quote() const {
  const ::fantasybit::MarketQuote* p = quote_;
  // @@protoc_insertion_point(field_get:fantasybit.MarketSnapshot.quote)
  return p != NULL ? *p : *reinterpret_cast<const ::fantasybit::MarketQuote*>(
      &::fantasybit::_MarketQuote_default_instance_);
}
inline ::fantasybit::MarketQuote* MarketSnapshot::release_quote() {
  // @@protoc_insertion_point(field_release:fantasybit.MarketSnapshot.quote)
  clear_has_quote();
  ::fantasybit::MarketQuote* temp = quote_;
  quote_ = NULL;
  return temp;
}
inline ::fantasybit::MarketQuote* MarketSnapshot::mutable_quote() {
  set_has_quote();
  if (quote_ == NULL) {
    quote_ = new ::fantasybit::MarketQuote;
  }
  // @@protoc_insertion_point(field_mutable:fantasybit.MarketSnapshot.quote)
  return quote_;
}
inline void MarketSnapshot::set_allocated_quote(::fantasybit::MarketQuote* quote) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete quote_;
  }
  if (quote) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      quote = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, quote, submessage_arena);
    }
    set_has_quote();
  } else {
    clear_has_quote();
  }
  quote_ = quote;
  // @@protoc_insertion_point(field_set_allocated:fantasybit.MarketSnapshot.quote)
}

// optional int32 blocknum = 40;
inline bool MarketSnapshot::has_blocknum() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MarketSnapshot::set_has_blocknum() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MarketSnapshot::clear_has_blocknum() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MarketSnapshot::clear_blocknum() {
  blocknum_ = 0;
  clear_has_blocknum();
}
inline ::google::protobuf::int32 MarketSnapshot::blocknum() const {
  // @@protoc_insertion_point(field_get:fantasybit.MarketSnapshot.blocknum)
  return blocknum_;
}
inline void MarketSnapshot::set_blocknum(::google::protobuf::int32 value) {
  set_has_blocknum();
  blocknum_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.MarketSnapshot.blocknum)
}

// -------------------------------------------------------------------

// FutContract

// optional .fantasybit.FutContract.Type type = 10;
inline bool FutContract::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FutContract::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FutContract::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FutContract::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::fantasybit::FutContract_Type FutContract::type() const {
  // @@protoc_insertion_point(field_get:fantasybit.FutContract.type)
  return static_cast< ::fantasybit::FutContract_Type >(type_);
}
inline void FutContract::set_type(::fantasybit::FutContract_Type value) {
  assert(::fantasybit::FutContract_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.FutContract.type)
}

// optional int32 season = 20;
inline bool FutContract::has_season() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FutContract::set_has_season() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FutContract::clear_has_season() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FutContract::clear_season() {
  season_ = 0;
  clear_has_season();
}
inline ::google::protobuf::int32 FutContract::season() const {
  // @@protoc_insertion_point(field_get:fantasybit.FutContract.season)
  return season_;
}
inline void FutContract::set_season(::google::protobuf::int32 value) {
  set_has_season();
  season_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.FutContract.season)
}

// optional int32 week = 30;
inline bool FutContract::has_week() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FutContract::set_has_week() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FutContract::clear_has_week() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FutContract::clear_week() {
  week_ = 0;
  clear_has_week();
}
inline ::google::protobuf::int32 FutContract::week() const {
  // @@protoc_insertion_point(field_get:fantasybit.FutContract.week)
  return week_;
}
inline void FutContract::set_week(::google::protobuf::int32 value) {
  set_has_week();
  week_ = value;
  // @@protoc_insertion_point(field_set:fantasybit.FutContract.week)
}

// optional string symbol = 40;
inline bool FutContract::has_symbol() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FutContract::set_has_symbol() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FutContract::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FutContract::clear_symbol() {
  symbol_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_symbol();
}
inline const ::std::string& FutContract::symbol() const {
  // @@protoc_insertion_point(field_get:fantasybit.FutContract.symbol)
  return symbol_.GetNoArena();
}
inline void FutContract::set_symbol(const ::std::string& value) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:fantasybit.FutContract.symbol)
}
#if LANG_CXX11
inline void FutContract::set_symbol(::std::string&& value) {
  set_has_symbol();
  symbol_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:fantasybit.FutContract.symbol)
}
#endif
inline void FutContract::set_symbol(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:fantasybit.FutContract.symbol)
}
inline void FutContract::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  symbol_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:fantasybit.FutContract.symbol)
}
inline ::std::string* FutContract::mutable_symbol() {
  set_has_symbol();
  // @@protoc_insertion_point(field_mutable:fantasybit.FutContract.symbol)
  return symbol_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FutContract::release_symbol() {
  // @@protoc_insertion_point(field_release:fantasybit.FutContract.symbol)
  clear_has_symbol();
  return symbol_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FutContract::set_allocated_symbol(::std::string* symbol) {
  if (symbol != NULL) {
    set_has_symbol();
  } else {
    clear_has_symbol();
  }
  symbol_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), symbol);
  // @@protoc_insertion_point(field_set_allocated:fantasybit.FutContract.symbol)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace fantasybit

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::fantasybit::MarketTicker_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fantasybit::MarketTicker_Type>() {
  return ::fantasybit::MarketTicker_Type_descriptor();
}
template <> struct is_proto_enum< ::fantasybit::FutContract_Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::fantasybit::FutContract_Type>() {
  return ::fantasybit::FutContract_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ExData_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StatusData.proto

#include "StatusData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace fantasybit {
class PlayerStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerStatus>
      _instance;
} _PlayerStatus_default_instance_;
class GameStatusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameStatus>
      _instance;
} _GameStatus_default_instance_;
class TeamDepthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TeamDepth>
      _instance;
} _TeamDepth_default_instance_;
class GlobalStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GlobalState>
      _instance;
} _GlobalState_default_instance_;
}  // namespace fantasybit
namespace protobuf_StatusData_2eproto {
void InitDefaultsPlayerStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_StaticData_2eproto::InitDefaultsPlayerResult();
  {
    void* ptr = &::fantasybit::_PlayerStatus_default_instance_;
    new (ptr) ::fantasybit::PlayerStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::PlayerStatus::InitAsDefaultInstance();
}

void InitDefaultsPlayerStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerStatusImpl);
}

void InitDefaultsGameStatusImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_GameStatus_default_instance_;
    new (ptr) ::fantasybit::GameStatus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GameStatus::InitAsDefaultInstance();
}

void InitDefaultsGameStatus() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameStatusImpl);
}

void InitDefaultsTeamDepthImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_TeamDepth_default_instance_;
    new (ptr) ::fantasybit::TeamDepth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::TeamDepth::InitAsDefaultInstance();
}

void InitDefaultsTeamDepth() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTeamDepthImpl);
}

void InitDefaultsGlobalStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::fantasybit::_GlobalState_default_instance_;
    new (ptr) ::fantasybit::GlobalState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::fantasybit::GlobalState::InitAsDefaultInstance();
}

void InitDefaultsGlobalState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGlobalStateImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerStatus, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerStatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerStatus, totals_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::PlayerStatus, symbol_),
  0,
  3,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatus, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GameStatus, datetime_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamDepth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamDepth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamDepth, qb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamDepth, rb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamDepth, wr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamDepth, te_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::TeamDepth, k_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalState, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalState, season_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::fantasybit::GlobalState, week_),
  2,
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::fantasybit::PlayerStatus)},
  { 13, 20, sizeof(::fantasybit::GameStatus)},
  { 22, 32, sizeof(::fantasybit::TeamDepth)},
  { 37, 45, sizeof(::fantasybit::GlobalState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_PlayerStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GameStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_TeamDepth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::fantasybit::_GlobalState_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "StatusData.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020StatusData.proto\022\nfantasybit\032\020StaticDa"
      "ta.proto\"\300\001\n\014PlayerStatus\022\016\n\006teamid\030\024 \001("
      "\t\022/\n\006status\030\036 \001(\0162\037.fantasybit.PlayerSta"
      "tus.Status\022(\n\006totals\030( \001(\0132\030.fantasybit."
      "PlayerResult\022\016\n\006symbol\0302 \001(\t\"5\n\006Status\022\n"
      "\n\006ACTIVE\020\000\022\014\n\010INACTIVE\020\001\022\t\n\005OTHER\020\003\022\006\n\002F"
      "A\020\004\"\231\001\n\nGameStatus\022-\n\006status\030\n \001(\0162\035.fan"
      "tasybit.GameStatus.Status\022\020\n\010datetime\030\024 "
      "\001(\r\"J\n\006Status\022\r\n\tSCHEDULED\020\000\022\013\n\007PREGAME\020"
      "\002\022\n\n\006INGAME\020\003\022\014\n\010POSTGAME\020\005\022\n\n\006CLOSED\020\004\""
      "F\n\tTeamDepth\022\n\n\002qb\030\n \003(\t\022\n\n\002rb\030\024 \003(\t\022\n\n\002"
      "wr\030\036 \003(\t\022\n\n\002te\030( \003(\t\022\t\n\001k\0302 \003(\t\"\177\n\013Globa"
      "lState\022,\n\005state\030\001 \001(\0162\035.fantasybit.Globa"
      "lState.State\022\016\n\006season\030\n \001(\r\022\014\n\004week\030\024 \001"
      "(\r\"$\n\005State\022\r\n\tOFFSEASON\020\n\022\014\n\010INSEASON\020\036"
      "*+\n\020PlayerGameStatus\022\007\n\003OUT\020\000\022\006\n\002IN\020\001\022\006\n"
      "\002NA\020\002"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 645);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "StatusData.proto", &protobuf_RegisterTypes);
  ::protobuf_StaticData_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_StatusData_2eproto
namespace fantasybit {
const ::google::protobuf::EnumDescriptor* PlayerStatus_Status_descriptor() {
  protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StatusData_2eproto::file_level_enum_descriptors[0];
}
bool PlayerStatus_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PlayerStatus_Status PlayerStatus::ACTIVE;
const PlayerStatus_Status PlayerStatus::INACTIVE;
const PlayerStatus_Status PlayerStatus::OTHER;
const PlayerStatus_Status PlayerStatus::FA;
const PlayerStatus_Status PlayerStatus::Status_MIN;
const PlayerStatus_Status PlayerStatus::Status_MAX;
const int PlayerStatus::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GameStatus_Status_descriptor() {
  protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StatusData_2eproto::file_level_enum_descriptors[1];
}
bool GameStatus_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GameStatus_Status GameStatus::SCHEDULED;
const GameStatus_Status GameStatus::PREGAME;
const GameStatus_Status GameStatus::INGAME;
const GameStatus_Status GameStatus::POSTGAME;
const GameStatus_Status GameStatus::CLOSED;
const GameStatus_Status GameStatus::Status_MIN;
const GameStatus_Status GameStatus::Status_MAX;
const int GameStatus::Status_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* GlobalState_State_descriptor() {
  protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StatusData_2eproto::file_level_enum_descriptors[2];
}
bool GlobalState_State_IsValid(int value) {
  switch (value) {
    case 10:
    case 30:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GlobalState_State GlobalState::OFFSEASON;
const GlobalState_State GlobalState::INSEASON;
const GlobalState_State GlobalState::State_MIN;
const GlobalState_State GlobalState::State_MAX;
const int GlobalState::State_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PlayerGameStatus_descriptor() {
  protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_StatusData_2eproto::file_level_enum_descriptors[3];
}
bool PlayerGameStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PlayerStatus::InitAsDefaultInstance() {
  ::fantasybit::_PlayerStatus_default_instance_._instance.get_mutable()->totals_ = const_cast< ::fantasybit::PlayerResult*>(
      ::fantasybit::PlayerResult::internal_default_instance());
}
void PlayerStatus::clear_totals() {
  if (totals_ != NULL) totals_->Clear();
  clear_has_totals();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerStatus::kTeamidFieldNumber;
const int PlayerStatus::kStatusFieldNumber;
const int PlayerStatus::kTotalsFieldNumber;
const int PlayerStatus::kSymbolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerStatus::PlayerStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StatusData_2eproto::InitDefaultsPlayerStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.PlayerStatus)
}
PlayerStatus::PlayerStatus(const PlayerStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  teamid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_teamid()) {
    teamid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamid_);
  }
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_symbol()) {
    symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
  }
  if (from.has_totals()) {
    totals_ = new ::fantasybit::PlayerResult(*from.totals_);
  } else {
    totals_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:fantasybit.PlayerStatus)
}

void PlayerStatus::SharedCtor() {
  _cached_size_ = 0;
  teamid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&totals_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&totals_)) + sizeof(status_));
}

PlayerStatus::~PlayerStatus() {
  // @@protoc_insertion_point(destructor:fantasybit.PlayerStatus)
  SharedDtor();
}

void PlayerStatus::SharedDtor() {
  teamid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete totals_;
}

void PlayerStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerStatus::descriptor() {
  ::protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StatusData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerStatus& PlayerStatus::default_instance() {
  ::protobuf_StatusData_2eproto::InitDefaultsPlayerStatus();
  return *internal_default_instance();
}

PlayerStatus* PlayerStatus::New(::google::protobuf::Arena* arena) const {
  PlayerStatus* n = new PlayerStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.PlayerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!teamid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*teamid_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!symbol_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*symbol_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(totals_ != NULL);
      totals_->Clear();
    }
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.PlayerStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string teamid = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->teamid().data(), static_cast<int>(this->teamid().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PlayerStatus.teamid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.PlayerStatus.Status status = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::PlayerStatus_Status_IsValid(value)) {
            set_status(static_cast< ::fantasybit::PlayerStatus_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                30, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .fantasybit.PlayerResult totals = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_totals()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string symbol = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->symbol().data(), static_cast<int>(this->symbol().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.PlayerStatus.symbol");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.PlayerStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.PlayerStatus)
  return false;
#undef DO_
}

void PlayerStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.PlayerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string teamid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teamid().data(), static_cast<int>(this->teamid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerStatus.teamid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->teamid(), output);
  }

  // optional .fantasybit.PlayerStatus.Status status = 30;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      30, this->status(), output);
  }

  // optional .fantasybit.PlayerResult totals = 40;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40, *this->totals_, output);
  }

  // optional string symbol = 50;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerStatus.symbol");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->symbol(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.PlayerStatus)
}

::google::protobuf::uint8* PlayerStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.PlayerStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string teamid = 20;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teamid().data(), static_cast<int>(this->teamid().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerStatus.teamid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->teamid(), target);
  }

  // optional .fantasybit.PlayerStatus.Status status = 30;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      30, this->status(), target);
  }

  // optional .fantasybit.PlayerResult totals = 40;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, *this->totals_, deterministic, target);
  }

  // optional string symbol = 50;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->symbol().data(), static_cast<int>(this->symbol().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.PlayerStatus.symbol");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->symbol(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.PlayerStatus)
  return target;
}

size_t PlayerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.PlayerStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string teamid = 20;
    if (has_teamid()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->teamid());
    }

    // optional string symbol = 50;
    if (has_symbol()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional .fantasybit.PlayerResult totals = 40;
    if (has_totals()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *this->totals_);
    }

    // optional .fantasybit.PlayerStatus.Status status = 30;
    if (has_status()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.PlayerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.PlayerStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.PlayerStatus)
    MergeFrom(*source);
  }
}

void PlayerStatus::MergeFrom(const PlayerStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.PlayerStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_teamid();
      teamid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_symbol();
      symbol_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.symbol_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_totals()->::fantasybit::PlayerResult::MergeFrom(from.totals());
    }
    if (cached_has_bits & 0x00000008u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.PlayerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerStatus::CopyFrom(const PlayerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.PlayerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerStatus::IsInitialized() const {
  return true;
}

void PlayerStatus::Swap(PlayerStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerStatus::InternalSwap(PlayerStatus* other) {
  using std::swap;
  teamid_.Swap(&other->teamid_);
  symbol_.Swap(&other->symbol_);
  swap(totals_, other->totals_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerStatus::GetMetadata() const {
  protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StatusData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameStatus::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameStatus::kStatusFieldNumber;
const int GameStatus::kDatetimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameStatus::GameStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StatusData_2eproto::InitDefaultsGameStatus();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GameStatus)
}
GameStatus::GameStatus(const GameStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&status_, &from.status_,
    static_cast<size_t>(reinterpret_cast<char*>(&datetime_) -
    reinterpret_cast<char*>(&status_)) + sizeof(datetime_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.GameStatus)
}

void GameStatus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datetime_) -
      reinterpret_cast<char*>(&status_)) + sizeof(datetime_));
}

GameStatus::~GameStatus() {
  // @@protoc_insertion_point(destructor:fantasybit.GameStatus)
  SharedDtor();
}

void GameStatus::SharedDtor() {
}

void GameStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameStatus::descriptor() {
  ::protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StatusData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameStatus& GameStatus::default_instance() {
  ::protobuf_StatusData_2eproto::InitDefaultsGameStatus();
  return *internal_default_instance();
}

GameStatus* GameStatus::New(::google::protobuf::Arena* arena) const {
  GameStatus* n = new GameStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GameStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&status_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&datetime_) -
        reinterpret_cast<char*>(&status_)) + sizeof(datetime_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GameStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.GameStatus.Status status = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::GameStatus_Status_IsValid(value)) {
            set_status(static_cast< ::fantasybit::GameStatus_Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                10, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 datetime = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_datetime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &datetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GameStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GameStatus)
  return false;
#undef DO_
}

void GameStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GameStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GameStatus.Status status = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->status(), output);
  }

  // optional uint32 datetime = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->datetime(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GameStatus)
}

::google::protobuf::uint8* GameStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GameStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GameStatus.Status status = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->status(), target);
  }

  // optional uint32 datetime = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->datetime(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GameStatus)
  return target;
}

size_t GameStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GameStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .fantasybit.GameStatus.Status status = 10;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional uint32 datetime = 20;
    if (has_datetime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->datetime());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GameStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const GameStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GameStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GameStatus)
    MergeFrom(*source);
  }
}

void GameStatus::MergeFrom(const GameStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GameStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000002u) {
      datetime_ = from.datetime_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GameStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameStatus::CopyFrom(const GameStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GameStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameStatus::IsInitialized() const {
  return true;
}

void GameStatus::Swap(GameStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameStatus::InternalSwap(GameStatus* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(datetime_, other->datetime_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameStatus::GetMetadata() const {
  protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StatusData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TeamDepth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamDepth::kQbFieldNumber;
const int TeamDepth::kRbFieldNumber;
const int TeamDepth::kWrFieldNumber;
const int TeamDepth::kTeFieldNumber;
const int TeamDepth::kKFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamDepth::TeamDepth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StatusData_2eproto::InitDefaultsTeamDepth();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.TeamDepth)
}
TeamDepth::TeamDepth(const TeamDepth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      qb_(from.qb_),
      rb_(from.rb_),
      wr_(from.wr_),
      te_(from.te_),
      k_(from.k_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:fantasybit.TeamDepth)
}

void TeamDepth::SharedCtor() {
  _cached_size_ = 0;
}

TeamDepth::~TeamDepth() {
  // @@protoc_insertion_point(destructor:fantasybit.TeamDepth)
  SharedDtor();
}

void TeamDepth::SharedDtor() {
}

void TeamDepth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamDepth::descriptor() {
  ::protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StatusData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TeamDepth& TeamDepth::default_instance() {
  ::protobuf_StatusData_2eproto::InitDefaultsTeamDepth();
  return *internal_default_instance();
}

TeamDepth* TeamDepth::New(::google::protobuf::Arena* arena) const {
  TeamDepth* n = new TeamDepth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamDepth::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.TeamDepth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  qb_.Clear();
  rb_.Clear();
  wr_.Clear();
  te_.Clear();
  k_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamDepth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.TeamDepth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string qb = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_qb()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->qb(this->qb_size() - 1).data(),
            static_cast<int>(this->qb(this->qb_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamDepth.qb");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string rb = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_rb()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rb(this->rb_size() - 1).data(),
            static_cast<int>(this->rb(this->rb_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamDepth.rb");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string wr = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_wr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wr(this->wr_size() - 1).data(),
            static_cast<int>(this->wr(this->wr_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamDepth.wr");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string te = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_te()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->te(this->te_size() - 1).data(),
            static_cast<int>(this->te(this->te_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamDepth.te");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string k = 50;
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_k()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->k(this->k_size() - 1).data(),
            static_cast<int>(this->k(this->k_size() - 1).length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "fantasybit.TeamDepth.k");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.TeamDepth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.TeamDepth)
  return false;
#undef DO_
}

void TeamDepth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.TeamDepth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string qb = 10;
  for (int i = 0, n = this->qb_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qb(i).data(), static_cast<int>(this->qb(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.qb");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      10, this->qb(i), output);
  }

  // repeated string rb = 20;
  for (int i = 0, n = this->rb_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rb(i).data(), static_cast<int>(this->rb(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.rb");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      20, this->rb(i), output);
  }

  // repeated string wr = 30;
  for (int i = 0, n = this->wr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wr(i).data(), static_cast<int>(this->wr(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.wr");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->wr(i), output);
  }

  // repeated string te = 40;
  for (int i = 0, n = this->te_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->te(i).data(), static_cast<int>(this->te(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.te");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      40, this->te(i), output);
  }

  // repeated string k = 50;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.k");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      50, this->k(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.TeamDepth)
}

::google::protobuf::uint8* TeamDepth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.TeamDepth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string qb = 10;
  for (int i = 0, n = this->qb_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qb(i).data(), static_cast<int>(this->qb(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.qb");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(10, this->qb(i), target);
  }

  // repeated string rb = 20;
  for (int i = 0, n = this->rb_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rb(i).data(), static_cast<int>(this->rb(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.rb");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(20, this->rb(i), target);
  }

  // repeated string wr = 30;
  for (int i = 0, n = this->wr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wr(i).data(), static_cast<int>(this->wr(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.wr");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(30, this->wr(i), target);
  }

  // repeated string te = 40;
  for (int i = 0, n = this->te_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->te(i).data(), static_cast<int>(this->te(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.te");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(40, this->te(i), target);
  }

  // repeated string k = 50;
  for (int i = 0, n = this->k_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->k(i).data(), static_cast<int>(this->k(i).length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "fantasybit.TeamDepth.k");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(50, this->k(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.TeamDepth)
  return target;
}

size_t TeamDepth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.TeamDepth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated string qb = 10;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->qb_size());
  for (int i = 0, n = this->qb_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->qb(i));
  }

  // repeated string rb = 20;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->rb_size());
  for (int i = 0, n = this->rb_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->rb(i));
  }

  // repeated string wr = 30;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->wr_size());
  for (int i = 0, n = this->wr_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->wr(i));
  }

  // repeated string te = 40;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->te_size());
  for (int i = 0, n = this->te_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->te(i));
  }

  // repeated string k = 50;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->k_size());
  for (int i = 0, n = this->k_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->k(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamDepth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.TeamDepth)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamDepth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamDepth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.TeamDepth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.TeamDepth)
    MergeFrom(*source);
  }
}

void TeamDepth::MergeFrom(const TeamDepth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.TeamDepth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  qb_.MergeFrom(from.qb_);
  rb_.MergeFrom(from.rb_);
  wr_.MergeFrom(from.wr_);
  te_.MergeFrom(from.te_);
  k_.MergeFrom(from.k_);
}

void TeamDepth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.TeamDepth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamDepth::CopyFrom(const TeamDepth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.TeamDepth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamDepth::IsInitialized() const {
  return true;
}

void TeamDepth::Swap(TeamDepth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamDepth::InternalSwap(TeamDepth* other) {
  using std::swap;
  qb_.InternalSwap(&other->qb_);
  rb_.InternalSwap(&other->rb_);
  wr_.InternalSwap(&other->wr_);
  te_.InternalSwap(&other->te_);
  k_.InternalSwap(&other->k_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamDepth::GetMetadata() const {
  protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StatusData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GlobalState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GlobalState::kStateFieldNumber;
const int GlobalState::kSeasonFieldNumber;
const int GlobalState::kWeekFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GlobalState::GlobalState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_StatusData_2eproto::InitDefaultsGlobalState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:fantasybit.GlobalState)
}
GlobalState::GlobalState(const GlobalState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&season_, &from.season_,
    static_cast<size_t>(reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&season_)) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:fantasybit.GlobalState)
}

void GlobalState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&season_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&week_) -
      reinterpret_cast<char*>(&season_)) + sizeof(week_));
  state_ = 10;
}

GlobalState::~GlobalState() {
  // @@protoc_insertion_point(destructor:fantasybit.GlobalState)
  SharedDtor();
}

void GlobalState::SharedDtor() {
}

void GlobalState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GlobalState::descriptor() {
  ::protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StatusData_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GlobalState& GlobalState::default_instance() {
  ::protobuf_StatusData_2eproto::InitDefaultsGlobalState();
  return *internal_default_instance();
}

GlobalState* GlobalState::New(::google::protobuf::Arena* arena) const {
  GlobalState* n = new GlobalState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GlobalState::Clear() {
// @@protoc_insertion_point(message_clear_start:fantasybit.GlobalState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&season_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&week_) -
        reinterpret_cast<char*>(&season_)) + sizeof(week_));
    state_ = 10;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GlobalState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:fantasybit.GlobalState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .fantasybit.GlobalState.State state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::fantasybit::GlobalState_State_IsValid(value)) {
            set_state(static_cast< ::fantasybit::GlobalState_State >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 season = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_season();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &season_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 week = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          set_has_week();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &week_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:fantasybit.GlobalState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:fantasybit.GlobalState)
  return false;
#undef DO_
}

void GlobalState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:fantasybit.GlobalState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GlobalState.State state = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // optional uint32 season = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->season(), output);
  }

  // optional uint32 week = 20;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->week(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:fantasybit.GlobalState)
}

::google::protobuf::uint8* GlobalState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:fantasybit.GlobalState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .fantasybit.GlobalState.State state = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // optional uint32 season = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->season(), target);
  }

  // optional uint32 week = 20;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->week(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:fantasybit.GlobalState)
  return target;
}

size_t GlobalState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:fantasybit.GlobalState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 season = 10;
    if (has_season()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->season());
    }

    // optional uint32 week = 20;
    if (has_week()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->week());
    }

    // optional .fantasybit.GlobalState.State state = 1;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GlobalState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:fantasybit.GlobalState)
  GOOGLE_DCHECK_NE(&from, this);
  const GlobalState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GlobalState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:fantasybit.GlobalState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:fantasybit.GlobalState)
    MergeFrom(*source);
  }
}

void GlobalState::MergeFrom(const GlobalState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:fantasybit.GlobalState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      season_ = from.season_;
    }
    if (cached_has_bits & 0x00000002u) {
      week_ = from.week_;
    }
    if (cached_has_bits & 0x00000004u) {
      state_ = from.state_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GlobalState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:fantasybit.GlobalState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GlobalState::CopyFrom(const GlobalState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:fantasybit.GlobalState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalState::IsInitialized() const {
  return true;
}

void GlobalState::Swap(GlobalState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GlobalState::InternalSwap(GlobalState* other) {
  using std::swap;
  swap(season_, other->season_);
  swap(week_, other->week_);
  swap(state_, other->state_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GlobalState::GetMetadata() const {
  protobuf_StatusData_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_StatusData_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace fantasybit

// @@protoc_insertion_point(global_scope)
